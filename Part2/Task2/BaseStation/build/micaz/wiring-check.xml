<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="84:BaseStationC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2ae83d92f368"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2ae83d766940"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2ae83d766940"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2ae83d763e20"/></to>
    </wire>
    <wire loc="86:BaseStationC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x2ae83d92e6b8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2ae83da293b0"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2ae83da293b0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2ae83da47310"/></to>
    </wire>
    <wire loc="87:BaseStationC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x2ae83d929af8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2ae83e6b8758"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2ae83e6b8758"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2ae83e6e8728"/></to>
    </wire>
    <wire loc="89:BaseStationC.nc">
      <from><interface-ref name="UartSend" scoped="" ref="0x2ae83d977a68"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2ae83e6b5798"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2ae83e6b5798"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2ae83e6ac460"/></to>
    </wire>
    <wire loc="90:BaseStationC.nc">
      <from><interface-ref name="UartReceive" scoped="" ref="0x2ae83d974690"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ae83e6b4928"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2ae83e6b4928"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ae83e6f1180"/></to>
    </wire>
    <wire loc="91:BaseStationC.nc">
      <from><interface-ref name="UartPacket" scoped="" ref="0x2ae83d980ac0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2ae83e6b3020"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2ae83e6b3020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2ae83e6f0d20"/></to>
    </wire>
    <wire loc="92:BaseStationC.nc">
      <from><interface-ref name="UartAMPacket" scoped="" ref="0x2ae83d99b270"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ae83e6b3c30"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ae83e6b3c30"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ae83e6f1738"/></to>
    </wire>
    <wire loc="94:BaseStationC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x2ae83d976e58"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2ae83da28348"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2ae83da28348"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2ae83da602b0"/></to>
    </wire>
    <wire loc="95:BaseStationC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2ae83d9991c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ae83da26498"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2ae83da26498"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ae83da5f3c8"/></to>
    </wire>
    <wire loc="96:BaseStationC.nc">
      <from><interface-ref name="RadioSnoop" scoped="" ref="0x2ae83d999d40"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2ae83da25020"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2ae83da25020"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2ae83da5e020"/></to>
    </wire>
    <wire loc="97:BaseStationC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2ae83d998410"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2ae83da255f8"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2ae83da255f8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2ae83da5cbd8"/></to>
    </wire>
    <wire loc="98:BaseStationC.nc">
      <from><interface-ref name="RadioAMPacket" scoped="" ref="0x2ae83d997148"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ae83da242c0"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ae83da242c0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ae83da5e610"/></to>
    </wire>
    <wire loc="100:BaseStationC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2ae83d995020"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2ae83d9f77d8"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2ae83d9f77d8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2ae83d9f0020"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ae83d768d50"/></from>
      <to><interface-ref name="Uart0Init" scoped="" ref="0x2ae83e8cae38"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ae83d768d50"/></from>
      <to><interface-ref name="Uart1Init" scoped="" ref="0x2ae83e8c4ca8"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ae83d768d50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ae83e88c120"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ae83d768d50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ae83e6e8110"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ae83d768d50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ae83e5cec28"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ae83d768d50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ae83e539628"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ae83d768d50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ae83e512080"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ae83d768d50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ae83e52e198"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ae83d768d50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ae83e38d080"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ae83d768d50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ae83e2a1020"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ae83d768d50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ae83e1b7b80"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ae83d768d50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ae83dbc83c0"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ae83d768d50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ae83ee7f620"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ae83d768d50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ae83df93438"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ae83d768d50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ae83db2b020"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2ae83d90b490"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2ae83d66dbe8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2ae83d66dbe8"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2ae83d72ac00"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2ae83d90be68"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ae83d767cc8"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2ae83d767cc8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ae83d7774f0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ae83d90a560"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2ae83d768d50"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.2/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2ae83d7719a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ae83ea00940"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.2/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2ae83d7719a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ae83dd50190"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x2ae83d76db98"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x2ae83d8ee7e8"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x2ae83d776398"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ae83d8ee1b8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2ae83d777b90"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ae83da16460"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2ae83d777b90"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2ae83d779a08"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2ae83d779a08"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2ae83d77d428"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2ae83d780108"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2ae83d7719a0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x2ae83d7845f8"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x2ae83d7941a0"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x2ae83d7941a0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2ae83d818430"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2ae83d77b7f8"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2ae83d780108"/></to>
    </wire>
    <wire loc="191:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x2ae83d7c9c78"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae83d8a0970"/></to>
    </wire>
    <wire loc="165:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x2ae83d7a67e0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2ae83d841020"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2ae83d841020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae83eba0100"/></to>
    </wire>
    <wire loc="176:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x2ae83d7b87e0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2ae83d855d60"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2ae83d855d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae83ebf2100"/></to>
    </wire>
    <wire loc="185:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x2ae83d7be4d0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2ae83d8585b8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2ae83d8585b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae83ec4c100"/></to>
    </wire>
    <wire loc="143:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x2ae83d7924d0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2ae83d816740"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2ae83d816740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae83ea9e020"/></to>
    </wire>
    <wire loc="183:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x2ae83d7c01a0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2ae83d85a2a8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2ae83d85a2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae83ec52100"/></to>
    </wire>
    <wire loc="146:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x2ae83d7907e0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2ae83d81e930"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2ae83d81e930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae83eaa3180"/></to>
    </wire>
    <wire loc="157:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x2ae83d7a1968"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2ae83d82d740"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2ae83d82d740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae83eb49100"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x2ae83d7b1c78"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2ae83d83e430"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2ae83d83e430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae83eb97100"/></to>
    </wire>
    <wire loc="179:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x2ae83d7b5c78"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2ae83d851120"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2ae83d851120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae83ebe9100"/></to>
    </wire>
    <wire loc="138:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x2ae83d78ac78"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2ae83d80b020"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2ae83d80b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae83ea4b020"/></to>
    </wire>
    <wire loc="149:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x2ae83d79bc78"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2ae83d81bd60"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2ae83d81bd60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae83eaf5100"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x2ae83d79de00"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2ae83d83abd8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2ae83d83abd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae83eb40100"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x2ae83d7ad1a0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2ae83d83b8c8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2ae83d83b8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae83eb8e100"/></to>
    </wire>
    <wire loc="188:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x2ae83d7bb968"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2ae83d866a50"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2ae83d866a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae83eca5100"/></to>
    </wire>
    <wire loc="194:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x2ae83d7c57e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae83d8b6020"/></to>
    </wire>
    <wire loc="174:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x2ae83d7ab4d0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2ae83d845a50"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2ae83d845a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae83ebf8100"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2ae83d818430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae83ea42020"/></to>
    </wire>
    <wire loc="152:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x2ae83d797348"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2ae83d826120"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2ae83d826120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae83eaec100"/></to>
    </wire>
    <wire loc="192:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x2ae83d7c74d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae83d8adab0"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x2ae83d7a3658"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2ae83d82f500"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2ae83d82f500"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae83eb4f180"/></to>
    </wire>
    <wire loc="166:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x2ae83d7a5968"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2ae83d840120"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2ae83d840120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae83eb9d100"/></to>
    </wire>
    <wire loc="177:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x2ae83d7b7968"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2ae83d854e18"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2ae83d854e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae83ebef100"/></to>
    </wire>
    <wire loc="186:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x2ae83d7bd658"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2ae83d857740"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2ae83d857740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae83ec49100"/></to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x2ae83d791658"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2ae83d8158c8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2ae83d8158c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae83ea9b020"/></to>
    </wire>
    <wire loc="147:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x2ae83d78f968"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2ae83d81da50"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2ae83d81da50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae83eafb100"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x2ae83d79faf0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2ae83d82b8c8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2ae83d82b8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae83eb46100"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x2ae83d7b0e00"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2ae83d83d5b8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2ae83d83d5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae83eb94100"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x2ae83d7b4e00"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2ae83d8502a8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2ae83d8502a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae83ec46100"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x2ae83d789e00"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2ae83d80a120"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2ae83d80a120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae83ea48020"/></to>
    </wire>
    <wire loc="150:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x2ae83d79ae00"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2ae83d81ae18"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2ae83d81ae18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae83eaf2100"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x2ae83d7a9020"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2ae83d839d60"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2ae83d839d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae83eb3d100"/></to>
    </wire>
    <wire loc="189:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x2ae83d7baaf0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2ae83d865bd8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2ae83d865bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae83eca2100"/></to>
    </wire>
    <wire loc="164:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x2ae83d7a7348"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2ae83d843e40"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2ae83d843e40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae83eba3180"/></to>
    </wire>
    <wire loc="175:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x2ae83d7b9658"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2ae83d844bd8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2ae83d844bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae83ebf5100"/></to>
    </wire>
    <wire loc="184:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x2ae83d7bf348"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2ae83d859430"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2ae83d859430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae83ec4f100"/></to>
    </wire>
    <wire loc="195:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x2ae83d7c4968"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae83d8b1180"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x2ae83d793348"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2ae83d8175b8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2ae83d8175b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae83eaa1020"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x2ae83d7964d0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2ae83d8252a8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2ae83d8252a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae83eae9100"/></to>
    </wire>
    <wire loc="182:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x2ae83d7b2020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2ae83d85b1e8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2ae83d85b1e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae83ec56180"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x2ae83d7a27e0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2ae83d82e5b8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2ae83d82e5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae83eb4c100"/></to>
    </wire>
    <wire loc="167:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x2ae83d7a4af0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2ae83d83f2a8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2ae83d83f2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae83eb9a100"/></to>
    </wire>
    <wire loc="178:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x2ae83d7b6af0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2ae83d852020"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2ae83d852020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae83ebec100"/></to>
    </wire>
    <wire loc="187:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x2ae83d7bc7e0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2ae83d8568c8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2ae83d8568c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae83eca8100"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x2ae83d77fab0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2ae83d80ddc0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2ae83d80ddc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae83ea4e020"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x2ae83d79caf0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2ae83d81cbd8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2ae83d81cbd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae83eaf8100"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x2ae83d79ec78"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2ae83d82aa50"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2ae83d82aa50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae83eb43100"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x2ae83d7ae020"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2ae83d83c740"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2ae83d83c740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae83eb91100"/></to>
    </wire>
    <wire loc="193:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x2ae83d7c6658"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae83d8a9c38"/></to>
    </wire>
    <wire loc="173:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x2ae83d7ac348"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2ae83d846930"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2ae83d846930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae83ebfc180"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x2ae83d7a81a0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2ae83d838e18"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2ae83d838e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae83eb3a100"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x2ae83d795020"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2ae83d8192a8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2ae83d8192a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae83ea45020"/></to>
    </wire>
    <wire loc="151:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x2ae83d798100"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2ae83d828020"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2ae83d828020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ae83eaef100"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x2ae83d66e728"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ae83d729b08"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x2ae83d726020"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x2ae83d677dc8"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x2ae83d74a7b8"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x2ae83dc3c790"/></to>
    </wire>
    <wire loc="98:BaseStationP.nc">
      <from><interface-ref name="uartSendTask" scoped="" ref="0x2ae83d9b0100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ae83d66e728"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="99:BaseStationP.nc">
      <from><interface-ref name="radioSendTask" scoped="" ref="0x2ae83d9af020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ae83d66e728"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2ae83da16460"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ae83d9f39b8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2ae83da076c8"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x2ae83da19060"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2ae83da19060"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x2ae83d789e00"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2ae83da06958"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x2ae83da181f0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2ae83da181f0"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x2ae83d78ac78"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2ae83da05ae0"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x2ae83da17378"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2ae83da17378"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x2ae83d77fab0"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2ae83da47310"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2ae83da87020"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2ae83da602b0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2ae83e625980"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2ae83da5e020"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2ae83e622628"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2ae83da5cbd8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2ae83e6202a8"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2ae83da22020"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2ae83e310130"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2ae83e310130"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2ae83e33e060"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2ae83da3a848"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2ae83da6b628"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2ae83da6b628"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2ae83da8c668"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2ae83da5f3c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ae83e624ab0"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ae83da33290"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ae83da5a7e0"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ae83da5a7e0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ae83da8e658"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ae83da5e610"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ae83e622c18"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2ae83da44e48"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2ae83e30c020"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2ae83e30c020"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2ae83e33a020"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2ae83da87020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2ae83e5c3dc8"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x2ae83da62700"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2ae83e61e020"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x2ae83da791c8"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2ae83e61f400"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2ae83da6d888"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2ae83da907e8"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2ae83da907e8"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2ae83e3154a8"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2ae83da8c668"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2ae83e5c3318"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ae83da8e658"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2ae83e3123b8"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2ae83da72450"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2ae83da8b128"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2ae83da8b128"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2ae83e5f72d0"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2ae83da697b0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2ae83da8c020"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2ae83da8c020"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2ae83e3116b0"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0x2ae83e616698"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ae83da86340"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2ae83e61c020"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x2ae83da7e4c8"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x2ae83da7e4c8"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x2ae83e555db8"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2ae83e61ccc8"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x2ae83da901d0"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x2ae83da901d0"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x2ae83e554ae8"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2ae83e6188d0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2ae83e18e2b8"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2ae83e61b368"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2ae83e3154a8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2ae83e3154a8"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2ae83e3412e8"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ae83e61a188"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ae83e312d08"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ae83e312d08"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ae83e340b60"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x2ae83e61aab0"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x2ae83db18af8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x2ae83db18af8"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x2ae83db2a328"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x2ae83e6176a0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2ae83daa0678"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x2ae83daa0678"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2ae83da9bc98"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2ae83e6152a8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2ae83d9f77d8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2ae83e5c3dc8"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x2ae83e5c0d28"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2ae83e3116b0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2ae83e33f630"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2ae83e5f72d0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2ae83e5f5540"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x2ae83e555db8"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x2ae83e590490"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2ae83e5c3318"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2ae83e5bc170"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x2ae83da80020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ae83e555748"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2ae83e555748"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x2ae83e591dc8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2ae83e3123b8"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2ae83e340210"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ae83da86340"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ae83e53fe20"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ae83e53fe20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ae83e592428"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x2ae83da8f330"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2ae83e556a40"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2ae83e556a40"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x2ae83e591118"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x2ae83da806a0"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x2ae83e5531a8"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x2ae83e5531a8"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x2ae83e58f808"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x2ae83e554ae8"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x2ae83e58f188"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x2ae83e5c0d28"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2ae83da8a770"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2ae83da8a770"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2ae83da9c4f0"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2ae83e552670"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2ae83e51ad08"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2ae83e51ad08"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2ae83e513438"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2ae83e517a40"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2ae83e5fa5c8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2ae83e5fa5c8"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2ae83e5f6020"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2ae83e5f6020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2ae83e5c4080"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2ae83e5c4080"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2ae83e5c1838"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2ae83e5c1838"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2ae83daa12d8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2ae83daa12d8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2ae83da9b020"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2ae83e552020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ae83e5c4c80"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2ae83e5c4c80"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2ae83e5c0668"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2ae83e5c0668"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ae83e541750"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2ae83e541750"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ae83e53c958"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2ae83e53d560"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ae83daa0020"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2ae83daa0020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ae83e2a52f0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2ae83e2a52f0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ae83e2a07a0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ae83da9aaa8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ae83db0ce00"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ae83db0ce00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ae83db2b650"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x2ae83daacb68"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x2ae83db078b0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x2ae83db078b0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x2ae83db28080"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x2ae83daa95f0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2ae83e1a6c48"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x2ae83daa95f0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2ae83e2a6080"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2ae83e2a6080"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2ae83e2a1660"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2ae83e1a6c48"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2ae83e1b6310"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x2ae83daa2d48"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x2ae83e1a3480"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x2ae83e1a3480"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2ae83e1b6b70"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x2ae83daaaaa8"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2ae83e1a2140"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x2ae83e1a2140"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2ae83e1b5948"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2ae83dabbc58"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2ae83e3154a8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ae83dab8020"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ae83e312d08"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2ae83dabad58"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2ae83e4ebb98"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2ae83e4ebb98"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2ae83e52da08"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x2ae83dac9540"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2ae83e4ed338"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2ae83e4ed338"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2ae83df97790"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2ae83dabc518"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2ae83d9f77d8"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x2ae83dac5b80"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ae83d66e728"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x2ae83dac6cf8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ae83d66e728"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x2ae83dac7e68"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ae83d66e728"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x2ae83db13d28"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x2ae83db274d0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x2ae83db24060"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x2ae83dbc8d38"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x2ae83dbc8d38"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2ae83dbe19e8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x2ae83db35020"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x2ae83de1fde0"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x2ae83de1fde0"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x2ae83d7907e0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x2ae83db341b0"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x2ae83de1b338"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x2ae83de1b338"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x2ae83d7924d0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x2ae83db33378"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x2ae83de19648"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x2ae83de19648"/></from>
      <to><interface-ref name="PortA5" scoped="" ref="0x2ae83d793348"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x2ae83db2eb78"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x2ae83de36a60"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x2ae83de36a60"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x2ae83dec3cf0"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2ae83db563b0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ae83e126280"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ae83e126280"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ae83df06808"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2ae83db55518"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x2ae83e123a50"/></to>
    </wire>
    <wire loc="118:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2ae83e123a50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ae83defe1c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2ae83db55bf0"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x2ae83e122cd0"/></to>
    </wire>
    <wire loc="121:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2ae83e122cd0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ae83defe1c8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2ae83db57ca0"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x2ae83e125de8"/></to>
    </wire>
    <wire loc="116:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2ae83e125de8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ae83defe1c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2ae83db573c0"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x2ae83e121368"/></to>
    </wire>
    <wire loc="122:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2ae83e121368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ae83defe1c8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2ae83db41120"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x2ae83e119838"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2ae83e119838"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2ae83db41990"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x2ae83e1167c0"/></to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2ae83e1167c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2ae83db3f230"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x2ae83e115020"/></to>
    </wire>
    <wire loc="145:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2ae83e115020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2ae83db3fab8"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x2ae83e11ddd8"/></to>
    </wire>
    <wire loc="133:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2ae83e11ddd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2ae83db3d3d0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x2ae83e11c5c0"/></to>
    </wire>
    <wire loc="134:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2ae83e11c5c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2ae83db30a60"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x2ae83e1107c0"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2ae83e1107c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ae83df005e0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2ae83db30128"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x2ae83e110020"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2ae83e110020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ae83df005e0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2ae83db3dc48"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x2ae83e11ac90"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2ae83e11ac90"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2ae83db3c530"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x2ae83e11cd60"/></to>
    </wire>
    <wire loc="135:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2ae83e11cd60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2ae83db3cda0"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x2ae83e11bcc8"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2ae83e11bcc8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x2ae83db54e50"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ae83e134a48"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ae83e134a48"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ae83df06808"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x2ae83db54140"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ae83e1461a8"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ae83e1461a8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ae83df06808"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2ae83db461b0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2ae83e18e2b8"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2ae83db237f0"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2ae83e190d10"/></to>
    </wire>
    <wire loc="126:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x2ae83db673f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ae83d66e728"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x2ae83db4a598"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ae83d66e728"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2ae83dbc83c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ae83de23928"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2ae83de23928"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ae83de01a58"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2ae83dbe19e8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2ae83ed64b48"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2/tos/platforms/mica/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2ae83ed64b48"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2ae83ed58e00"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2/tos/platforms/mica/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x2ae83ed51310"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2ae83ed5d020"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2ae83ed5d020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2ae83edb1420"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2.1.2/tos/platforms/mica/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2ae83ed54128"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2ae83dd95d70"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.1.2/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2ae83dd95d70"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2ae83ddcc0e0"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x2ae83edad540"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ae83dbea020"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2ae83dbea020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ae83dc90490"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x2ae83eda85a8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2ae83dc09020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2ae83dbfd0c0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2ae83dcad568"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x2ae83dc0db68"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2ae83dcacca0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2ae83dc09020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x2ae83dca7540"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2ae83dc09020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x2ae83dca38e8"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2ae83dc09020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x2ae83dc9fb88"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer0Ctrl" scoped="" ref="0x2ae83dcbd020"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2ae83dc31950"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2ae83dc31950"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2ae83dc41558"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x2ae83dc27470"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x2ae83dc3b020"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2ae83dc17980"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2ae83dc40670"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2ae83dc1fd90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ae83dc25400"/></to>
    </wire>
    <wire loc="27:/opt/tinyos-2.1.2/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2ae83dd508b0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ae83dbea020"/></to>
    </wire>
    <wire loc="34:/opt/tinyos-2.1.2/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x2ae83ddc92b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2ae83dd94ad0"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2ae83dd94ad0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2ae83dd8ca98"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2ae83dda0b78"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ae83dbea020"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x2ae83de1d020"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x2ae83d7964d0"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x2ae83de1c198"/></from>
      <to><interface-ref name="PortE6" scoped="" ref="0x2ae83d7b5c78"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x2ae83dbc9c88"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x2ae83d7ae020"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x2ae83de1a4b0"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x2ae83d7b1c78"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x2ae83de33e80"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2ae83de31c40"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x2ae83de35710"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x2ae83de412c8"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Atm128Capture" scoped="" ref="0x2ae83de49888"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2ae83dc0db68"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x2ae83de41d78"/></from>
      <to><interface-ref name="Int6" scoped="" ref="0x2ae83de7ab38"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int6" scoped="" ref="0x2ae83de7ab38"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2ae83dea6cd8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CC_CCA" scoped="" ref="0x2ae83dec08e0"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x2ae83dbc9c88"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x2ae83de55bf0"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2ae83de91cf8"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int4" scoped="" ref="0x2ae83de52b38"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2ae83deae180"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int7" scoped="" ref="0x2ae83de79b38"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2ae83decd9d8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x2ae83de54b38"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2ae83deb77e8"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int5" scoped="" ref="0x2ae83de7bb38"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2ae83deaa020"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x2ae83de58d50"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2ae83de7e258"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x2ae83de53b38"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2ae83deb33e0"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2ae83de94060"/></from>
      <to><interface-ref name="IntSig0" scoped="" ref="0x2ae83de72850"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2ae83debab10"/></from>
      <to><interface-ref name="IntSig1" scoped="" ref="0x2ae83de74020"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2ae83deb65f8"/></from>
      <to><interface-ref name="IntSig2" scoped="" ref="0x2ae83de74758"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2ae83deb12e8"/></from>
      <to><interface-ref name="IntSig3" scoped="" ref="0x2ae83de73020"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2ae83dead020"/></from>
      <to><interface-ref name="IntSig4" scoped="" ref="0x2ae83de73758"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2ae83deaade0"/></from>
      <to><interface-ref name="IntSig5" scoped="" ref="0x2ae83de70020"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2ae83ded0b10"/></from>
      <to><interface-ref name="IntSig6" scoped="" ref="0x2ae83de70758"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2ae83decc908"/></from>
      <to><interface-ref name="IntSig7" scoped="" ref="0x2ae83de6f020"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <from><interface-ref name="CCATask" scoped="" ref="0x2ae83debc278"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ae83d66e728"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2ae83e123438"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ae83defe1c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2ae83e1177c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2ae83e116020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2ae83e1407c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ae83df005e0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2ae83e10e7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ae83df005e0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2ae83e1226b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ae83defe1c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2ae83e10f7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ae83df005e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2ae83e113020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2ae83e126e78"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2ae83df034c8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2ae83df034c8"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2ae83df274e8"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2ae83e120020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ae83defe1c8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2ae83e120638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ae83defe1c8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2ae83e120d50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ae83defe1c8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2ae83e10e020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ae83df005e0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2ae83e11b528"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2ae83e140020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ae83df005e0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2ae83e10d020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ae83df005e0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2ae83e1137c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2ae83e10f020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ae83df005e0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2ae83e1157c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2ae83e13f020"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2ae83df013c8"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="115:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2ae83e1257d0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ae83defe1c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2ae83e11d638"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2ae83e11a4f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2ae83e117020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="127:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2ae83e11f3a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ae83defe1c8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2ae83e11d020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ae83defe1c8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2ae83e121980"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ae83defe1c8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2ae83e1127c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2ae83e10d7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ae83df005e0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2ae83e112020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2ae83e1220a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ae83defe1c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2ae83e1147c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2ae83e114020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2ae83e11f9b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ae83defe1c8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2ae83e13d0a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2ae83df013c8"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x2ae83df013c8"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2ae83df244d0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x2ae83df005e0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ae83df23680"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83df223c8"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ae83df06808"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ae83df26300"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x2ae83defe1c8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ae83df211c8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x2ae83df1e0e0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2ae83df6e978"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2ae83df6e978"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2ae83df97790"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2ae83df218e8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ae83e0de020"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ae83e0de020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ae83e0ef870"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2ae83df1c470"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2ae83e0dec18"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2ae83e0dec18"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2ae83dfa5a20"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2ae83df14860"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2ae83e0dd2a8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2ae83e0dd2a8"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2ae83df9ccc0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2ae83df1ee50"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2ae83d9f77d8"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x2ae83df3cb80"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ae83d66e728"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2ae83df97790"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2ae83df91020"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2ae83df9ccc0"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2ae83dfc5020"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2ae83dfa5a20"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2ae83dfc7d80"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2ae83e0df960"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ae83dfa5400"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2ae83dfa5400"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ae83dfc77a0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SubResource" scoped="" ref="0x2ae83e0ec700"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ae83dfa19f8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x2ae83e0eb4a8"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x2ae83d7907e0"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x2ae83df9c1f0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x2ae83dfc6428"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ae83dfa19f8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ae83dfc5c88"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0x2ae83dfd8208"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ae83e0c3200"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ae83e0c3200"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ae83ee7ca28"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2ae83dfd35d0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2ae83e0c2760"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2ae83e0c2760"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2ae83ee7a020"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x2ae83dfc3020"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x2ae83e019020"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x2ae83e019020"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x2ae83e016dc0"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x2ae83dfd3d78"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2ae83d74b240"/></to>
    </wire>
    <wire loc="296:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x2ae83dfe5b58"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ae83d66e728"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x2ae83e03a350"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2ae83d74b240"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x2ae83e03dc70"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x2ae83d7907e0"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x2ae83e040de0"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x2ae83d78f968"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x2ae83e03c020"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x2ae83d79caf0"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x2ae83e03b190"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x2ae83d79bc78"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2ae83e0c2020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2ae83ee7b820"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2ae83ee7a8c0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2ae83e0c1020"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2ae83ee790a0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2ae83ee7fbf8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2ae83ee79b50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ae83d66e728"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2ae83e1277c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2ae83e132cd0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ae83defe1c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2ae83e12b7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2ae83e15a2e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2ae83e15aa88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2ae83e14e2e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ae83df005e0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2ae83e1512e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ae83df005e0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2ae83e130020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ae83defe1c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2ae83e1522e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ae83df005e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2ae83e12a7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2ae83e1297c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2ae83e156a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2ae83e1592e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2ae83e133740"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2ae83df034c8"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2ae83e12e900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ae83defe1c8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2ae83e12d020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ae83defe1c8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2ae83e12d738"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ae83defe1c8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2ae83e152a88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ae83df005e0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2ae83e130c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ae83defe1c8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2ae83e129020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2ae83e12a020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2ae83e1326b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ae83defe1c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2ae83e14fa88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ae83df005e0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2ae83e151a88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ae83df005e0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2ae83e1552e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2ae83e153a88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ae83df005e0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2ae83e1582e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2ae83e14ea88"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2ae83df013c8"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="115:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2ae83e1320a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ae83defe1c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2ae83e12b020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2ae83e127020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="145:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2ae83e159a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2ae83e15b2e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2ae83e131368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ae83defe1c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2ae83e15ba88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="127:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2ae83e12dd50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ae83defe1c8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2ae83e12c9b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ae83defe1c8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2ae83e1532e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ae83df005e0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2ae83e154a88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ae83df005e0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2ae83e12e2e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ae83defe1c8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2ae83e1542e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2ae83e14f2e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ae83df005e0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2ae83e155a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2ae83e131980"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ae83defe1c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2ae83e1562e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2ae83e130638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ae83defe1c8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2ae83e158a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2ae83e12c3a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ae83defe1c8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2ae83e14c020"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2ae83df013c8"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2ae83e170c90"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2ae83e1443a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ae83defe1c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2ae83e174dd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2ae83e16e7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2ae83e16d020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2ae83e1627c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ae83df005e0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2ae83e1647c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ae83df005e0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2ae83e142638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ae83defe1c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2ae83e1657c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ae83df005e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2ae83e172d60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2ae83e171cc8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2ae83e169020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2ae83e16d7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2ae83e146da0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2ae83df034c8"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2ae83e176020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ae83defe1c8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2ae83e176638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ae83defe1c8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2ae83e176d50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ae83defe1c8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2ae83e164020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ae83df005e0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2ae83e1412e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ae83defe1c8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2ae83e171528"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2ae83e1725c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2ae83e145d60"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ae83defe1c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2ae83e162020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ae83df005e0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2ae83e163020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ae83df005e0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2ae83e1697c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2ae83e165020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ae83df005e0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2ae83e16b7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2ae83e161020"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2ae83df013c8"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="115:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2ae83e145748"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ae83defe1c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2ae83e174638"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2ae83e1704f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="145:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2ae83e16b020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2ae83e16f838"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2ae83e1449b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ae83defe1c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2ae83e16e020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="127:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2ae83e1753a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ae83defe1c8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2ae83e174020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ae83defe1c8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2ae83e1677c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ae83df005e0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2ae83e167020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ae83df005e0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2ae83e141900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ae83defe1c8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2ae83e1687c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2ae83e1637c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ae83df005e0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2ae83e168020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2ae83e142020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ae83defe1c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2ae83e16a7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2ae83e142c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ae83defe1c8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2ae83e16a020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2ae83e1759b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ae83defe1c8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2ae83e1600a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2ae83df013c8"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x2ae83e1a1cb8"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x2ae83e1b48c0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x2ae83e1a0458"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x2ae83e1b3060"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x2ae83e1b39d8"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x2ae83dbc8d38"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x2ae83e1e08b8"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x2ae83dbc9c88"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x2ae83e1dfc98"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x2ae83de1fde0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x2ae83e1dde20"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x2ae83de1a4b0"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x2ae83e1d8d60"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x2ae83de33e80"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2ae83e1d6020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ae83e25a7d0"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ae83e25a7d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ae83df06808"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2ae83e1d6cb0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2ae83e259430"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2ae83e259430"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2ae83df034c8"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2ae83e1d3670"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x2ae83e259d58"/></to>
    </wire>
    <wire loc="115:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2ae83e259d58"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ae83defe1c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2ae83e1d3d40"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x2ae83e291638"/></to>
    </wire>
    <wire loc="119:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2ae83e291638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ae83defe1c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2ae83e1d2478"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x2ae83e291c50"/></to>
    </wire>
    <wire loc="120:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2ae83e291c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ae83defe1c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2ae83e1d2b68"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x2ae83e28f638"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2ae83e28f638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ae83defe1c8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2ae83e1d4da8"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x2ae83e289470"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2ae83e289470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2ae83e1d5720"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x2ae83e2785f8"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2ae83e2785f8"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2ae83df013c8"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2ae83e1d4538"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2ae83e27ec10"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2ae83e27ec10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ae83df005e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2ae83e1d13d0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x2ae83e28bc10"/></to>
    </wire>
    <wire loc="134:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2ae83e28bc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2ae83e1cf558"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x2ae83e2865f8"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2ae83e2865f8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2ae83e1cfde0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x2ae83e286d98"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2ae83e286d98"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2ae83e1d1e30"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x2ae83e28c020"/></to>
    </wire>
    <wire loc="128:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2ae83e28c020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ae83defe1c8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2ae83e1cd6f0"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x2ae83e27a470"/></to>
    </wire>
    <wire loc="163:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2ae83e27a470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ae83df005e0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2ae83e1ce650"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x2ae83e27dc10"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2ae83e27dc10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ae83df005e0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2ae83e1cee80"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x2ae83e27c470"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2ae83e27c470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ae83df005e0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x2ae83e200750"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x2ae83e2a6868"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x2ae83e2a6868"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x2ae83e2a1e48"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2ae83e1af9a8"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2ae83e3154a8"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ae83e1e67f8"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ae83e312d08"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x2ae83e1e5460"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2ae83e310130"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2ae83e1d81d8"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2ae83e309ac8"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2ae83e309ac8"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2ae83e337ac8"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2ae83e2020c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2ae83d9f77d8"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2ae83e287470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2ae83e2589b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ae83defe1c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2ae83e28b470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2ae83e2855c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2ae83e27ac10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ae83df005e0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2ae83e28a470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2ae83e281470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2ae83e285d60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2ae83e28fc50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ae83defe1c8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2ae83e28d3a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ae83defe1c8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2ae83e27d470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ae83df005e0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2ae83e290900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ae83defe1c8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2ae83e28ac10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2ae83e2583a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ae83defe1c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2ae83e281c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2ae83e27e470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ae83df005e0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2ae83e284cc8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2ae83e279470"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2ae83df013c8"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2ae83e28cc50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2ae83e289c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="145:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2ae83e284528"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2ae83e287e10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2ae83e291020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ae83defe1c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="127:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2ae83e28d9b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ae83defe1c8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2ae83e28c638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ae83defe1c8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2ae83e27fc10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ae83df005e0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2ae83e27f470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ae83df005e0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2ae83e28f020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ae83defe1c8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2ae83e280c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2ae83e27cc10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ae83df005e0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2ae83e280470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2ae83e283c90"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2ae83e2902e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ae83defe1c8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2ae83e2834f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x2ae83e2a5a48"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x2ae83e29f020"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2ae83e2c7ba0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2ae83d9f77d8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x2ae83e29f6b8"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x2ae83de1fde0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x2ae83e29e998"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x2ae83de1d020"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x2ae83e29db28"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x2ae83de1c198"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x2ae83e29bd40"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x2ae83de35710"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2ae83e29a900"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ae83e4a5db8"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ae83e4a5db8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ae83df06808"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2ae83e2996a0"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x2ae83e4cdc10"/></to>
    </wire>
    <wire loc="167:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2ae83e4cdc10"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2ae83df013c8"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2ae83e298c10"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x2ae83e4e3638"/></to>
    </wire>
    <wire loc="123:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2ae83e4e3638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ae83defe1c8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2ae83e298520"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x2ae83e4e12e8"/></to>
    </wire>
    <wire loc="125:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2ae83e4e12e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ae83defe1c8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2ae83e2973a8"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2ae83e3154a8"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ae83e296350"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ae83e312d08"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x2ae83e294d08"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2ae83e310130"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x2ae83e296cb8"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x2ae83db18af8"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2ae83e2ca020"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x2ae83e4dac10"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2ae83e4dac10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2ae83e2ca8a8"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x2ae83e4d9470"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2ae83e4d9470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2ae83e2cb8e0"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x2ae83e4e0060"/></to>
    </wire>
    <wire loc="127:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2ae83e4e0060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ae83defe1c8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2ae83e2c8208"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x2ae83e4cd470"/></to>
    </wire>
    <wire loc="164:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2ae83e4cd470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ae83df005e0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2ae83e2c9130"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x2ae83e4d0470"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2ae83e4d0470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ae83df005e0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2ae83e2c9960"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x2ae83e4d0c10"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2ae83e4d0c10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ae83df005e0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2ae83e2c8a70"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2ae83e4d1c10"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2ae83e4d1c10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ae83df005e0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2ae83e2c7398"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x2ae83e4e6470"/></to>
    </wire>
    <wire loc="115:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2ae83e4e6470"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ae83defe1c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x2ae83e2ba020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ae83d66e728"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2ae83e39c720"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2ae83dd95d70"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x2ae83e3328b0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2ae83e39d528"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x2ae83e334b20"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2ae83e3bc5e0"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2ae83e3bc5e0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2ae83e484c38"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2ae83e38c350"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ae83e4910c8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2ae83e38d080"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ae83e3b9bd8"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2ae83e3b9bd8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ae83e406770"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x2ae83e48b5a0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ae83e459290"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2ae83e454648"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x2ae83e3b6648"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x2ae83e3b6648"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2ae83e405020"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2ae83e483e48"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x2ae83e3b2968"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x2ae83e3b2968"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2ae83e401128"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2ae83e401128"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2ae83ef1d020"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2ae83e406770"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ae83ef22600"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2ae83e405020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2ae83ef22da8"/></to>
    </wire>
    <wire loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2ae83ef1a168"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ae83dc1fd90"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2ae83ef15020"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2ae83dc31950"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2ae83ef14020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2ae83dc17980"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x2ae83ef100a0"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x2ae83dc27470"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x2ae83e4505e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ae83d66e728"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x2ae83e486618"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ae83d66e728"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2ae83e4bd420"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2ae83e4b47d8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2ae83e4b47d8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2ae83e38c350"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2ae83e4dba88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2ae83e4e5100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ae83defe1c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2ae83e4dfa88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2ae83e4d9c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2ae83e4e43a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ae83defe1c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2ae83e4d1470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ae83df005e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2ae83e4dea88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2ae83e4dca88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2ae83e4d5c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2ae83e4d8470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2ae83e4a4a18"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2ae83df034c8"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2ae83e4e3c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ae83defe1c8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2ae83e4e1a00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ae83defe1c8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2ae83e4e3020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ae83defe1c8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2ae83e4dc2e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2ae83e4de2e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2ae83e4e6a88"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ae83defe1c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2ae83e4cec10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ae83df005e0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2ae83e4d4470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2ae83e4d2c10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ae83df005e0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2ae83e4d7470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2ae83e4df2e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2ae83e4db2e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="145:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2ae83e4d8c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2ae83e4da470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2ae83e4e5718"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ae83defe1c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2ae83e4e0c90"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ae83defe1c8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2ae83e4d2470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ae83df005e0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2ae83e4d3c10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ae83df005e0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2ae83e4d3470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2ae83e4ce470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ae83df005e0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2ae83e4d4c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2ae83e4e5d30"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ae83defe1c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2ae83e4d5470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2ae83e4e49b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ae83defe1c8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2ae83e4d7c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2ae83e4e0678"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ae83defe1c8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2ae83e4cb020"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2ae83df013c8"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x2ae83e4e9b10"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x2ae83e52e9f0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2ae83e4efdb0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ae83e52e198"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2ae83e512750"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2ae83e517a40"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2ae83e511428"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2ae83e514978"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2ae83e514978"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2ae83df97790"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2ae83e5102a8"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2ae83e4ebb98"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ae83e510a70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ae83e312d08"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x2ae83e541e18"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x2ae83e539060"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2ae83e539d30"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2ae83e53d560"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ae83e5383c8"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ae83e312d08"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2ae83e58e528"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2ae83e552670"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2ae83e58d358"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2ae83e552020"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2ae83e58d970"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2ae83e3154a8"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ae83e58c7a8"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ae83e312d08"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2ae83e58b1c0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2ae83e5cd2a8"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x2ae83e5a6ac0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ae83d66e728"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x2ae83e5c2928"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2ae83e5bed50"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2ae83e5bed50"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2ae83df97790"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ae83e5f23c8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ae83da8e658"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2ae83e6e8728"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2ae83e72bcf8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ae83e6b1348"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ae83e6ee908"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2ae83e6e8110"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ae83e72b6e0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2ae83e6e48f8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2ae83e6b1c80"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2ae83e6ed308"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2ae83e6e6208"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2ae83e6ec020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ae83e6e7760"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x2ae83e6e4020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x2ae83ea352b8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2ae83e6e6208"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2ae83e827020"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2ae83e6e7760"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ae83e828868"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x2ae83e827db8"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x2ae83e6e4020"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2ae83e71ebc8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2ae83e6e48f8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2ae83e824a50"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2ae83e6e48f8"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2ae83e81c420"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2ae83e6e48f8"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2ae83e8256c8"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2ae83e71fb48"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x2ae83e824020"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x2ae83e722898"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x2ae83e719b38"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x2ae83e820b30"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x2ae83e717398"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2ae83e81f8b0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2ae83e81f8b0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2ae83e845338"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2ae83e861448"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2ae83e8480c0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2ae83e8480c0"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2ae83e892310"/></to>
    </wire>
    <wire loc="332:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x2ae83e75f830"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ae83d66e728"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x2ae83e748d70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ae83d66e728"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x2ae83e761020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ae83d66e728"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x2ae83e75b918"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ae83d66e728"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x2ae83e822100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ae83d66e728"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x2ae83e8228a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ae83d66e728"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x2ae83e841290"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x2ae83e845af0"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x2ae83e845af0"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x2ae83e88ce58"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2ae83e892310"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2ae83e89d5f8"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2ae83e845338"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2ae83e88c6f8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2ae83e891598"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2ae83e95d020"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.1.2/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2ae83e95d020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2ae83e9ec610"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2ae83e899c60"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2ae83e891598"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartTxControl" scoped="" ref="0x2ae83e89c5f8"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x2ae83e8cf700"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0TxControl" scoped="" ref="0x2ae83e8cf700"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x2ae83e8c7580"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartRxControl" scoped="" ref="0x2ae83e89cd98"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x2ae83e8ce020"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0RxControl" scoped="" ref="0x2ae83e8ce020"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x2ae83e8c7e18"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUart" scoped="" ref="0x2ae83e89a5c0"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x2ae83e8ce860"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart0" scoped="" ref="0x2ae83e8ce860"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x2ae83e8c66d8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart1" scoped="" ref="0x2ae83e8cb020"/></from>
      <to><interface-ref name="HplUart1" scoped="" ref="0x2ae83e8c2550"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1TxControl" scoped="" ref="0x2ae83e8cde58"/></from>
      <to><interface-ref name="Uart1TxControl" scoped="" ref="0x2ae83e8c33e0"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1RxControl" scoped="" ref="0x2ae83e8cc6f0"/></from>
      <to><interface-ref name="Uart1RxControl" scoped="" ref="0x2ae83e8c3c78"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x2ae83e8c1ae8"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x2ae83d76db98"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x2ae83e8c07c8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2ae83d74b240"/></to>
    </wire>
    <wire loc="34:/opt/tinyos-2.1.2/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x2ae83e9ea7f8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2ae83e95bd30"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.2/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2ae83e95bd30"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2ae83ea02950"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.1.2/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2ae83e9f5a70"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ae83e9559a0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2ae83e9559a0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ae83e942ca0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2ae83e94eaa8"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2ae83e93bc90"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x2ae83e94c190"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2ae83e98f350"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2ae83e947020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x2ae83e98bc48"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2ae83e947020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x2ae83e986020"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2ae83e947020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x2ae83e982360"/></to>
    </wire>
    <wire loc="27:/opt/tinyos-2.1.2/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2ae83e9fe098"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ae83e9559a0"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="38:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="41:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:59">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:58">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:57">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:56">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:53">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="22:/opt/tinyos-2.1.2/tos/platforms/mica/MeasureClockC.nc" safe="">
      <documentation loc="14:/opt/tinyos-2.1.2/tos/platforms/mica/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/opt/tinyos-2.1.2/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/McuSleepC.nc" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.11 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @date   October 26, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BaseStationP" loc="60:BaseStationP.nc" safe="">
      <module/>
    </component>
    <component qname="LedsC" loc="45:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/opt/tinyos-2.1.2/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="ActiveMessageC" loc="53:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <documentation loc="43:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the Telos platform.</short>
        <long>&#10;&#10; The Active Message layer on the Telos platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.9 $ $Date: 2010-06-29 22:07:54 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:/opt/tinyos-2.1.2/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="85(AlarmMultiplexC.Alarm):/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="70:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420.</short>
        <long>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420. As these timers (the Alarm interface) are&#10; usually part of an HAL, they are platform specific. But as the&#10; CC2420 needs to be cross-platform, this component bridges between&#10; the two, providing a platform-independent abstraction of&#10; CC2420-specific Alarm. This is a Atmega128 implementation that&#10; uses the Compare1A register.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:54 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="26(AlarmMultiplexC.Alarm.Alarm32khz32C):/opt/tinyos-2.1.2/tos/platforms/mica/Alarm32khz32C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/Alarm32khz32C.nc">
        <short>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; 32kHz Alarm (see Alarm32khz16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16" loc="28(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16):/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer1C" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega128 timer 1.</short>
        <long>&#10; HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncC" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncP" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
        <short>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 0 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128Timer1P" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega128 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitOneP.InitOne" loc="44(InitOneP.InitOne):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ae83cd7fb98"/></typename>
          </type-int>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ae83d6ecd70"/>
            <typename><typedef-ref name="TOne" ref="0x2ae83d722720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ae83cd7fb98"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="22:/opt/tinyos-2.1.2/tos/platforms/mica/Counter32khz32C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/Counter32khz32C.nc">
        <short>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="42(CounterOne16C.NCounter):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ae83d6ecd70"/>
            <typename><typedef-ref name="TOne" ref="0x2ae83d722720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ae83cd7fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C.Transform32" loc="54(Counter32khz32C.Transform32):/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ae83d6ecd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2ae83d6eb178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ae83cd80608"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ae83d6ecd70"/>
            <typename><typedef-ref name="TOne" ref="0x2ae83d722720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ae83cd7fb98"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_one_overflow_t" ref="0x2ae83d721020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32):/opt/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ae83d6ecd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2ae83d6eb178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ae83cd80608"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ae83d6ecd70"/>
            <typename><typedef-ref name="TOne" ref="0x2ae83d722720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ae83cd7fb98"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="NoInitC" loc="16:/opt/tinyos-2.1.2/tos/system/NoInitC.nc" safe="">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/system/NoInitC.nc">
        <short>&#10; A do-nothing Init implementation.</short>
        <long>&#10; A do-nothing Init implementation. Useful for implementing components whose&#10; specification has an Init, but whose implementation doesn't need one.&#10;&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="83:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="70:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; Mapping the CC2420 pins to Atmega128 pins for the micaZ platform.</short>
        <long>&#10; Mapping the CC2420 pins to Atmega128 pins for the micaZ platform.&#10; Information on the function of these pins can be found on pages&#10; 14-15 of the CC2420 datasheet (rev 1.2).&#10;&#10; &#60;pre>&#10; $Id: HplCC2420PinsC.nc,v 1.6 2010-06-29 22:07:54 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:54 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="37:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-30 17:31:08 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="40(HplCC2420InterruptsC.CaptureSFDC):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
        <short>&#10; Expose capture capability as a GpioCapture interface from TEP117.</short>
        <long>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10; @author Martin Turon, Crossbow &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="6(HplCC2420InterruptsC.InterruptFIFOPC):/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
        <short>&#10; Component providing access to all external interrupt pins on ATmega128.</short>
        <long>&#10; Component providing access to all external interrupt pins on ATmega128.&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128InterruptSigP" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10; Exposes just the interrupt vector routine for &#10; easy linking to generic components.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin0" loc="39(HplAtm128InterruptC.IntPin0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin1" loc="39(HplAtm128InterruptC.IntPin1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin2" loc="39(HplAtm128InterruptC.IntPin2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin3" loc="39(HplAtm128InterruptC.IntPin3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin4" loc="39(HplAtm128InterruptC.IntPin4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin5" loc="39(HplAtm128InterruptC.IntPin5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin6" loc="39(HplAtm128InterruptC.IntPin6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin7" loc="39(HplAtm128InterruptC.IntPin7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsP" loc="45:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
        <short>&#10; MicaZ implementation of the CC2420 interrupts.</short>
        <long>&#10; MicaZ implementation of the CC2420 interrupts. FIFOP is a real&#10; interrupt, while CCA and FIFO are emulated through timer polling.&#10; &#60;pre>&#10;  $Id: HplCC2420InterruptsP.nc,v 1.6 2008-06-26 04:39:12 regehr Exp $&#10; &#60;pre>&#10;&#10; @author Philip Levis&#10; @author Matt Miller&#10; @author David Moss&#10; @version @version $Revision: 1.6 $ $Date: 2008-06-26 04:39:12 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):/opt/tinyos-2.1.2/tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:/opt/tinyos-2.1.2/tos/system/StateImplC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:/opt/tinyos-2.1.2/tos/system/StateImplP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="37(CC2420SpiWireC.HplCC2420SpiC):/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-04-24 22:31:25 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC" loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.7 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc" safe="">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.12 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="83(Atm128SpiC.Arbiter):/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="42(Atm128SpiC.Arbiter.Queue):/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420SpiP" loc="38:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
        <short>&#10; Automatic slave select update for the SpiResource&#10;&#10; </short>
        <long>&#10; Automatic slave select update for the SpiResource&#10;&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/opt/tinyos-2.1.2/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="39:/opt/tinyos-2.1.2/tos/platforms/micaz/LocalIeeeEui64C.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ae83d6ecd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2ae83d6eb178"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ae83d6ec608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ae83d6ec960"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2ae83e3ae770"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ae83d6ec608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ae83d6ec960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ae83d6ec608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ae83d6ec960"/></typename>
          </type-tag>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ae83d6ec608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ae83d6ec960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):/opt/tinyos-2.1.2/tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):/opt/tinyos-2.1.2/tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):/opt/tinyos-2.1.2/tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:/opt/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:/opt/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:/opt/tinyos-2.1.2/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="38:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:42 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C" loc="38:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:02 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C.UartP" loc="46(Atm128Uart0C.UartP):/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128UartC" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <documentation loc="38:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
        <short>&#10; HPL for the Atmega 128 serial ports.</short>
        <long>&#10; HPL for the Atmega 128 serial ports.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128UartP" loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartP.nc">
      <documentation loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartP.nc">
        <short> &#10; Private component of the Atmega128 serial port HPL.</short>
        <long> &#10; Private component of the Atmega128 serial port HPL.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CounterMicro32C" loc="22:/opt/tinyos-2.1.2/tos/platforms/mica/CounterMicro32C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/CounterMicro32C.nc">
        <short>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterThree16C" loc="22:/opt/tinyos-2.1.2/tos/platforms/mica/CounterThree16C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/CounterThree16C.nc">
        <short>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer3C" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
        <short>&#10; HPL interface to Atmega128 timer 2.</short>
        <long>&#10; HPL interface to Atmega128 timer 2.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer3P" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
        <short>&#10; Internal componentr of the HPL interface to Atmega128 timer 3.</short>
        <long>&#10; Internal componentr of the HPL interface to Atmega128 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitThreeP.InitThree" loc="44(InitThreeP.InitThree):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ae83cd7fb98"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterThree16C.NCounter" loc="42(CounterThree16C.NCounter):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ae83d6eb588"/>
            <typename><typedef-ref name="TThree" ref="0x2ae83d722aa0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ae83cd7fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMicro32C.Transform32" loc="54(CounterMicro32C.Transform32):/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ae83d6eb588"/>
            <typename><typedef-ref name="TMicro" ref="0x2ae83d6eb8e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ae83cd80608"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ae83d6eb588"/>
            <typename><typedef-ref name="TThree" ref="0x2ae83d722aa0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ae83cd7fb98"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_three_overflow_t" ref="0x2ae83d721470"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2ae83d7d0b98" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2ae83d7cd020" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2ae83d7cd368" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2ae83d7d3608" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2ae83d7d3970" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2ae83d7d3cd8" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2ae83d7e0060" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2ae83d86f020" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2ae83d86f388" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2ae83d86f6f0" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2ae83d86fa20" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="85:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="70:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420.</short>
        <long>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420. As these timers (the Alarm interface) are&#10; usually part of an HAL, they are platform specific. But as the&#10; CC2420 needs to be cross-platform, this component bridges between&#10; the two, providing a platform-independent abstraction of&#10; CC2420-specific Alarm. This is a Atmega128 implementation that&#10; uses the Compare1A register.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:54 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="26:/opt/tinyos-2.1.2/tos/platforms/mica/Alarm32khz32C.nc" abstract="">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/Alarm32khz32C.nc">
        <short>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; 32kHz Alarm (see Alarm32khz16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmOne16C" loc="28:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128TimerInitC" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x2ae83dd4f1f8" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2ae83dd4f1f8"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x2ae83dd4f548" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmC" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x2ae83dd64a20" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x2ae83dd64a20"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x2ae83dd60198" loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2ae83dd60198"/></type-var>
        </typedef>
        <constant name="mindt" ref="0x2ae83dd60498" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x2ae83dd8ee28" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x2ae83dd8ee28"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x2ae83dd8b5c8" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2ae83dd8b5c8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x2ae83ddbd6e8" loc="55:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x2ae83ddbd6e8"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x2ae83ddbde50" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x2ae83ddbde50"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x2ae83ddbc240" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x2ae83ddbc240"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x2ae83ddbc9b8" loc="58:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x2ae83ddbc9b8"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x2ae83ddbcd60" loc="59:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x2ae83ddba528" loc="60:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x2ae83ddba528"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:/opt/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x2ae83ddeb4d8" loc="52:/opt/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x2ae83ddeb4d8"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x2ae83ddebc40" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x2ae83ddebc40"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x2ae83ddea068" loc="54:/opt/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x2ae83ddea068"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x2ae83ddea7e0" loc="55:/opt/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x2ae83ddea7e0"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x2ae83ddeab88" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioCaptureC" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
        <short>&#10; Expose capture capability as a GpioCapture interface from TEP117.</short>
        <long>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10; @author Martin Turon, Crossbow &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioInterruptC" loc="6:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc" abstract="" safe="">
      <documentation loc="3:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128InterruptPinP" loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="ctrl_addr" ref="0x2ae83de7d020" loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
          </type-int>
        </constant>
        <constant name="edge0bit" ref="0x2ae83de7d388" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
          </type-int>
        </constant>
        <constant name="edge1bit" ref="0x2ae83de7d6f0" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2ae83de7da20" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:/opt/tinyos-2.1.2/tos/system/StateC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="37:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-04-24 22:31:25 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="83:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="62:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x2ae83e086578" loc="83:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x2ae83e07b510" loc="42:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2ae83e39b110" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ae83e39b110"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="23:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2ae83e3ae770" loc="23:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2ae83e3ae770"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2ae83e3aea60" loc="23:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncP" loc="23:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2ae83e3a4c18" loc="23:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2ae83e3a4c18"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2ae83e3de020" loc="23:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2ae83e43c300" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ae83e43c300"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2ae83e44e698" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ae83e44e698"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x2ae83e44e9a8" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128UartP" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc" abstract="" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x2ae83d768d50" loc="58:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2ae83d768d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ae83d7670d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2ae83d766940" loc="57:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2ae83d766940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2ae83d766c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2ae83d7719a0" loc="52:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2ae83d7719a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ae83d771cf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ae83d767cc8" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ae83d767cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ae83d7720a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2ae83d76db98" loc="50:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2ae83d76db98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2ae83d771020"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2ae83d7711a8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2ae83d771330"/>
        <function-ref name="actualMicro" scoped="" ref="0x2ae83d7714b8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2ae83d771640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x2ae83d777b90" loc="45:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x2ae83d777b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ae83d776020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ae83d7774f0" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ae83d7774f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ae83d777840"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x2ae83d776398" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x2ae83d776398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ae83d7766e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2ae83d780108" loc="41:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2ae83d780108"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ae83d780458"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2ae83d779a08" loc="40:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2ae83d779a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ae83d779d58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2ae83d77b7f8" loc="45:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2ae83d77b7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ae83d77bb48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x2ae83d7845f8" loc="44:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x2ae83d7845f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d784948"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d784ad0"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d784c58"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d784de0"/>
        <function-ref name="get" scoped="" ref="0x2ae83d77b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d77b1a8"/>
        <function-ref name="set" scoped="" ref="0x2ae83d77b330"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d77b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2ae83d77d428" loc="43:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2ae83d77d428"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ae83d77d778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x2ae83d7c9c78" loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x2ae83d7c9c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d7c85e8"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d7c8770"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d7c88f8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d7c8a80"/>
        <function-ref name="get" scoped="" ref="0x2ae83d7c8c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d7c8d90"/>
        <function-ref name="set" scoped="" ref="0x2ae83d7c7020"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d7c71a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x2ae83d7a67e0" loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x2ae83d7a67e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d7a6b30"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d7a6cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d7a6e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d7a5020"/>
        <function-ref name="get" scoped="" ref="0x2ae83d7a51a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d7a5330"/>
        <function-ref name="set" scoped="" ref="0x2ae83d7a54b8"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d7a5640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x2ae83d7b87e0" loc="85:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x2ae83d7b87e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d7b8b30"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d7b8cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d7b8e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d7b7020"/>
        <function-ref name="get" scoped="" ref="0x2ae83d7b71a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d7b7330"/>
        <function-ref name="set" scoped="" ref="0x2ae83d7b74b8"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d7b7640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x2ae83d7be4d0" loc="94:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x2ae83d7be4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d7be820"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d7be9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d7beb30"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d7becb8"/>
        <function-ref name="get" scoped="" ref="0x2ae83d7bee40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d7bd020"/>
        <function-ref name="set" scoped="" ref="0x2ae83d7bd1a8"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d7bd330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x2ae83d7924d0" loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x2ae83d7924d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d792820"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d7929a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d792b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d792cb8"/>
        <function-ref name="get" scoped="" ref="0x2ae83d792e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d791020"/>
        <function-ref name="set" scoped="" ref="0x2ae83d7911a8"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d791330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x2ae83d7c01a0" loc="92:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x2ae83d7c01a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d7c04f0"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d7c0678"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d7c0800"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d7c0988"/>
        <function-ref name="get" scoped="" ref="0x2ae83d7c0b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d7c0c98"/>
        <function-ref name="set" scoped="" ref="0x2ae83d7c0e20"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d7bf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x2ae83d7907e0" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x2ae83d7907e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d790b30"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d790cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d790e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d78f020"/>
        <function-ref name="get" scoped="" ref="0x2ae83d78f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d78f330"/>
        <function-ref name="set" scoped="" ref="0x2ae83d78f4b8"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d78f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x2ae83d7a1968" loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x2ae83d7a1968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d7a1cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d7a1e40"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d79f020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d79f1a8"/>
        <function-ref name="get" scoped="" ref="0x2ae83d79f330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d79f4b8"/>
        <function-ref name="set" scoped="" ref="0x2ae83d79f640"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d79f7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x2ae83d7b1c78" loc="77:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x2ae83d7b1c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d7b0020"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d7b01a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d7b0330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d7b04b8"/>
        <function-ref name="get" scoped="" ref="0x2ae83d7b0640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d7b07c8"/>
        <function-ref name="set" scoped="" ref="0x2ae83d7b0950"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d7b0ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x2ae83d7b5c78" loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x2ae83d7b5c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d7b4020"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d7b41a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d7b4330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d7b44b8"/>
        <function-ref name="get" scoped="" ref="0x2ae83d7b4640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d7b47c8"/>
        <function-ref name="set" scoped="" ref="0x2ae83d7b4950"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d7b4ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x2ae83d78ac78" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x2ae83d78ac78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d789020"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d7891a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d789330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d7894b8"/>
        <function-ref name="get" scoped="" ref="0x2ae83d789640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d7897c8"/>
        <function-ref name="set" scoped="" ref="0x2ae83d789950"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d789ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x2ae83d79bc78" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x2ae83d79bc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d79a020"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d79a1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d79a330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d79a4b8"/>
        <function-ref name="get" scoped="" ref="0x2ae83d79a640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d79a7c8"/>
        <function-ref name="set" scoped="" ref="0x2ae83d79a950"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d79aad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x2ae83d79de00" loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x2ae83d79de00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d7aa1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d7aa330"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d7aa4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d7aa640"/>
        <function-ref name="get" scoped="" ref="0x2ae83d7aa7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d7aa950"/>
        <function-ref name="set" scoped="" ref="0x2ae83d7aaad8"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d7aac60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x2ae83d7ad1a0" loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x2ae83d7ad1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d7ad4f0"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d7ad678"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d7ad800"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d7ad988"/>
        <function-ref name="get" scoped="" ref="0x2ae83d7adb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d7adc98"/>
        <function-ref name="set" scoped="" ref="0x2ae83d7ade20"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d7ac020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x2ae83d7bb968" loc="97:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x2ae83d7bb968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d7bbcb8"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d7bbe40"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d7ba020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d7ba1a8"/>
        <function-ref name="get" scoped="" ref="0x2ae83d7ba330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d7ba4b8"/>
        <function-ref name="set" scoped="" ref="0x2ae83d7ba640"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d7ba7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x2ae83d7c57e0" loc="103:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x2ae83d7c57e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d7c5b30"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d7c5cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d7c5e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d7c4020"/>
        <function-ref name="get" scoped="" ref="0x2ae83d7c41a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d7c4330"/>
        <function-ref name="set" scoped="" ref="0x2ae83d7c44b8"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d7c4640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x2ae83d7ab4d0" loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x2ae83d7ab4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d7ab820"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d7ab9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d7abb30"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d7abcb8"/>
        <function-ref name="get" scoped="" ref="0x2ae83d7abe40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d7b9020"/>
        <function-ref name="set" scoped="" ref="0x2ae83d7b91a8"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d7b9330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x2ae83d7941a0" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x2ae83d7941a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d7944f0"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d794678"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d794800"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d794988"/>
        <function-ref name="get" scoped="" ref="0x2ae83d794b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d794c98"/>
        <function-ref name="set" scoped="" ref="0x2ae83d794e20"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d793020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x2ae83d797348" loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x2ae83d797348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d797698"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d797820"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d7979a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d797b30"/>
        <function-ref name="get" scoped="" ref="0x2ae83d797cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d797e40"/>
        <function-ref name="set" scoped="" ref="0x2ae83d796020"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d7961a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x2ae83d7c74d0" loc="101:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x2ae83d7c74d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d7c7820"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d7c79a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d7c7b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d7c7cb8"/>
        <function-ref name="get" scoped="" ref="0x2ae83d7c7e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d7c6020"/>
        <function-ref name="set" scoped="" ref="0x2ae83d7c61a8"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d7c6330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x2ae83d7a3658" loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x2ae83d7a3658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d7a39a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d7a3b30"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d7a3cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d7a3e40"/>
        <function-ref name="get" scoped="" ref="0x2ae83d7a2020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d7a21a8"/>
        <function-ref name="set" scoped="" ref="0x2ae83d7a2330"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d7a24b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x2ae83d7a5968" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x2ae83d7a5968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d7a5cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d7a5e40"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d7a4020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d7a41a8"/>
        <function-ref name="get" scoped="" ref="0x2ae83d7a4330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d7a44b8"/>
        <function-ref name="set" scoped="" ref="0x2ae83d7a4640"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d7a47c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x2ae83d7b7968" loc="86:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x2ae83d7b7968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d7b7cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d7b7e40"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d7b6020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d7b61a8"/>
        <function-ref name="get" scoped="" ref="0x2ae83d7b6330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d7b64b8"/>
        <function-ref name="set" scoped="" ref="0x2ae83d7b6640"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d7b67c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x2ae83d7bd658" loc="95:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x2ae83d7bd658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d7bd9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d7bdb30"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d7bdcb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d7bde40"/>
        <function-ref name="get" scoped="" ref="0x2ae83d7bc020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d7bc1a8"/>
        <function-ref name="set" scoped="" ref="0x2ae83d7bc330"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d7bc4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x2ae83d791658" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x2ae83d791658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d7919a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d791b30"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d791cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d791e40"/>
        <function-ref name="get" scoped="" ref="0x2ae83d790020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d7901a8"/>
        <function-ref name="set" scoped="" ref="0x2ae83d790330"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d7904b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x2ae83d78f968" loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x2ae83d78f968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d78fcb8"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d78fe40"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d79c020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d79c1a8"/>
        <function-ref name="get" scoped="" ref="0x2ae83d79c330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d79c4b8"/>
        <function-ref name="set" scoped="" ref="0x2ae83d79c640"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d79c7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x2ae83d79faf0" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x2ae83d79faf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d79fe40"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d79e020"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d79e1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d79e330"/>
        <function-ref name="get" scoped="" ref="0x2ae83d79e4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d79e640"/>
        <function-ref name="set" scoped="" ref="0x2ae83d79e7c8"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d79e950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x2ae83d7b0e00" loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x2ae83d7b0e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d7af1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d7af330"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d7af4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d7af640"/>
        <function-ref name="get" scoped="" ref="0x2ae83d7af7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d7af950"/>
        <function-ref name="set" scoped="" ref="0x2ae83d7afad8"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d7afc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x2ae83d7b4e00" loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x2ae83d7b4e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d7b31a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d7b3330"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d7b34b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d7b3640"/>
        <function-ref name="get" scoped="" ref="0x2ae83d7b37c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d7b3950"/>
        <function-ref name="set" scoped="" ref="0x2ae83d7b3ad8"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d7b3c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x2ae83d789e00" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x2ae83d789e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d7881a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d788330"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d7884b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d788640"/>
        <function-ref name="get" scoped="" ref="0x2ae83d7887c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d788950"/>
        <function-ref name="set" scoped="" ref="0x2ae83d788ad8"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d788c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x2ae83d79ae00" loc="59:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x2ae83d79ae00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d7992e8"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d799470"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d7995f8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d799780"/>
        <function-ref name="get" scoped="" ref="0x2ae83d799908"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d799a90"/>
        <function-ref name="set" scoped="" ref="0x2ae83d799c18"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d799da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x2ae83d7a9020" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x2ae83d7a9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d7a9370"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d7a94f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d7a9680"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d7a9808"/>
        <function-ref name="get" scoped="" ref="0x2ae83d7a9990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d7a9b18"/>
        <function-ref name="set" scoped="" ref="0x2ae83d7a9ca0"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d7a9e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x2ae83d7baaf0" loc="98:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x2ae83d7baaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d7bae40"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d7c9020"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d7c91a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d7c9330"/>
        <function-ref name="get" scoped="" ref="0x2ae83d7c94b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d7c9640"/>
        <function-ref name="set" scoped="" ref="0x2ae83d7c97c8"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d7c9950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x2ae83d7a7348" loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x2ae83d7a7348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d7a7898"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d7a7a20"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d7a7ba8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d7a7d30"/>
        <function-ref name="get" scoped="" ref="0x2ae83d7a6020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d7a61a8"/>
        <function-ref name="set" scoped="" ref="0x2ae83d7a6330"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d7a64b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x2ae83d7b9658" loc="84:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x2ae83d7b9658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d7b99a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d7b9b30"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d7b9cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d7b9e40"/>
        <function-ref name="get" scoped="" ref="0x2ae83d7b8020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d7b81a8"/>
        <function-ref name="set" scoped="" ref="0x2ae83d7b8330"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d7b84b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x2ae83d7bf348" loc="93:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x2ae83d7bf348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d7bf698"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d7bf820"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d7bf9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d7bfb30"/>
        <function-ref name="get" scoped="" ref="0x2ae83d7bfcb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d7bfe40"/>
        <function-ref name="set" scoped="" ref="0x2ae83d7be020"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d7be1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x2ae83d7c4968" loc="104:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x2ae83d7c4968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d7c4cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d7c4e40"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d7c3020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d7c31a8"/>
        <function-ref name="get" scoped="" ref="0x2ae83d7c3330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d7c34b8"/>
        <function-ref name="set" scoped="" ref="0x2ae83d7c3640"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d7c37c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x2ae83d793348" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x2ae83d793348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d793698"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d793820"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d7939a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d793b30"/>
        <function-ref name="get" scoped="" ref="0x2ae83d793cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d793e40"/>
        <function-ref name="set" scoped="" ref="0x2ae83d792020"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d7921a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x2ae83d7964d0" loc="62:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x2ae83d7964d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d796820"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d7969a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d796b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d796cb8"/>
        <function-ref name="get" scoped="" ref="0x2ae83d796e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d7a3020"/>
        <function-ref name="set" scoped="" ref="0x2ae83d7a31a8"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d7a3330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x2ae83d7b2020" loc="91:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x2ae83d7b2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d7b2370"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d7b24f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d7b2680"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d7b2808"/>
        <function-ref name="get" scoped="" ref="0x2ae83d7b2990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d7b2b18"/>
        <function-ref name="set" scoped="" ref="0x2ae83d7b2ca0"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d7b2e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x2ae83d7a27e0" loc="65:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x2ae83d7a27e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d7a2b30"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d7a2cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d7a2e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d7a1020"/>
        <function-ref name="get" scoped="" ref="0x2ae83d7a11a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d7a1330"/>
        <function-ref name="set" scoped="" ref="0x2ae83d7a14b8"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d7a1640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x2ae83d7a4af0" loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x2ae83d7a4af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d7a4e40"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d7b1020"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d7b11a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d7b1330"/>
        <function-ref name="get" scoped="" ref="0x2ae83d7b14b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d7b1640"/>
        <function-ref name="set" scoped="" ref="0x2ae83d7b17c8"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d7b1950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x2ae83d7b6af0" loc="87:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x2ae83d7b6af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d7b6e40"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d7b5020"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d7b51a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d7b5330"/>
        <function-ref name="get" scoped="" ref="0x2ae83d7b54b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d7b5640"/>
        <function-ref name="set" scoped="" ref="0x2ae83d7b57c8"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d7b5950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x2ae83d7bc7e0" loc="96:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x2ae83d7bc7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d7bcb30"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d7bccb8"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d7bce40"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d7bb020"/>
        <function-ref name="get" scoped="" ref="0x2ae83d7bb1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d7bb330"/>
        <function-ref name="set" scoped="" ref="0x2ae83d7bb4b8"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d7bb640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x2ae83d77fab0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x2ae83d77fab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d77fe00"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d78a020"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d78a1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d78a330"/>
        <function-ref name="get" scoped="" ref="0x2ae83d78a4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d78a640"/>
        <function-ref name="set" scoped="" ref="0x2ae83d78a7c8"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d78a950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x2ae83d79caf0" loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x2ae83d79caf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d79ce40"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d79b020"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d79b1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d79b330"/>
        <function-ref name="get" scoped="" ref="0x2ae83d79b4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d79b640"/>
        <function-ref name="set" scoped="" ref="0x2ae83d79b7c8"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d79b950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x2ae83d79ec78" loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x2ae83d79ec78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d79d020"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d79d1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d79d330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d79d4b8"/>
        <function-ref name="get" scoped="" ref="0x2ae83d79d640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d79d7c8"/>
        <function-ref name="set" scoped="" ref="0x2ae83d79d950"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d79dad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x2ae83d7ae020" loc="79:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x2ae83d7ae020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d7ae370"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d7ae4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d7ae680"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d7ae808"/>
        <function-ref name="get" scoped="" ref="0x2ae83d7ae990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d7aeb18"/>
        <function-ref name="set" scoped="" ref="0x2ae83d7aeca0"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d7aee28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x2ae83d7c6658" loc="102:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x2ae83d7c6658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d7c69a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d7c6b30"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d7c6cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d7c6e40"/>
        <function-ref name="get" scoped="" ref="0x2ae83d7c5020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d7c51a8"/>
        <function-ref name="set" scoped="" ref="0x2ae83d7c5330"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d7c54b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x2ae83d7ac348" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x2ae83d7ac348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d7ac698"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d7ac820"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d7ac9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d7acb30"/>
        <function-ref name="get" scoped="" ref="0x2ae83d7accb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d7ace40"/>
        <function-ref name="set" scoped="" ref="0x2ae83d7ab020"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d7ab1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x2ae83d7a81a0" loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x2ae83d7a81a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d7a84f0"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d7a8678"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d7a8800"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d7a8988"/>
        <function-ref name="get" scoped="" ref="0x2ae83d7a8b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d7a8c98"/>
        <function-ref name="set" scoped="" ref="0x2ae83d7a8e20"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d7a7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x2ae83d795020" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x2ae83d795020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d795370"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d7954f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d795680"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d795808"/>
        <function-ref name="get" scoped="" ref="0x2ae83d795990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d795b18"/>
        <function-ref name="set" scoped="" ref="0x2ae83d795ca0"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d795e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x2ae83d798100" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x2ae83d798100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d798450"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d7985d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d798760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d7988e8"/>
        <function-ref name="get" scoped="" ref="0x2ae83d798a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d798bf8"/>
        <function-ref name="set" scoped="" ref="0x2ae83d798d80"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d797020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2ae83d80a120" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2ae83d80a120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d80a470"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d80a5f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d80a780"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d80a908"/>
        <function-ref name="get" scoped="" ref="0x2ae83d80aa90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d80ac18"/>
        <function-ref name="set" scoped="" ref="0x2ae83d80ada0"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d819020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2ae83d8175b8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2ae83d8175b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d817908"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d817a90"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d817c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d817da0"/>
        <function-ref name="get" scoped="" ref="0x2ae83d816020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d8161a8"/>
        <function-ref name="set" scoped="" ref="0x2ae83d816330"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d8164b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2ae83d80ddc0" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2ae83d80ddc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d80c170"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d80c2f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d80c480"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d80c608"/>
        <function-ref name="get" scoped="" ref="0x2ae83d80c790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d80c918"/>
        <function-ref name="set" scoped="" ref="0x2ae83d80caa0"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d80cc28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2ae83d8192a8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2ae83d8192a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d8195f8"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d819780"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d819908"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d819a90"/>
        <function-ref name="get" scoped="" ref="0x2ae83d819c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d819da0"/>
        <function-ref name="set" scoped="" ref="0x2ae83d818020"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d8181a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2ae83d816740" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2ae83d816740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d816a90"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d816c18"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d816da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d815020"/>
        <function-ref name="get" scoped="" ref="0x2ae83d8151a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d815330"/>
        <function-ref name="set" scoped="" ref="0x2ae83d8154b8"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d815640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2ae83d80b020" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2ae83d80b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d80b370"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d80b4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d80b680"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d80b808"/>
        <function-ref name="get" scoped="" ref="0x2ae83d80b990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d80bb18"/>
        <function-ref name="set" scoped="" ref="0x2ae83d80bca0"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d80be28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2ae83d818430" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2ae83d818430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d818780"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d818908"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d818a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d818c18"/>
        <function-ref name="get" scoped="" ref="0x2ae83d818da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d817020"/>
        <function-ref name="set" scoped="" ref="0x2ae83d8171a8"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d817330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2ae83d8158c8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2ae83d8158c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d815c18"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d815da0"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d814020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d8141a8"/>
        <function-ref name="get" scoped="" ref="0x2ae83d814330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d8144b8"/>
        <function-ref name="set" scoped="" ref="0x2ae83d814640"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d8147c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae83ea4e020" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae83ea4e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83ea4e370"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83ea4e4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83ea4e680"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83ea4e808"/>
        <function-ref name="get" scoped="" ref="0x2ae83ea4e990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83ea4eb18"/>
        <function-ref name="set" scoped="" ref="0x2ae83ea4eca0"/>
        <function-ref name="clr" scoped="" ref="0x2ae83ea4ee28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae83ea4b020" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae83ea4b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83ea4b370"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83ea4b4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83ea4b680"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83ea4b808"/>
        <function-ref name="get" scoped="" ref="0x2ae83ea4b990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83ea4bb18"/>
        <function-ref name="set" scoped="" ref="0x2ae83ea4bca0"/>
        <function-ref name="clr" scoped="" ref="0x2ae83ea4be28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae83ea48020" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae83ea48020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83ea48370"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83ea484f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83ea48680"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83ea48808"/>
        <function-ref name="get" scoped="" ref="0x2ae83ea48990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83ea48b18"/>
        <function-ref name="set" scoped="" ref="0x2ae83ea48ca0"/>
        <function-ref name="clr" scoped="" ref="0x2ae83ea48e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae83ea45020" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae83ea45020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83ea45370"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83ea454f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83ea45680"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83ea45808"/>
        <function-ref name="get" scoped="" ref="0x2ae83ea45990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83ea45b18"/>
        <function-ref name="set" scoped="" ref="0x2ae83ea45ca0"/>
        <function-ref name="clr" scoped="" ref="0x2ae83ea45e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae83ea42020" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae83ea42020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83ea42370"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83ea424f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83ea42680"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83ea42808"/>
        <function-ref name="get" scoped="" ref="0x2ae83ea42990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83ea42b18"/>
        <function-ref name="set" scoped="" ref="0x2ae83ea42ca0"/>
        <function-ref name="clr" scoped="" ref="0x2ae83ea42e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae83eaa1020" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae83eaa1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83eaa1370"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83eaa14f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83eaa1680"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83eaa1808"/>
        <function-ref name="get" scoped="" ref="0x2ae83eaa1990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83eaa1b18"/>
        <function-ref name="set" scoped="" ref="0x2ae83eaa1ca0"/>
        <function-ref name="clr" scoped="" ref="0x2ae83eaa1e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae83ea9e020" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae83ea9e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83ea9e370"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83ea9e4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83ea9e680"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83ea9e808"/>
        <function-ref name="get" scoped="" ref="0x2ae83ea9e990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83ea9eb18"/>
        <function-ref name="set" scoped="" ref="0x2ae83ea9eca0"/>
        <function-ref name="clr" scoped="" ref="0x2ae83ea9ee28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae83ea9b020" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae83ea9b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83ea9b370"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83ea9b4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83ea9b680"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83ea9b808"/>
        <function-ref name="get" scoped="" ref="0x2ae83ea9b990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83ea9bb18"/>
        <function-ref name="set" scoped="" ref="0x2ae83ea9bca0"/>
        <function-ref name="clr" scoped="" ref="0x2ae83ea9be28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2ae83d81cbd8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2ae83d81cbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d81b020"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d81b1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d81b330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d81b4b8"/>
        <function-ref name="get" scoped="" ref="0x2ae83d81b640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d81b7c8"/>
        <function-ref name="set" scoped="" ref="0x2ae83d81b950"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d81bad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2ae83d828020" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2ae83d828020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d828370"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d8284f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d828680"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d828808"/>
        <function-ref name="get" scoped="" ref="0x2ae83d828990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d828b18"/>
        <function-ref name="set" scoped="" ref="0x2ae83d828ca0"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d828e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2ae83d81e930" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2ae83d81e930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d81ec80"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d81ee08"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d81d020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d81d1a8"/>
        <function-ref name="get" scoped="" ref="0x2ae83d81d330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d81d4b8"/>
        <function-ref name="set" scoped="" ref="0x2ae83d81d640"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d81d7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2ae83d81bd60" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2ae83d81bd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d81a0d8"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d81a260"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d81a3e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d81a570"/>
        <function-ref name="get" scoped="" ref="0x2ae83d81a6f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d81a880"/>
        <function-ref name="set" scoped="" ref="0x2ae83d81aa08"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d81ab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2ae83d826120" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2ae83d826120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d826470"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d8265f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d826780"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d826908"/>
        <function-ref name="get" scoped="" ref="0x2ae83d826a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d826c18"/>
        <function-ref name="set" scoped="" ref="0x2ae83d826da0"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d825020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2ae83d81da50" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2ae83d81da50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d81dda0"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d81c020"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d81c1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d81c330"/>
        <function-ref name="get" scoped="" ref="0x2ae83d81c4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d81c640"/>
        <function-ref name="set" scoped="" ref="0x2ae83d81c7c8"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d81c950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2ae83d81ae18" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2ae83d81ae18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d8291a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d829330"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d8294b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d829640"/>
        <function-ref name="get" scoped="" ref="0x2ae83d8297c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d829950"/>
        <function-ref name="set" scoped="" ref="0x2ae83d829ad8"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d829c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2ae83d8252a8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2ae83d8252a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d8255f8"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d825780"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d825908"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d825a90"/>
        <function-ref name="get" scoped="" ref="0x2ae83d825c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d825da0"/>
        <function-ref name="set" scoped="" ref="0x2ae83d824020"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d8241a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae83eaa3180" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae83eaa3180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83eaa34d0"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83eaa3658"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83eaa37e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83eaa3968"/>
        <function-ref name="get" scoped="" ref="0x2ae83eaa3af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83eaa3c78"/>
        <function-ref name="set" scoped="" ref="0x2ae83eaa3e00"/>
        <function-ref name="clr" scoped="" ref="0x2ae83eafd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae83eafb100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae83eafb100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83eafb450"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83eafb5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83eafb760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83eafb8e8"/>
        <function-ref name="get" scoped="" ref="0x2ae83eafba70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83eafbbf8"/>
        <function-ref name="set" scoped="" ref="0x2ae83eafbd80"/>
        <function-ref name="clr" scoped="" ref="0x2ae83eafa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae83eaf8100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae83eaf8100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83eaf8450"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83eaf85d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83eaf8760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83eaf88e8"/>
        <function-ref name="get" scoped="" ref="0x2ae83eaf8a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83eaf8bf8"/>
        <function-ref name="set" scoped="" ref="0x2ae83eaf8d80"/>
        <function-ref name="clr" scoped="" ref="0x2ae83eaf7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae83eaf5100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae83eaf5100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83eaf5450"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83eaf55d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83eaf5760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83eaf58e8"/>
        <function-ref name="get" scoped="" ref="0x2ae83eaf5a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83eaf5bf8"/>
        <function-ref name="set" scoped="" ref="0x2ae83eaf5d80"/>
        <function-ref name="clr" scoped="" ref="0x2ae83eaf4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae83eaf2100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae83eaf2100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83eaf2450"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83eaf25d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83eaf2760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83eaf28e8"/>
        <function-ref name="get" scoped="" ref="0x2ae83eaf2a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83eaf2bf8"/>
        <function-ref name="set" scoped="" ref="0x2ae83eaf2d80"/>
        <function-ref name="clr" scoped="" ref="0x2ae83eaf1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae83eaef100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae83eaef100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83eaef450"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83eaef5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83eaef760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83eaef8e8"/>
        <function-ref name="get" scoped="" ref="0x2ae83eaefa70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83eaefbf8"/>
        <function-ref name="set" scoped="" ref="0x2ae83eaefd80"/>
        <function-ref name="clr" scoped="" ref="0x2ae83eaee020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae83eaec100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae83eaec100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83eaec450"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83eaec5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83eaec760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83eaec8e8"/>
        <function-ref name="get" scoped="" ref="0x2ae83eaeca70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83eaecbf8"/>
        <function-ref name="set" scoped="" ref="0x2ae83eaecd80"/>
        <function-ref name="clr" scoped="" ref="0x2ae83eaeb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae83eae9100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae83eae9100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83eae9450"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83eae95d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83eae9760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83eae98e8"/>
        <function-ref name="get" scoped="" ref="0x2ae83eae9a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83eae9bf8"/>
        <function-ref name="set" scoped="" ref="0x2ae83eae9d80"/>
        <function-ref name="clr" scoped="" ref="0x2ae83eae8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2ae83d82d740" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2ae83d82d740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d82da90"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d82dc18"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d82dda0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d82b020"/>
        <function-ref name="get" scoped="" ref="0x2ae83d82b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d82b330"/>
        <function-ref name="set" scoped="" ref="0x2ae83d82b4b8"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d82b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2ae83d83abd8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2ae83d83abd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d839020"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d8391a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d839330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d8394b8"/>
        <function-ref name="get" scoped="" ref="0x2ae83d839640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d8397c8"/>
        <function-ref name="set" scoped="" ref="0x2ae83d839950"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d839ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2ae83d82f500" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2ae83d82f500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d82f850"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d82f9d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d82fb60"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d82fce8"/>
        <function-ref name="get" scoped="" ref="0x2ae83d82fe70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d82e020"/>
        <function-ref name="set" scoped="" ref="0x2ae83d82e1a8"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d82e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2ae83d82b8c8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2ae83d82b8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d82bc18"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d82bda0"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d82a020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d82a1a8"/>
        <function-ref name="get" scoped="" ref="0x2ae83d82a330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d82a4b8"/>
        <function-ref name="set" scoped="" ref="0x2ae83d82a640"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d82a7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2ae83d839d60" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2ae83d839d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d8380d8"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d838260"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d8383e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d838570"/>
        <function-ref name="get" scoped="" ref="0x2ae83d8386f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d838880"/>
        <function-ref name="set" scoped="" ref="0x2ae83d838a08"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d838b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2ae83d82e5b8" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2ae83d82e5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d82e908"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d82ea90"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d82ec18"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d82eda0"/>
        <function-ref name="get" scoped="" ref="0x2ae83d82d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d82d1a8"/>
        <function-ref name="set" scoped="" ref="0x2ae83d82d330"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d82d4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2ae83d82aa50" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2ae83d82aa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d82ada0"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d83a020"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d83a1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d83a330"/>
        <function-ref name="get" scoped="" ref="0x2ae83d83a4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d83a640"/>
        <function-ref name="set" scoped="" ref="0x2ae83d83a7c8"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d83a950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2ae83d838e18" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2ae83d838e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d8371a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d837330"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d8374b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d837640"/>
        <function-ref name="get" scoped="" ref="0x2ae83d8377c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d837950"/>
        <function-ref name="set" scoped="" ref="0x2ae83d837ad8"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d837c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae83eb4f180" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae83eb4f180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83eb4f4d0"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83eb4f658"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83eb4f7e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83eb4f968"/>
        <function-ref name="get" scoped="" ref="0x2ae83eb4faf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83eb4fc78"/>
        <function-ref name="set" scoped="" ref="0x2ae83eb4fe00"/>
        <function-ref name="clr" scoped="" ref="0x2ae83eb4e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae83eb4c100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae83eb4c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83eb4c450"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83eb4c5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83eb4c760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83eb4c8e8"/>
        <function-ref name="get" scoped="" ref="0x2ae83eb4ca70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83eb4cbf8"/>
        <function-ref name="set" scoped="" ref="0x2ae83eb4cd80"/>
        <function-ref name="clr" scoped="" ref="0x2ae83eb4b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae83eb49100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae83eb49100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83eb49450"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83eb495d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83eb49760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83eb498e8"/>
        <function-ref name="get" scoped="" ref="0x2ae83eb49a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83eb49bf8"/>
        <function-ref name="set" scoped="" ref="0x2ae83eb49d80"/>
        <function-ref name="clr" scoped="" ref="0x2ae83eb48020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae83eb46100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae83eb46100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83eb46450"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83eb465d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83eb46760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83eb468e8"/>
        <function-ref name="get" scoped="" ref="0x2ae83eb46a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83eb46bf8"/>
        <function-ref name="set" scoped="" ref="0x2ae83eb46d80"/>
        <function-ref name="clr" scoped="" ref="0x2ae83eb45020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae83eb43100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae83eb43100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83eb43450"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83eb435d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83eb43760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83eb438e8"/>
        <function-ref name="get" scoped="" ref="0x2ae83eb43a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83eb43bf8"/>
        <function-ref name="set" scoped="" ref="0x2ae83eb43d80"/>
        <function-ref name="clr" scoped="" ref="0x2ae83eb42020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae83eb40100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae83eb40100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83eb40450"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83eb405d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83eb40760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83eb408e8"/>
        <function-ref name="get" scoped="" ref="0x2ae83eb40a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83eb40bf8"/>
        <function-ref name="set" scoped="" ref="0x2ae83eb40d80"/>
        <function-ref name="clr" scoped="" ref="0x2ae83eb3f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae83eb3d100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae83eb3d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83eb3d450"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83eb3d5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83eb3d760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83eb3d8e8"/>
        <function-ref name="get" scoped="" ref="0x2ae83eb3da70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83eb3dbf8"/>
        <function-ref name="set" scoped="" ref="0x2ae83eb3dd80"/>
        <function-ref name="clr" scoped="" ref="0x2ae83eb3c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae83eb3a100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae83eb3a100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83eb3a450"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83eb3a5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83eb3a760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83eb3a8e8"/>
        <function-ref name="get" scoped="" ref="0x2ae83eb3aa70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83eb3abf8"/>
        <function-ref name="set" scoped="" ref="0x2ae83eb3ad80"/>
        <function-ref name="clr" scoped="" ref="0x2ae83eb39020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2ae83d840120" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2ae83d840120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d840470"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d8405f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d840780"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d840908"/>
        <function-ref name="get" scoped="" ref="0x2ae83d840a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d840c18"/>
        <function-ref name="set" scoped="" ref="0x2ae83d840da0"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d83f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2ae83d83d5b8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2ae83d83d5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d83d908"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d83da90"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d83dc18"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d83dda0"/>
        <function-ref name="get" scoped="" ref="0x2ae83d83c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d83c1a8"/>
        <function-ref name="set" scoped="" ref="0x2ae83d83c330"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d83c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2ae83d843e40" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2ae83d843e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d8421c0"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d842348"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d8424d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d842658"/>
        <function-ref name="get" scoped="" ref="0x2ae83d8427e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d842968"/>
        <function-ref name="set" scoped="" ref="0x2ae83d842af0"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d842c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2ae83d83f2a8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2ae83d83f2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d83f5f8"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d83f780"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d83f908"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d83fa90"/>
        <function-ref name="get" scoped="" ref="0x2ae83d83fc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d83fda0"/>
        <function-ref name="set" scoped="" ref="0x2ae83d83e020"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d83e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2ae83d83c740" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2ae83d83c740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d83ca90"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d83cc18"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d83cda0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d83b020"/>
        <function-ref name="get" scoped="" ref="0x2ae83d83b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d83b330"/>
        <function-ref name="set" scoped="" ref="0x2ae83d83b4b8"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d83b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2ae83d841020" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2ae83d841020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d841370"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d8414f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d841680"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d841808"/>
        <function-ref name="get" scoped="" ref="0x2ae83d841990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d841b18"/>
        <function-ref name="set" scoped="" ref="0x2ae83d841ca0"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d841e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2ae83d83e430" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2ae83d83e430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d83e780"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d83e908"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d83ea90"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d83ec18"/>
        <function-ref name="get" scoped="" ref="0x2ae83d83eda0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d83d020"/>
        <function-ref name="set" scoped="" ref="0x2ae83d83d1a8"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d83d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2ae83d83b8c8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2ae83d83b8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d83bc18"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d83bda0"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d84c020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d84c1a8"/>
        <function-ref name="get" scoped="" ref="0x2ae83d84c330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d84c4b8"/>
        <function-ref name="set" scoped="" ref="0x2ae83d84c640"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d84c7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae83eba3180" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae83eba3180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83eba34d0"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83eba3658"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83eba37e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83eba3968"/>
        <function-ref name="get" scoped="" ref="0x2ae83eba3af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83eba3c78"/>
        <function-ref name="set" scoped="" ref="0x2ae83eba3e00"/>
        <function-ref name="clr" scoped="" ref="0x2ae83eba2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae83eba0100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae83eba0100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83eba0450"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83eba05d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83eba0760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83eba08e8"/>
        <function-ref name="get" scoped="" ref="0x2ae83eba0a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83eba0bf8"/>
        <function-ref name="set" scoped="" ref="0x2ae83eba0d80"/>
        <function-ref name="clr" scoped="" ref="0x2ae83eb9f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae83eb9d100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae83eb9d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83eb9d450"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83eb9d5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83eb9d760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83eb9d8e8"/>
        <function-ref name="get" scoped="" ref="0x2ae83eb9da70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83eb9dbf8"/>
        <function-ref name="set" scoped="" ref="0x2ae83eb9dd80"/>
        <function-ref name="clr" scoped="" ref="0x2ae83eb9c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae83eb9a100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae83eb9a100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83eb9a450"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83eb9a5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83eb9a760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83eb9a8e8"/>
        <function-ref name="get" scoped="" ref="0x2ae83eb9aa70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83eb9abf8"/>
        <function-ref name="set" scoped="" ref="0x2ae83eb9ad80"/>
        <function-ref name="clr" scoped="" ref="0x2ae83eb99020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae83eb97100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae83eb97100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83eb97450"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83eb975d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83eb97760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83eb978e8"/>
        <function-ref name="get" scoped="" ref="0x2ae83eb97a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83eb97bf8"/>
        <function-ref name="set" scoped="" ref="0x2ae83eb97d80"/>
        <function-ref name="clr" scoped="" ref="0x2ae83eb96020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae83eb94100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae83eb94100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83eb94450"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83eb945d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83eb94760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83eb948e8"/>
        <function-ref name="get" scoped="" ref="0x2ae83eb94a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83eb94bf8"/>
        <function-ref name="set" scoped="" ref="0x2ae83eb94d80"/>
        <function-ref name="clr" scoped="" ref="0x2ae83eb93020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae83eb91100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae83eb91100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83eb91450"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83eb915d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83eb91760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83eb918e8"/>
        <function-ref name="get" scoped="" ref="0x2ae83eb91a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83eb91bf8"/>
        <function-ref name="set" scoped="" ref="0x2ae83eb91d80"/>
        <function-ref name="clr" scoped="" ref="0x2ae83eb90020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae83eb8e100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae83eb8e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83eb8e450"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83eb8e5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83eb8e760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83eb8e8e8"/>
        <function-ref name="get" scoped="" ref="0x2ae83eb8ea70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83eb8ebf8"/>
        <function-ref name="set" scoped="" ref="0x2ae83eb8ed80"/>
        <function-ref name="clr" scoped="" ref="0x2ae83eb8d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2ae83d844bd8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2ae83d844bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d855020"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d8551a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d855330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d8554b8"/>
        <function-ref name="get" scoped="" ref="0x2ae83d855640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d8557c8"/>
        <function-ref name="set" scoped="" ref="0x2ae83d855950"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d855ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2ae83d852020" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2ae83d852020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d852370"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d8524f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d852680"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d852808"/>
        <function-ref name="get" scoped="" ref="0x2ae83d852990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d852b18"/>
        <function-ref name="set" scoped="" ref="0x2ae83d852ca0"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d852e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2ae83d846930" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2ae83d846930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d846c80"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d846e08"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d845020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d8451a8"/>
        <function-ref name="get" scoped="" ref="0x2ae83d845330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d8454b8"/>
        <function-ref name="set" scoped="" ref="0x2ae83d845640"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d8457c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2ae83d855d60" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2ae83d855d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d8540d8"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d854260"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d8543e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d854570"/>
        <function-ref name="get" scoped="" ref="0x2ae83d8546f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d854880"/>
        <function-ref name="set" scoped="" ref="0x2ae83d854a08"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d854b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2ae83d851120" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2ae83d851120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d851470"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d8515f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d851780"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d851908"/>
        <function-ref name="get" scoped="" ref="0x2ae83d851a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d851c18"/>
        <function-ref name="set" scoped="" ref="0x2ae83d851da0"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d850020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2ae83d845a50" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2ae83d845a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d845da0"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d844020"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d8441a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d844330"/>
        <function-ref name="get" scoped="" ref="0x2ae83d8444b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d844640"/>
        <function-ref name="set" scoped="" ref="0x2ae83d8447c8"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d844950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2ae83d854e18" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2ae83d854e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d8531a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d853330"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d8534b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d853640"/>
        <function-ref name="get" scoped="" ref="0x2ae83d8537c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d853950"/>
        <function-ref name="set" scoped="" ref="0x2ae83d853ad8"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d853c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2ae83d8502a8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2ae83d8502a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d8505f8"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d850780"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d850908"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d850a90"/>
        <function-ref name="get" scoped="" ref="0x2ae83d850c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d850da0"/>
        <function-ref name="set" scoped="" ref="0x2ae83d84f020"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d84f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae83ebfc180" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae83ebfc180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83ebfc4d0"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83ebfc658"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83ebfc7e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83ebfc968"/>
        <function-ref name="get" scoped="" ref="0x2ae83ebfcaf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83ebfcc78"/>
        <function-ref name="set" scoped="" ref="0x2ae83ebfce00"/>
        <function-ref name="clr" scoped="" ref="0x2ae83ebfa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae83ebf8100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae83ebf8100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83ebf8450"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83ebf85d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83ebf8760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83ebf88e8"/>
        <function-ref name="get" scoped="" ref="0x2ae83ebf8a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83ebf8bf8"/>
        <function-ref name="set" scoped="" ref="0x2ae83ebf8d80"/>
        <function-ref name="clr" scoped="" ref="0x2ae83ebf7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae83ebf5100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae83ebf5100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83ebf5450"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83ebf55d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83ebf5760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83ebf58e8"/>
        <function-ref name="get" scoped="" ref="0x2ae83ebf5a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83ebf5bf8"/>
        <function-ref name="set" scoped="" ref="0x2ae83ebf5d80"/>
        <function-ref name="clr" scoped="" ref="0x2ae83ebf4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae83ebf2100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae83ebf2100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83ebf2450"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83ebf25d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83ebf2760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83ebf28e8"/>
        <function-ref name="get" scoped="" ref="0x2ae83ebf2a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83ebf2bf8"/>
        <function-ref name="set" scoped="" ref="0x2ae83ebf2d80"/>
        <function-ref name="clr" scoped="" ref="0x2ae83ebf1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae83ebef100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae83ebef100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83ebef450"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83ebef5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83ebef760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83ebef8e8"/>
        <function-ref name="get" scoped="" ref="0x2ae83ebefa70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83ebefbf8"/>
        <function-ref name="set" scoped="" ref="0x2ae83ebefd80"/>
        <function-ref name="clr" scoped="" ref="0x2ae83ebee020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae83ebec100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae83ebec100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83ebec450"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83ebec5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83ebec760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83ebec8e8"/>
        <function-ref name="get" scoped="" ref="0x2ae83ebeca70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83ebecbf8"/>
        <function-ref name="set" scoped="" ref="0x2ae83ebecd80"/>
        <function-ref name="clr" scoped="" ref="0x2ae83ebeb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae83ebe9100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae83ebe9100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83ebe9450"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83ebe95d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83ebe9760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83ebe98e8"/>
        <function-ref name="get" scoped="" ref="0x2ae83ebe9a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83ebe9bf8"/>
        <function-ref name="set" scoped="" ref="0x2ae83ebe9d80"/>
        <function-ref name="clr" scoped="" ref="0x2ae83ebe8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae83ec46100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae83ec46100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83ec46450"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83ec465d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83ec46760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83ec468e8"/>
        <function-ref name="get" scoped="" ref="0x2ae83ec46a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83ec46bf8"/>
        <function-ref name="set" scoped="" ref="0x2ae83ec46d80"/>
        <function-ref name="clr" scoped="" ref="0x2ae83ec45020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2ae83d859430" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2ae83d859430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d859780"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d859908"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d859a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d859c18"/>
        <function-ref name="get" scoped="" ref="0x2ae83d859da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d858020"/>
        <function-ref name="set" scoped="" ref="0x2ae83d8581a8"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d858330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2ae83d8568c8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2ae83d8568c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d856c18"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d856da0"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d866020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d8661a8"/>
        <function-ref name="get" scoped="" ref="0x2ae83d866330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d8664b8"/>
        <function-ref name="set" scoped="" ref="0x2ae83d866640"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d8667c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2ae83d85b1e8" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2ae83d85b1e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d85b538"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d85b6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d85b848"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d85b9d0"/>
        <function-ref name="get" scoped="" ref="0x2ae83d85bb58"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d85bce0"/>
        <function-ref name="set" scoped="" ref="0x2ae83d85be68"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d85a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2ae83d8585b8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2ae83d8585b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d858908"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d858a90"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d858c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d858da0"/>
        <function-ref name="get" scoped="" ref="0x2ae83d857020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d8571a8"/>
        <function-ref name="set" scoped="" ref="0x2ae83d857330"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d8574b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2ae83d866a50" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2ae83d866a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d866da0"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d865020"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d8651a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d865330"/>
        <function-ref name="get" scoped="" ref="0x2ae83d8654b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d865640"/>
        <function-ref name="set" scoped="" ref="0x2ae83d8657c8"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d865950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2ae83d85a2a8" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2ae83d85a2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d85a5f8"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d85a780"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d85a908"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d85aa90"/>
        <function-ref name="get" scoped="" ref="0x2ae83d85ac18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d85ada0"/>
        <function-ref name="set" scoped="" ref="0x2ae83d859020"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d8591a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2ae83d857740" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2ae83d857740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d857a90"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d857c18"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d857da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d856020"/>
        <function-ref name="get" scoped="" ref="0x2ae83d8561a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d856330"/>
        <function-ref name="set" scoped="" ref="0x2ae83d8564b8"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d856640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2ae83d865bd8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2ae83d865bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d864020"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d8641a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d864330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d8644b8"/>
        <function-ref name="get" scoped="" ref="0x2ae83d864640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d8647c8"/>
        <function-ref name="set" scoped="" ref="0x2ae83d864950"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d864ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae83ec56180" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae83ec56180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83ec564d0"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83ec56658"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83ec567e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83ec56968"/>
        <function-ref name="get" scoped="" ref="0x2ae83ec56af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83ec56c78"/>
        <function-ref name="set" scoped="" ref="0x2ae83ec56e00"/>
        <function-ref name="clr" scoped="" ref="0x2ae83ec54020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae83ec52100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae83ec52100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83ec52450"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83ec525d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83ec52760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83ec528e8"/>
        <function-ref name="get" scoped="" ref="0x2ae83ec52a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83ec52bf8"/>
        <function-ref name="set" scoped="" ref="0x2ae83ec52d80"/>
        <function-ref name="clr" scoped="" ref="0x2ae83ec51020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae83ec4f100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae83ec4f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83ec4f450"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83ec4f5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83ec4f760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83ec4f8e8"/>
        <function-ref name="get" scoped="" ref="0x2ae83ec4fa70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83ec4fbf8"/>
        <function-ref name="set" scoped="" ref="0x2ae83ec4fd80"/>
        <function-ref name="clr" scoped="" ref="0x2ae83ec4e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae83ec4c100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae83ec4c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83ec4c450"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83ec4c5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83ec4c760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83ec4c8e8"/>
        <function-ref name="get" scoped="" ref="0x2ae83ec4ca70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83ec4cbf8"/>
        <function-ref name="set" scoped="" ref="0x2ae83ec4cd80"/>
        <function-ref name="clr" scoped="" ref="0x2ae83ec4b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae83ec49100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae83ec49100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83ec49450"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83ec495d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83ec49760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83ec498e8"/>
        <function-ref name="get" scoped="" ref="0x2ae83ec49a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83ec49bf8"/>
        <function-ref name="set" scoped="" ref="0x2ae83ec49d80"/>
        <function-ref name="clr" scoped="" ref="0x2ae83ec48020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae83eca8100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae83eca8100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83eca8450"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83eca85d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83eca8760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83eca88e8"/>
        <function-ref name="get" scoped="" ref="0x2ae83eca8a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83eca8bf8"/>
        <function-ref name="set" scoped="" ref="0x2ae83eca8d80"/>
        <function-ref name="clr" scoped="" ref="0x2ae83eca7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae83eca5100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae83eca5100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83eca5450"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83eca55d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83eca5760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83eca58e8"/>
        <function-ref name="get" scoped="" ref="0x2ae83eca5a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83eca5bf8"/>
        <function-ref name="set" scoped="" ref="0x2ae83eca5d80"/>
        <function-ref name="clr" scoped="" ref="0x2ae83eca4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae83eca2100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae83eca2100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83eca2450"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83eca25d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83eca2760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83eca28e8"/>
        <function-ref name="get" scoped="" ref="0x2ae83eca2a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83eca2bf8"/>
        <function-ref name="set" scoped="" ref="0x2ae83eca2d80"/>
        <function-ref name="clr" scoped="" ref="0x2ae83eca1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae83d870ac0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae83d870ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d870e10"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d87e020"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d87e1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d87e330"/>
        <function-ref name="get" scoped="" ref="0x2ae83d87e4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d87e640"/>
        <function-ref name="set" scoped="" ref="0x2ae83d87e7c8"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d87e950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae83d87adb8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae83d87adb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d88b170"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d88b2f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d88b480"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d88b608"/>
        <function-ref name="get" scoped="" ref="0x2ae83d88b790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d88b918"/>
        <function-ref name="set" scoped="" ref="0x2ae83d88baa0"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d88bc28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae83d8873e0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae83d8873e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d887730"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d8878b8"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d887a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d887bc8"/>
        <function-ref name="get" scoped="" ref="0x2ae83d887d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d886020"/>
        <function-ref name="set" scoped="" ref="0x2ae83d8861a8"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d886330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae83d8947e8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae83d8947e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d894b38"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d894cc0"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d894e48"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d893020"/>
        <function-ref name="get" scoped="" ref="0x2ae83d8931a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d893330"/>
        <function-ref name="set" scoped="" ref="0x2ae83d8934b8"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d893640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae83d88fc38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae83d88fc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d88e020"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d88e1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d88e330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d88e4b8"/>
        <function-ref name="get" scoped="" ref="0x2ae83d88e640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d88e7c8"/>
        <function-ref name="set" scoped="" ref="0x2ae83d88e950"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d88ead8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae83d89c020" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae83d89c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d89c370"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d89c4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d89c680"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d89c808"/>
        <function-ref name="get" scoped="" ref="0x2ae83d89c990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d89cb18"/>
        <function-ref name="set" scoped="" ref="0x2ae83d89cca0"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d89ce28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae83d897480" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae83d897480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d8977d0"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d897958"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d897ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d897c68"/>
        <function-ref name="get" scoped="" ref="0x2ae83d897df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d896020"/>
        <function-ref name="set" scoped="" ref="0x2ae83d8961a8"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d896330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae83d8a47e8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae83d8a47e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d8a4b38"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d8a4cc0"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d8a4e48"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d8a3020"/>
        <function-ref name="get" scoped="" ref="0x2ae83d8a31a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d8a3330"/>
        <function-ref name="set" scoped="" ref="0x2ae83d8a34b8"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d8a3640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae83d8a0970" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae83d8a0970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d8a0cc0"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d8a0e48"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d89f020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d89f1a8"/>
        <function-ref name="get" scoped="" ref="0x2ae83d89f330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d89f4b8"/>
        <function-ref name="set" scoped="" ref="0x2ae83d89f640"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d89f7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae83d8adab0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae83d8adab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d8ade00"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d8ac020"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d8ac1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d8ac330"/>
        <function-ref name="get" scoped="" ref="0x2ae83d8ac4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d8ac640"/>
        <function-ref name="set" scoped="" ref="0x2ae83d8ac7c8"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d8ac950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae83d8a9c38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae83d8a9c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d8a7020"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d8a71a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d8a7330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d8a74b8"/>
        <function-ref name="get" scoped="" ref="0x2ae83d8a7640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d8a77c8"/>
        <function-ref name="set" scoped="" ref="0x2ae83d8a7950"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d8a7ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae83d8b6020" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae83d8b6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d8b6370"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d8b64f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d8b6680"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d8b6808"/>
        <function-ref name="get" scoped="" ref="0x2ae83d8b6990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d8b6b18"/>
        <function-ref name="set" scoped="" ref="0x2ae83d8b6ca0"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d8b6e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ae83d8b1180" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ae83d8b1180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83d8b14d0"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83d8b1658"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83d8b17e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83d8b1968"/>
        <function-ref name="get" scoped="" ref="0x2ae83d8b1af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83d8b1c78"/>
        <function-ref name="set" scoped="" ref="0x2ae83d8b1e00"/>
        <function-ref name="clr" scoped="" ref="0x2ae83d8b0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ae83d8ee1b8" loc="27:/opt/tinyos-2.1.2/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ae83d8ee1b8"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2ae83d6666f0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2ae83d6666f0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ae83d8ee508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2ae83d8ee7e8" loc="28:/opt/tinyos-2.1.2/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2ae83d8ee7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2ae83d8eeb38"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2ae83d8eecc0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2ae83d8eee48"/>
        <function-ref name="actualMicro" scoped="" ref="0x2ae83d8ed020"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2ae83d8ed1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x2ae83d90a560" loc="60:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2ae83d90a560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ae83d90a8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2ae83d763e20" loc="57:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2ae83d763e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2ae83d90b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x2ae83d90be68" loc="59:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2ae83d90be68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ae83d90a1e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x2ae83d90b490" loc="58:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2ae83d90b490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ae83d90b7e0"/>
        <function-ref name="taskLoop" scoped="" ref="0x2ae83d90b968"/>
        <function-ref name="runNextTask" scoped="" ref="0x2ae83d90baf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2ae83d66e728" loc="48:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2ae83d66e728"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ae83d66ea78"/>
        <function-ref name="runTask" scoped="" ref="0x2ae83d66ec00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2ae83d66dbe8" loc="47:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2ae83d66dbe8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ae83d665020"/>
        <function-ref name="taskLoop" scoped="" ref="0x2ae83d6651a8"/>
        <function-ref name="runNextTask" scoped="" ref="0x2ae83d665330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2ae83d729b08" loc="56:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2ae83d729b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ae83d729e58"/>
        <function-ref name="runTask" scoped="" ref="0x2ae83d727020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x2ae83d726020" loc="57:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2ae83d726020"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2ae83d726370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2ae83d72ac00" loc="55:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2ae83d72ac00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ae83d729020"/>
        <function-ref name="taskLoop" scoped="" ref="0x2ae83d7291a8"/>
        <function-ref name="runNextTask" scoped="" ref="0x2ae83d729330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x2ae83d74a7b8" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2ae83d74a7b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2ae83d74ab08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x2ae83d677dc8" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2ae83d677dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2ae83d740170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x2ae83d74b240" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2ae83d74b240"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2ae83d74b590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2ae83d92f368" loc="62:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2ae83d92f368"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2ae83d92f6b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x2ae83d929af8" loc="63:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x2ae83d929af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ae83d929e48"/>
        <function-ref name="stopDone" scoped="" ref="0x2ae83d92e020"/>
        <function-ref name="start" scoped="" ref="0x2ae83d92e1a8"/>
        <function-ref name="stop" scoped="" ref="0x2ae83d92e330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartReceive" ref="0x2ae83d974690" loc="67:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartReceive" scoped="" ref="0x2ae83d974690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ae83d913458"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ae83d9749e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAMPacket" ref="0x2ae83d997148" loc="75:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAMPacket" scoped="" ref="0x2ae83d997148"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ae83d997498"/>
        <function-ref name="source" scoped="" ref="0x2ae83d997620"/>
        <function-ref name="address" scoped="" ref="0x2ae83d9977a8"/>
        <function-ref name="destination" scoped="" ref="0x2ae83d997930"/>
        <function-ref name="setSource" scoped="" ref="0x2ae83d997ab8"/>
        <function-ref name="setDestination" scoped="" ref="0x2ae83d997c40"/>
        <function-ref name="type" scoped="" ref="0x2ae83d997dc8"/>
        <function-ref name="setType" scoped="" ref="0x2ae83d996020"/>
        <function-ref name="isForMe" scoped="" ref="0x2ae83d9961a8"/>
        <function-ref name="setGroup" scoped="" ref="0x2ae83d996330"/>
        <function-ref name="localGroup" scoped="" ref="0x2ae83d9964b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="uartSendTask" ref="0x2ae83d9b0100" loc="98:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="uartSendTask" scoped="" ref="0x2ae83d9b0100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ae83d9b0450"/>
        <function-ref name="runTask" scoped="" ref="0x2ae83d9b05d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x2ae83d92e6b8" loc="64:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x2ae83d92e6b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ae83d92ea08"/>
        <function-ref name="stopDone" scoped="" ref="0x2ae83d92eb90"/>
        <function-ref name="start" scoped="" ref="0x2ae83d92ed18"/>
        <function-ref name="stop" scoped="" ref="0x2ae83d92d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0x2ae83d998410" loc="74:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2ae83d998410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ae83d998760"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ae83d9988e8"/>
        <function-ref name="getPayload" scoped="" ref="0x2ae83d998a70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ae83d998bf8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ae83d998d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x2ae83d9991c8" loc="72:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2ae83d9991c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ae83d913458"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ae83d999518"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="radioSendTask" ref="0x2ae83d9af020" loc="99:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="radioSendTask" scoped="" ref="0x2ae83d9af020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ae83d9af370"/>
        <function-ref name="runTask" scoped="" ref="0x2ae83d9af4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2ae83d995020" loc="77:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2ae83d995020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ae83d995470"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ae83d9955f8"/>
        <function-ref name="led1On" scoped="" ref="0x2ae83d995780"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ae83d995908"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ae83d995a90"/>
        <function-ref name="get" scoped="" ref="0x2ae83d995c18"/>
        <function-ref name="led1Off" scoped="" ref="0x2ae83d995da0"/>
        <function-ref name="led2Off" scoped="" ref="0x2ae83d9944b8"/>
        <function-ref name="set" scoped="" ref="0x2ae83d994020"/>
        <function-ref name="led0On" scoped="" ref="0x2ae83d9941a8"/>
        <function-ref name="led2On" scoped="" ref="0x2ae83d994330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartPacket" ref="0x2ae83d980ac0" loc="68:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartPacket" scoped="" ref="0x2ae83d980ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ae83d980e10"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ae83d978020"/>
        <function-ref name="getPayload" scoped="" ref="0x2ae83d9781a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ae83d978330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ae83d9784b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x2ae83d976e58" loc="71:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2ae83d976e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ae83d913458"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ae83d9811e8"/>
        <function-ref name="getPayload" scoped="" ref="0x2ae83d981370"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ae83d9814f8"/>
        <function-ref name="cancel" scoped="" ref="0x2ae83d981680"/>
        <function-ref name="sendDone" scoped="" ref="0x2ae83d981808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartSend" ref="0x2ae83d977a68" loc="66:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartSend" scoped="" ref="0x2ae83d977a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ae83d913458"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ae83d977db8"/>
        <function-ref name="getPayload" scoped="" ref="0x2ae83d928020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ae83d9281a8"/>
        <function-ref name="cancel" scoped="" ref="0x2ae83d928330"/>
        <function-ref name="sendDone" scoped="" ref="0x2ae83d9284b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartAMPacket" ref="0x2ae83d99b270" loc="69:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartAMPacket" scoped="" ref="0x2ae83d99b270"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ae83d99b5c0"/>
        <function-ref name="source" scoped="" ref="0x2ae83d99b748"/>
        <function-ref name="address" scoped="" ref="0x2ae83d99b8d0"/>
        <function-ref name="destination" scoped="" ref="0x2ae83d99ba58"/>
        <function-ref name="setSource" scoped="" ref="0x2ae83d99bbe0"/>
        <function-ref name="setDestination" scoped="" ref="0x2ae83d99bd68"/>
        <function-ref name="type" scoped="" ref="0x2ae83d976020"/>
        <function-ref name="setType" scoped="" ref="0x2ae83d9761a8"/>
        <function-ref name="isForMe" scoped="" ref="0x2ae83d976330"/>
        <function-ref name="setGroup" scoped="" ref="0x2ae83d9764b8"/>
        <function-ref name="localGroup" scoped="" ref="0x2ae83d976640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSnoop" ref="0x2ae83d999d40" loc="73:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSnoop" scoped="" ref="0x2ae83d999d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ae83d913458"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ae83d9980d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2ae83d9f77d8" loc="46:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2ae83d9f77d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ae83d9f7b28"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ae83d9f7cb0"/>
        <function-ref name="led1On" scoped="" ref="0x2ae83d9f7e38"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ae83d9f4020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ae83d9f41a8"/>
        <function-ref name="get" scoped="" ref="0x2ae83d9f4330"/>
        <function-ref name="led1Off" scoped="" ref="0x2ae83d9f44b8"/>
        <function-ref name="led2Off" scoped="" ref="0x2ae83d9f4ad8"/>
        <function-ref name="set" scoped="" ref="0x2ae83d9f4640"/>
        <function-ref name="led0On" scoped="" ref="0x2ae83d9f47c8"/>
        <function-ref name="led2On" scoped="" ref="0x2ae83d9f4950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x2ae83da076c8" loc="50:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x2ae83da076c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83da07a18"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83da07ba0"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83da07d28"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83da06020"/>
        <function-ref name="get" scoped="" ref="0x2ae83da061a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83da06330"/>
        <function-ref name="set" scoped="" ref="0x2ae83da064b8"/>
        <function-ref name="clr" scoped="" ref="0x2ae83da06640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ae83d9f39b8" loc="46:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ae83d9f39b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ae83d9f3d08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x2ae83da06958" loc="51:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x2ae83da06958"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83da06ca8"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83da06e30"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83da05020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83da051a8"/>
        <function-ref name="get" scoped="" ref="0x2ae83da05330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83da054b8"/>
        <function-ref name="set" scoped="" ref="0x2ae83da05640"/>
        <function-ref name="clr" scoped="" ref="0x2ae83da057c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2ae83d9f0020" loc="47:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2ae83d9f0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ae83d9f0370"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ae83d9f04f8"/>
        <function-ref name="led1On" scoped="" ref="0x2ae83d9f0680"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ae83d9f0808"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ae83d9f0990"/>
        <function-ref name="get" scoped="" ref="0x2ae83d9f0b18"/>
        <function-ref name="led1Off" scoped="" ref="0x2ae83d9f0ca0"/>
        <function-ref name="led2Off" scoped="" ref="0x2ae83da07330"/>
        <function-ref name="set" scoped="" ref="0x2ae83d9f0e28"/>
        <function-ref name="led0On" scoped="" ref="0x2ae83da07020"/>
        <function-ref name="led2On" scoped="" ref="0x2ae83da071a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x2ae83da05ae0" loc="52:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x2ae83da05ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83da05e30"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83da04020"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83da041a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83da04330"/>
        <function-ref name="get" scoped="" ref="0x2ae83da044b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83da04640"/>
        <function-ref name="set" scoped="" ref="0x2ae83da047c8"/>
        <function-ref name="clr" scoped="" ref="0x2ae83da04950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x2ae83da19060" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x2ae83da19060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83da193b0"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83da19538"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83da196c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83da19848"/>
        <function-ref name="get" scoped="" ref="0x2ae83da199d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83da19b58"/>
        <function-ref name="set" scoped="" ref="0x2ae83da19ce0"/>
        <function-ref name="clr" scoped="" ref="0x2ae83da19e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x2ae83da181f0" loc="45:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x2ae83da181f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83da18540"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83da186c8"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83da18850"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83da189d8"/>
        <function-ref name="get" scoped="" ref="0x2ae83da18b60"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83da18ce8"/>
        <function-ref name="set" scoped="" ref="0x2ae83da18e70"/>
        <function-ref name="clr" scoped="" ref="0x2ae83da17020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x2ae83da16460" loc="47:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ae83da16460"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ae83da167b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x2ae83da17378" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x2ae83da17378"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83da176c8"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83da17850"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83da179d8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83da17b60"/>
        <function-ref name="get" scoped="" ref="0x2ae83da17ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83da17e70"/>
        <function-ref name="set" scoped="" ref="0x2ae83da16020"/>
        <function-ref name="clr" scoped="" ref="0x2ae83da161a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2ae83da293b0" loc="55:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2ae83da293b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ae83da29700"/>
        <function-ref name="stopDone" scoped="" ref="0x2ae83da29888"/>
        <function-ref name="start" scoped="" ref="0x2ae83da29a10"/>
        <function-ref name="stop" scoped="" ref="0x2ae83da29b98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2ae83da28348" loc="57:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2ae83da28348"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ae83d913458"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ae83da28698"/>
        <function-ref name="getPayload" scoped="" ref="0x2ae83da28820"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ae83da289a8"/>
        <function-ref name="cancel" scoped="" ref="0x2ae83da28b30"/>
        <function-ref name="sendDone" scoped="" ref="0x2ae83da28cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2ae83da25020" loc="59:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2ae83da25020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ae83d913458"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ae83da25370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2ae83da255f8" loc="61:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2ae83da255f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ae83da25948"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ae83da25ad0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ae83da25c58"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ae83da25de0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ae83da24020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x2ae83da22020" loc="64:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2ae83da22020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ae83d6ecd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2ae83d6eb178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ae83cd80608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2ae83da39478"/>
        <function-ref name="clear" scoped="" ref="0x2ae83da39b58"/>
        <function-ref name="isValid" scoped="" ref="0x2ae83da22d70"/>
        <function-ref name="set" scoped="" ref="0x2ae83da44278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2ae83da3a848" loc="66:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2ae83da3a848"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2ae83da3ab98"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2ae83da3ad20"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2ae83da3f020"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2ae83da3f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ae83da26498" loc="58:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2ae83da26498"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ae83d913458"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ae83da267e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2ae83da33290" loc="63:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ae83da33290"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2ae83da335e0"/>
        <function-ref name="noAck" scoped="" ref="0x2ae83da33768"/>
        <function-ref name="wasAcked" scoped="" ref="0x2ae83da338f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2ae83da242c0" loc="62:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2ae83da242c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ae83da24610"/>
        <function-ref name="source" scoped="" ref="0x2ae83da24798"/>
        <function-ref name="address" scoped="" ref="0x2ae83da24920"/>
        <function-ref name="destination" scoped="" ref="0x2ae83da24aa8"/>
        <function-ref name="setSource" scoped="" ref="0x2ae83da24c30"/>
        <function-ref name="setDestination" scoped="" ref="0x2ae83da24db8"/>
        <function-ref name="type" scoped="" ref="0x2ae83da23020"/>
        <function-ref name="setType" scoped="" ref="0x2ae83da231a8"/>
        <function-ref name="isForMe" scoped="" ref="0x2ae83da23330"/>
        <function-ref name="setGroup" scoped="" ref="0x2ae83da234b8"/>
        <function-ref name="localGroup" scoped="" ref="0x2ae83da23640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2ae83da44e48" loc="65:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2ae83da44e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ae83d6ec608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ae83d6ec960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ae83cd80608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2ae83da42300"/>
        <function-ref name="clear" scoped="" ref="0x2ae83da429e0"/>
        <function-ref name="isValid" scoped="" ref="0x2ae83da43be8"/>
        <function-ref name="set" scoped="" ref="0x2ae83da400f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2ae83da47310" loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2ae83da47310"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ae83da47660"/>
        <function-ref name="stopDone" scoped="" ref="0x2ae83da477e8"/>
        <function-ref name="start" scoped="" ref="0x2ae83da47970"/>
        <function-ref name="stop" scoped="" ref="0x2ae83da47af8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2ae83da62700" loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x2ae83da62700"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ae83d913458"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2ae83da62a50"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2ae83da62bd8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2ae83da62d60"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2ae83da6b020"/>
        <function-ref name="setCca" scoped="" ref="0x2ae83da6b1a8"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2ae83da6b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2ae83da791c8" loc="67:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2ae83da791c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ae83d913458"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2ae83da79618"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2ae83da5cbd8" loc="60:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2ae83da5cbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ae83da5b020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ae83da5b1a8"/>
        <function-ref name="getPayload" scoped="" ref="0x2ae83da5b330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ae83da5b4b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ae83da5b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2ae83da602b0" loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2ae83da602b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ae83d913458"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ae83da60600"/>
        <function-ref name="getPayload" scoped="" ref="0x2ae83da60788"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ae83da60910"/>
        <function-ref name="cancel" scoped="" ref="0x2ae83da60a98"/>
        <function-ref name="sendDone" scoped="" ref="0x2ae83da60c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2ae83da5e020" loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2ae83da5e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ae83d913458"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ae83da5e370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x2ae83da6d888" loc="61:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x2ae83da6d888"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2ae83da6dbd8"/>
        <function-ref name="setNetwork" scoped="" ref="0x2ae83da6dd60"/>
        <function-ref name="getRssi" scoped="" ref="0x2ae83da5a020"/>
        <function-ref name="getNetwork" scoped="" ref="0x2ae83da5a1a8"/>
        <function-ref name="getPower" scoped="" ref="0x2ae83da5a330"/>
        <function-ref name="getLqi" scoped="" ref="0x2ae83da5a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2ae83da6b628" loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2ae83da6b628"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2ae83da6b978"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2ae83da6bb00"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2ae83da6bc88"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2ae83da6be10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ae83da5f3c8" loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2ae83da5f3c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ae83d913458"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ae83da5f718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2ae83da5a7e0" loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ae83da5a7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2ae83da5ab30"/>
        <function-ref name="noAck" scoped="" ref="0x2ae83da5acb8"/>
        <function-ref name="wasAcked" scoped="" ref="0x2ae83da5ae40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2ae83da72450" loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x2ae83da72450"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2ae83da727a0"/>
        <function-ref name="setRetries" scoped="" ref="0x2ae83da72928"/>
        <function-ref name="getRetries" scoped="" ref="0x2ae83da72ab0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2ae83da72c38"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2ae83da72dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2ae83da5e610" loc="59:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2ae83da5e610"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ae83da5e960"/>
        <function-ref name="source" scoped="" ref="0x2ae83da5eae8"/>
        <function-ref name="address" scoped="" ref="0x2ae83da5ec70"/>
        <function-ref name="destination" scoped="" ref="0x2ae83da5edf8"/>
        <function-ref name="setSource" scoped="" ref="0x2ae83da5c020"/>
        <function-ref name="setDestination" scoped="" ref="0x2ae83da5c1a8"/>
        <function-ref name="type" scoped="" ref="0x2ae83da5c330"/>
        <function-ref name="setType" scoped="" ref="0x2ae83da5c4b8"/>
        <function-ref name="isForMe" scoped="" ref="0x2ae83da5c640"/>
        <function-ref name="setGroup" scoped="" ref="0x2ae83da5c7c8"/>
        <function-ref name="localGroup" scoped="" ref="0x2ae83da5c950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2ae83da697b0" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2ae83da697b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2ae83da69b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2ae83da87020" loc="43:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2ae83da87020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ae83da87370"/>
        <function-ref name="stopDone" scoped="" ref="0x2ae83da874f8"/>
        <function-ref name="start" scoped="" ref="0x2ae83da87680"/>
        <function-ref name="stop" scoped="" ref="0x2ae83da87808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2ae83da8c020" loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2ae83da8c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2ae83da8c370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2ae83da8b128" loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x2ae83da8b128"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2ae83da8b478"/>
        <function-ref name="setRetries" scoped="" ref="0x2ae83da8b600"/>
        <function-ref name="getRetries" scoped="" ref="0x2ae83da8b788"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2ae83da8b910"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2ae83da8ba98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x2ae83da907e8" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x2ae83da907e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2ae83da90b38"/>
        <function-ref name="setNetwork" scoped="" ref="0x2ae83da90cc0"/>
        <function-ref name="getRssi" scoped="" ref="0x2ae83da90e48"/>
        <function-ref name="getNetwork" scoped="" ref="0x2ae83da8e020"/>
        <function-ref name="getPower" scoped="" ref="0x2ae83da8e1a8"/>
        <function-ref name="getLqi" scoped="" ref="0x2ae83da8e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x2ae83da7e4c8" loc="50:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveSend" scoped="" ref="0x2ae83da7e4c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ae83da7e818"/>
        <function-ref name="getPayload" scoped="" ref="0x2ae83da7e9a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ae83da7eb28"/>
        <function-ref name="cancel" scoped="" ref="0x2ae83da7ecb0"/>
        <function-ref name="sendDone" scoped="" ref="0x2ae83da7ee38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2ae83da8c668" loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2ae83da8c668"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2ae83da8c9b8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2ae83da8cb40"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2ae83da8ccc8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2ae83da8ce50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x2ae83da80020" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x2ae83da80020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ae83da80370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2ae83da8e658" loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ae83da8e658"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2ae83da8e9a8"/>
        <function-ref name="noAck" scoped="" ref="0x2ae83da8eb30"/>
        <function-ref name="wasAcked" scoped="" ref="0x2ae83da8ecb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ae83da86340" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2ae83da86340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ae83da86690"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ae83da86818"/>
        <function-ref name="request" scoped="" ref="0x2ae83da869a0"/>
        <function-ref name="granted" scoped="" ref="0x2ae83da86b28"/>
        <function-ref name="isOwner" scoped="" ref="0x2ae83da86cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x2ae83da8f330" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x2ae83da8f330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ae83da8f680"/>
        <function-ref name="getPayload" scoped="" ref="0x2ae83da8f808"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ae83da8f990"/>
        <function-ref name="cancel" scoped="" ref="0x2ae83da8fb18"/>
        <function-ref name="sendDone" scoped="" ref="0x2ae83da8fca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x2ae83da806a0" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BarePacket" scoped="" ref="0x2ae83da806a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ae83da809f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ae83da80b78"/>
        <function-ref name="getPayload" scoped="" ref="0x2ae83da80d00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ae83da7e020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ae83da7e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x2ae83da901d0" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveReceive" scoped="" ref="0x2ae83da901d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ae83da90520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2ae83da8a770" loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2ae83da8a770"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ae83da8aac0"/>
        <function-ref name="stopDone" scoped="" ref="0x2ae83da8ac48"/>
        <function-ref name="start" scoped="" ref="0x2ae83da8add0"/>
        <function-ref name="stop" scoped="" ref="0x2ae83daa1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2ae83daa0678" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x2ae83daa0678"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2ae83daa09c8"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2ae83daa0b50"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2ae83daa0cd8"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2ae83daa0e60"/>
        <function-ref name="setCca" scoped="" ref="0x2ae83da9f020"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2ae83da9f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2ae83daa12d8" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2ae83daa12d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ae83daa1628"/>
        <function-ref name="getPayload" scoped="" ref="0x2ae83daa17b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ae83daa1938"/>
        <function-ref name="cancel" scoped="" ref="0x2ae83daa1ac0"/>
        <function-ref name="sendDone" scoped="" ref="0x2ae83daa1c48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ae83daa0020" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2ae83daa0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ae83daa0370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2ae83da9c4f0" loc="39:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2ae83da9c4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ae83da9c840"/>
        <function-ref name="stopDone" scoped="" ref="0x2ae83da9c9c8"/>
        <function-ref name="start" scoped="" ref="0x2ae83da9cb50"/>
        <function-ref name="stop" scoped="" ref="0x2ae83da9ccd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2ae83da9bc98" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x2ae83da9bc98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2ae83da9a020"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2ae83da9a1a8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2ae83da9a330"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2ae83da9a4b8"/>
        <function-ref name="setCca" scoped="" ref="0x2ae83da9a640"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2ae83da9a7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x2ae83daaaaa8" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBackoff" scoped="" ref="0x2ae83daaaaa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2ae83daaadf8"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2ae83daa8020"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2ae83daa81a8"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2ae83daa8330"/>
        <function-ref name="setCca" scoped="" ref="0x2ae83daa84b8"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2ae83daa8640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2ae83dabbc58" loc="50:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x2ae83dabbc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2ae83dab9020"/>
        <function-ref name="setNetwork" scoped="" ref="0x2ae83dab91a8"/>
        <function-ref name="getRssi" scoped="" ref="0x2ae83dab9330"/>
        <function-ref name="getNetwork" scoped="" ref="0x2ae83dab94b8"/>
        <function-ref name="getPower" scoped="" ref="0x2ae83dab9640"/>
        <function-ref name="getLqi" scoped="" ref="0x2ae83dab97c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x2ae83daa2d48" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Transmit" scoped="" ref="0x2ae83daa2d48"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ae83daaa0d8"/>
        <function-ref name="cancel" scoped="" ref="0x2ae83daaa260"/>
        <function-ref name="modify" scoped="" ref="0x2ae83daaa3e8"/>
        <function-ref name="sendDone" scoped="" ref="0x2ae83daaa570"/>
        <function-ref name="resend" scoped="" ref="0x2ae83daaa6f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2ae83da9b020" loc="40:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2ae83da9b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ae83da9b370"/>
        <function-ref name="getPayload" scoped="" ref="0x2ae83da9b4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ae83da9b680"/>
        <function-ref name="cancel" scoped="" ref="0x2ae83da9b808"/>
        <function-ref name="sendDone" scoped="" ref="0x2ae83da9b990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x2ae83dabad58" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2ae83dabad58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2ae83dabc0d8"/>
        <function-ref name="rand32" scoped="" ref="0x2ae83dabc260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x2ae83daa95f0" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x2ae83daa95f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ae83daa9940"/>
        <function-ref name="stop" scoped="" ref="0x2ae83daa9ac8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2ae83dab8020" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ae83dab8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2ae83dab8370"/>
        <function-ref name="getHeader" scoped="" ref="0x2ae83dab84f8"/>
        <function-ref name="getMetadata" scoped="" ref="0x2ae83dab8680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x2ae83daacb68" loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x2ae83daacb68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x2ae83da98020"/>
        <function-ref name="rfOff" scoped="" ref="0x2ae83da981a8"/>
        <function-ref name="rxOn" scoped="" ref="0x2ae83da98330"/>
        <function-ref name="startVReg" scoped="" ref="0x2ae83da984b8"/>
        <function-ref name="stopVReg" scoped="" ref="0x2ae83da98640"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x2ae83da987c8"/>
        <function-ref name="stopOscillator" scoped="" ref="0x2ae83da98950"/>
        <function-ref name="startVRegDone" scoped="" ref="0x2ae83da98ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2ae83dabc518" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2ae83dabc518"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ae83dabc868"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ae83dabc9f0"/>
        <function-ref name="led1On" scoped="" ref="0x2ae83dabcb78"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ae83dabcd00"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ae83dabb020"/>
        <function-ref name="get" scoped="" ref="0x2ae83dabb1a8"/>
        <function-ref name="led1Off" scoped="" ref="0x2ae83dabb330"/>
        <function-ref name="led2Off" scoped="" ref="0x2ae83dabb950"/>
        <function-ref name="set" scoped="" ref="0x2ae83dabb4b8"/>
        <function-ref name="led0On" scoped="" ref="0x2ae83dabb640"/>
        <function-ref name="led2On" scoped="" ref="0x2ae83dabb7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2ae83da9aaa8" loc="43:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2ae83da9aaa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ae83da9adf8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ae83da99020"/>
        <function-ref name="request" scoped="" ref="0x2ae83da991a8"/>
        <function-ref name="granted" scoped="" ref="0x2ae83da99330"/>
        <function-ref name="isOwner" scoped="" ref="0x2ae83da994b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x2ae83dac9540" loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControlState" scoped="" ref="0x2ae83dac9540"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2ae83dac9990"/>
        <function-ref name="toIdle" scoped="" ref="0x2ae83dac9b18"/>
        <function-ref name="isState" scoped="" ref="0x2ae83dac9ca0"/>
        <function-ref name="isIdle" scoped="" ref="0x2ae83dac9e28"/>
        <function-ref name="requestState" scoped="" ref="0x2ae83dab7020"/>
        <function-ref name="forceState" scoped="" ref="0x2ae83dab71a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x2ae83dac5b80" loc="76:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendDone_task" scoped="" ref="0x2ae83dac5b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ae83dac4020"/>
        <function-ref name="runTask" scoped="" ref="0x2ae83dac41a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x2ae83dac6cf8" loc="75:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDone_task" scoped="" ref="0x2ae83dac6cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ae83dac50a0"/>
        <function-ref name="runTask" scoped="" ref="0x2ae83dac5228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x2ae83dac7e68" loc="74:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDone_task" scoped="" ref="0x2ae83dac7e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ae83dac61e8"/>
        <function-ref name="runTask" scoped="" ref="0x2ae83dac6370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x2ae83db18af8" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x2ae83db18af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x2ae83db18e48"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2ae83db08020"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2ae83db081a8"/>
        <function-ref name="syncDone" scoped="" ref="0x2ae83db08330"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x2ae83db084b8"/>
        <function-ref name="setShortAddr" scoped="" ref="0x2ae83db08640"/>
        <function-ref name="setChannel" scoped="" ref="0x2ae83db087c8"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x2ae83db08950"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2ae83db08ad8"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x2ae83db08c60"/>
        <function-ref name="getExtAddr" scoped="" ref="0x2ae83db08de8"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2ae83db07020"/>
        <function-ref name="sync" scoped="" ref="0x2ae83db071a8"/>
        <function-ref name="getChannel" scoped="" ref="0x2ae83db07430"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2ae83db075b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x2ae83db13d28" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRssi" scoped="" ref="0x2ae83db13d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ae83cd7fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83db168b8"/>
        <function-ref name="readDone" scoped="" ref="0x2ae83db16d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x2ae83db078b0" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x2ae83db078b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x2ae83db07c00"/>
        <function-ref name="rfOff" scoped="" ref="0x2ae83db07d88"/>
        <function-ref name="rxOn" scoped="" ref="0x2ae83db17020"/>
        <function-ref name="startVReg" scoped="" ref="0x2ae83db171a8"/>
        <function-ref name="stopVReg" scoped="" ref="0x2ae83db17330"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x2ae83db174b8"/>
        <function-ref name="stopOscillator" scoped="" ref="0x2ae83db17640"/>
        <function-ref name="startVRegDone" scoped="" ref="0x2ae83db177c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ae83db0ce00" loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2ae83db0ce00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ae83db091a8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ae83db09330"/>
        <function-ref name="request" scoped="" ref="0x2ae83db094b8"/>
        <function-ref name="granted" scoped="" ref="0x2ae83db09640"/>
        <function-ref name="isOwner" scoped="" ref="0x2ae83db097c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x2ae83db2a328" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x2ae83db2a328"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x2ae83db2a678"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2ae83db2a800"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2ae83db2a988"/>
        <function-ref name="syncDone" scoped="" ref="0x2ae83db2ab10"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x2ae83db2ac98"/>
        <function-ref name="setShortAddr" scoped="" ref="0x2ae83db2ae20"/>
        <function-ref name="setChannel" scoped="" ref="0x2ae83db29020"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x2ae83db291a8"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2ae83db29330"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x2ae83db294b8"/>
        <function-ref name="getExtAddr" scoped="" ref="0x2ae83db29640"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2ae83db297c8"/>
        <function-ref name="sync" scoped="" ref="0x2ae83db29950"/>
        <function-ref name="getChannel" scoped="" ref="0x2ae83db29bd8"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2ae83db29d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x2ae83db3dc48" loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x2ae83db3dc48"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83db3c020"/>
        <function-ref name="write" scoped="" ref="0x2ae83db3c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x2ae83db237f0" loc="50:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2ae83db237f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x2ae83db23b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x2ae83db24060" loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StartupTimer" scoped="" ref="0x2ae83db24060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ae83d6ecd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2ae83d6eb178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ae83cd80608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ae83db37690"/>
        <function-ref name="fired" scoped="" ref="0x2ae83db22738"/>
        <function-ref name="startAt" scoped="" ref="0x2ae83db37088"/>
        <function-ref name="isRunning" scoped="" ref="0x2ae83db22bc0"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ae83db37b18"/>
        <function-ref name="start" scoped="" ref="0x2ae83db24db0"/>
        <function-ref name="stop" scoped="" ref="0x2ae83db222b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x2ae83db3fab8" loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x2ae83db3fab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83db3fe08"/>
        <function-ref name="write" scoped="" ref="0x2ae83db3d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x2ae83db341b0" loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x2ae83db341b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83db34500"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83db34688"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83db34810"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83db34998"/>
        <function-ref name="get" scoped="" ref="0x2ae83db34b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83db34ca8"/>
        <function-ref name="set" scoped="" ref="0x2ae83db34e30"/>
        <function-ref name="clr" scoped="" ref="0x2ae83db33020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x2ae83db274d0" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRssi" scoped="" ref="0x2ae83db274d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ae83cd7fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83db26088"/>
        <function-ref name="readDone" scoped="" ref="0x2ae83db264d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x2ae83db673f0" loc="126:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="syncDone" scoped="" ref="0x2ae83db673f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ae83db67740"/>
        <function-ref name="runTask" scoped="" ref="0x2ae83db678c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x2ae83db3c530" loc="67:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x2ae83db3c530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83db3c880"/>
        <function-ref name="write" scoped="" ref="0x2ae83db3ca08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x2ae83db3cda0" loc="68:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x2ae83db3cda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83db58170"/>
        <function-ref name="write" scoped="" ref="0x2ae83db582f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x2ae83db41990" loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x2ae83db41990"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83db41ce0"/>
        <function-ref name="write" scoped="" ref="0x2ae83db41e68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x2ae83db461b0" loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2ae83db461b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2ae83db46500"/>
        <function-ref name="changed" scoped="" ref="0x2ae83db46688"/>
        <function-ref name="amGroup" scoped="" ref="0x2ae83db46810"/>
        <function-ref name="setAddress" scoped="" ref="0x2ae83db46998"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x2ae83db35020" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x2ae83db35020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83db35370"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83db354f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83db35680"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83db35808"/>
        <function-ref name="get" scoped="" ref="0x2ae83db35990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83db35b18"/>
        <function-ref name="set" scoped="" ref="0x2ae83db35ca0"/>
        <function-ref name="clr" scoped="" ref="0x2ae83db35e28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x2ae83db573c0" loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x2ae83db573c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ae83db57910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x2ae83db33378" loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VREN" scoped="" ref="0x2ae83db33378"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83db336c8"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83db33850"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83db339d8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83db33b60"/>
        <function-ref name="get" scoped="" ref="0x2ae83db33ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83db33e70"/>
        <function-ref name="set" scoped="" ref="0x2ae83db32020"/>
        <function-ref name="clr" scoped="" ref="0x2ae83db321a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ae83db2b020" loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ae83db2b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ae83db2b370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x2ae83db3d3d0" loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x2ae83db3d3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83db3d720"/>
        <function-ref name="write" scoped="" ref="0x2ae83db3d8a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x2ae83db57ca0" loc="72:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x2ae83db57ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ae83db56020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2ae83db563b0" loc="74:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x2ae83db563b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ae83db56700"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ae83db56888"/>
        <function-ref name="request" scoped="" ref="0x2ae83db56a10"/>
        <function-ref name="granted" scoped="" ref="0x2ae83db56b98"/>
        <function-ref name="isOwner" scoped="" ref="0x2ae83db56d20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x2ae83db54e50" loc="76:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SyncResource" scoped="" ref="0x2ae83db54e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ae83db531e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ae83db53370"/>
        <function-ref name="request" scoped="" ref="0x2ae83db534f8"/>
        <function-ref name="granted" scoped="" ref="0x2ae83db53680"/>
        <function-ref name="isOwner" scoped="" ref="0x2ae83db53808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x2ae83db28080" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x2ae83db28080"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x2ae83db283d0"/>
        <function-ref name="rfOff" scoped="" ref="0x2ae83db28558"/>
        <function-ref name="rxOn" scoped="" ref="0x2ae83db286e0"/>
        <function-ref name="startVReg" scoped="" ref="0x2ae83db28868"/>
        <function-ref name="stopVReg" scoped="" ref="0x2ae83db289f0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x2ae83db28b78"/>
        <function-ref name="stopOscillator" scoped="" ref="0x2ae83db28d00"/>
        <function-ref name="startVRegDone" scoped="" ref="0x2ae83db27020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x2ae83db3f230" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x2ae83db3f230"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83db3f580"/>
        <function-ref name="write" scoped="" ref="0x2ae83db3f708"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x2ae83db41120" loc="61:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x2ae83db41120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83db41470"/>
        <function-ref name="write" scoped="" ref="0x2ae83db415f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x2ae83db55518" loc="69:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x2ae83db55518"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ae83db55868"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2ae83db53ac0" loc="78:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2ae83db53ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ae83db53e10"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ae83db52020"/>
        <function-ref name="led1On" scoped="" ref="0x2ae83db521a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ae83db52330"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ae83db524b8"/>
        <function-ref name="get" scoped="" ref="0x2ae83db52640"/>
        <function-ref name="led1Off" scoped="" ref="0x2ae83db527c8"/>
        <function-ref name="led2Off" scoped="" ref="0x2ae83db52de8"/>
        <function-ref name="set" scoped="" ref="0x2ae83db52950"/>
        <function-ref name="led0On" scoped="" ref="0x2ae83db52ad8"/>
        <function-ref name="led2On" scoped="" ref="0x2ae83db52c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x2ae83db4a598" loc="125:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sync" scoped="" ref="0x2ae83db4a598"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ae83db4a8e8"/>
        <function-ref name="runTask" scoped="" ref="0x2ae83db4aa70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ae83db2b650" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2ae83db2b650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ae83db2b9a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ae83db2bb28"/>
        <function-ref name="request" scoped="" ref="0x2ae83db2bcb0"/>
        <function-ref name="granted" scoped="" ref="0x2ae83db2be38"/>
        <function-ref name="isOwner" scoped="" ref="0x2ae83db2a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x2ae83db30a60" loc="60:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x2ae83db30a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83db30db0"/>
        <function-ref name="write" scoped="" ref="0x2ae83db2d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x2ae83db30128" loc="59:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x2ae83db30128"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83db30578"/>
        <function-ref name="write" scoped="" ref="0x2ae83db30700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x2ae83db2eb78" loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptCCA" scoped="" ref="0x2ae83db2eb78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ae83db31020"/>
        <function-ref name="disable" scoped="" ref="0x2ae83db311a8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2ae83db31330"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2ae83db314b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x2ae83db54140" loc="75:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiResource" scoped="" ref="0x2ae83db54140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ae83db54490"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ae83db54618"/>
        <function-ref name="request" scoped="" ref="0x2ae83db547a0"/>
        <function-ref name="granted" scoped="" ref="0x2ae83db54928"/>
        <function-ref name="isOwner" scoped="" ref="0x2ae83db54ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x2ae83db55bf0" loc="70:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x2ae83db55bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ae83db57020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ae83dbc83c0" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ae83dbc83c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ae83dbc8710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x2ae83dbc8d38" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm32khz32" scoped="" ref="0x2ae83dbc8d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ae83d6ecd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2ae83d6eb178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ae83cd80608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ae83dbc4410"/>
        <function-ref name="fired" scoped="" ref="0x2ae83dbc54a8"/>
        <function-ref name="startAt" scoped="" ref="0x2ae83dbc5db8"/>
        <function-ref name="isRunning" scoped="" ref="0x2ae83dbc5930"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ae83dbc4898"/>
        <function-ref name="start" scoped="" ref="0x2ae83dbc7ac0"/>
        <function-ref name="stop" scoped="" ref="0x2ae83dbc5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2ae83dbe19e8" loc="86:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2ae83dbe19e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ae83d6ecd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2ae83d6eb178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ae83cd80608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ae83de23088"/>
        <function-ref name="fired" scoped="" ref="0x2ae83de240f8"/>
        <function-ref name="startAt" scoped="" ref="0x2ae83de24a08"/>
        <function-ref name="isRunning" scoped="" ref="0x2ae83de24580"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ae83de23510"/>
        <function-ref name="start" scoped="" ref="0x2ae83de28768"/>
        <function-ref name="stop" scoped="" ref="0x2ae83de28c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ae83de23928" loc="87:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ae83de23928"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ae83de23c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2ae83ed64b48" loc="28:/opt/tinyos-2.1.2/tos/platforms/mica/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2ae83ed64b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ae83d6ecd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2ae83d6eb178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ae83cd80608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ae83ed61238"/>
        <function-ref name="fired" scoped="" ref="0x2ae83ed622b0"/>
        <function-ref name="startAt" scoped="" ref="0x2ae83ed62bc0"/>
        <function-ref name="isRunning" scoped="" ref="0x2ae83ed62738"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ae83ed616c0"/>
        <function-ref name="start" scoped="" ref="0x2ae83ed638f8"/>
        <function-ref name="stop" scoped="" ref="0x2ae83ed63dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2ae83ed5d020" loc="30:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2ae83ed5d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ae83d6ecd70"/>
            <typename><typedef-ref name="TOne" ref="0x2ae83d722720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ae83cd7fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ae83ed5b690"/>
        <function-ref name="fired" scoped="" ref="0x2ae83ed5c6f8"/>
        <function-ref name="startAt" scoped="" ref="0x2ae83ed5b088"/>
        <function-ref name="isRunning" scoped="" ref="0x2ae83ed5cb80"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ae83ed5bb18"/>
        <function-ref name="start" scoped="" ref="0x2ae83ed5dd70"/>
        <function-ref name="stop" scoped="" ref="0x2ae83ed5c270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2ae83dbfd0c0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2ae83dbfd0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2ae83dbfd410"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x2ae83dbfd598"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2ae83dbfd720"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x2ae83dbfd8a8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2ae83dbfda30"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2ae83dbfdbb8"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x2ae83dbfdd40"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x2ae83dbfc020"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x2ae83dbfc1a8"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x2ae83dbfc330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2ae83dc0db68" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2ae83dc0db68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ae83cd7fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2ae83dc0bdb8"/>
        <function-ref name="test" scoped="" ref="0x2ae83dc0b4a8"/>
        <function-ref name="get" scoped="" ref="0x2ae83dbf4728"/>
        <function-ref name="captured" scoped="" ref="0x2ae83dc0c0c0"/>
        <function-ref name="reset" scoped="" ref="0x2ae83dc0c598"/>
        <function-ref name="isOn" scoped="" ref="0x2ae83dc0b930"/>
        <function-ref name="set" scoped="" ref="0x2ae83dbf4bb0"/>
        <function-ref name="start" scoped="" ref="0x2ae83dc0ca20"/>
        <function-ref name="stop" scoped="" ref="0x2ae83dc0b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2ae83dc09020" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2ae83dc09020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ae83cd7fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2ae83dc217a8"/>
        <function-ref name="fired" scoped="" ref="0x2ae83dc22560"/>
        <function-ref name="get" scoped="" ref="0x2ae83dc09ba0"/>
        <function-ref name="reset" scoped="" ref="0x2ae83dc229e8"/>
        <function-ref name="isOn" scoped="" ref="0x2ae83dc21c30"/>
        <function-ref name="set" scoped="" ref="0x2ae83dc22088"/>
        <function-ref name="start" scoped="" ref="0x2ae83dc22e70"/>
        <function-ref name="stop" scoped="" ref="0x2ae83dc21320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2ae83dbea020" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2ae83dbea020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ae83cd7fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2ae83dbff0f8"/>
        <function-ref name="test" scoped="" ref="0x2ae83dc007a8"/>
        <function-ref name="get" scoped="" ref="0x2ae83dbeaba0"/>
        <function-ref name="setScale" scoped="" ref="0x2ae83dbff580"/>
        <function-ref name="getScale" scoped="" ref="0x2ae83dbffa58"/>
        <function-ref name="reset" scoped="" ref="0x2ae83dbe99e8"/>
        <function-ref name="overflow" scoped="" ref="0x2ae83dbe9560"/>
        <function-ref name="isOn" scoped="" ref="0x2ae83dc00c30"/>
        <function-ref name="set" scoped="" ref="0x2ae83dbe9088"/>
        <function-ref name="start" scoped="" ref="0x2ae83dbe9e70"/>
        <function-ref name="stop" scoped="" ref="0x2ae83dc00320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2ae83dc31950" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2ae83dc31950"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2ae83dc31ca0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2ae83dc31e28"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2ae83dc17020"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2ae83dc171a8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2ae83dc17330"/>
        <function-ref name="setControl" scoped="" ref="0x2ae83dc174b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x2ae83dc27470" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2ae83dc27470"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x2ae83dc277c0"/>
        <function-ref name="compareBusy" scoped="" ref="0x2ae83dc27948"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x2ae83dc27ad0"/>
        <function-ref name="countBusy" scoped="" ref="0x2ae83dc27c58"/>
        <function-ref name="getAssr" scoped="" ref="0x2ae83dc27de0"/>
        <function-ref name="setAssr" scoped="" ref="0x2ae83dc2d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2ae83dc17980" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2ae83dc17980"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2ae83dc2e270"/>
        <function-ref name="fired" scoped="" ref="0x2ae83dc30020"/>
        <function-ref name="get" scoped="" ref="0x2ae83dc16560"/>
        <function-ref name="reset" scoped="" ref="0x2ae83dc304a8"/>
        <function-ref name="isOn" scoped="" ref="0x2ae83dc2e6f8"/>
        <function-ref name="set" scoped="" ref="0x2ae83dc169e8"/>
        <function-ref name="start" scoped="" ref="0x2ae83dc30930"/>
        <function-ref name="stop" scoped="" ref="0x2ae83dc30db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2ae83dc1fd90" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2ae83dc1fd90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2ae83dc1ae58"/>
        <function-ref name="test" scoped="" ref="0x2ae83dc1a548"/>
        <function-ref name="get" scoped="" ref="0x2ae83dc1c940"/>
        <function-ref name="setScale" scoped="" ref="0x2ae83dc18310"/>
        <function-ref name="getScale" scoped="" ref="0x2ae83dc187e8"/>
        <function-ref name="reset" scoped="" ref="0x2ae83dc1b778"/>
        <function-ref name="overflow" scoped="" ref="0x2ae83dc1b2f0"/>
        <function-ref name="isOn" scoped="" ref="0x2ae83dc1a9d0"/>
        <function-ref name="set" scoped="" ref="0x2ae83dc1cdc8"/>
        <function-ref name="start" scoped="" ref="0x2ae83dc1bc00"/>
        <function-ref name="stop" scoped="" ref="0x2ae83dc1a0c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2ae83dc41558" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2ae83dc41558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2ae83dc418a8"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2ae83dc41a30"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2ae83dc41bb8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2ae83dc41d40"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2ae83dc40020"/>
        <function-ref name="setControl" scoped="" ref="0x2ae83dc401a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x2ae83dc3c790" loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2ae83dc3c790"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2ae83dc3cae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x2ae83dc3b020" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2ae83dc3b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x2ae83dc3b370"/>
        <function-ref name="compareBusy" scoped="" ref="0x2ae83dc3b4f8"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x2ae83dc3b680"/>
        <function-ref name="countBusy" scoped="" ref="0x2ae83dc3b808"/>
        <function-ref name="getAssr" scoped="" ref="0x2ae83dc3b990"/>
        <function-ref name="setAssr" scoped="" ref="0x2ae83dc3bb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2ae83dc40670" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2ae83dc40670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2ae83dc3ee20"/>
        <function-ref name="fired" scoped="" ref="0x2ae83dc3fb80"/>
        <function-ref name="get" scoped="" ref="0x2ae83dc3f220"/>
        <function-ref name="reset" scoped="" ref="0x2ae83dc3e088"/>
        <function-ref name="isOn" scoped="" ref="0x2ae83dc3c310"/>
        <function-ref name="set" scoped="" ref="0x2ae83dc3f6a8"/>
        <function-ref name="start" scoped="" ref="0x2ae83dc3e510"/>
        <function-ref name="stop" scoped="" ref="0x2ae83dc3e998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2ae83dc25400" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2ae83dc25400"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2ae83dc43580"/>
        <function-ref name="test" scoped="" ref="0x2ae83dc23c20"/>
        <function-ref name="get" scoped="" ref="0x2ae83dc24020"/>
        <function-ref name="setScale" scoped="" ref="0x2ae83dc43a08"/>
        <function-ref name="getScale" scoped="" ref="0x2ae83dc41020"/>
        <function-ref name="reset" scoped="" ref="0x2ae83dc24e08"/>
        <function-ref name="overflow" scoped="" ref="0x2ae83dc24980"/>
        <function-ref name="isOn" scoped="" ref="0x2ae83dc430f8"/>
        <function-ref name="set" scoped="" ref="0x2ae83dc244a8"/>
        <function-ref name="start" scoped="" ref="0x2ae83dc23310"/>
        <function-ref name="stop" scoped="" ref="0x2ae83dc23798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2ae83dcad568" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2ae83dcad568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2ae83dcad8b8"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x2ae83dcada40"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2ae83dcadbc8"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x2ae83dcadd50"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2ae83dcac020"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2ae83dcac1a8"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x2ae83dcac330"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x2ae83dcac4b8"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x2ae83dcac640"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x2ae83dcac7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0Ctrl" ref="0x2ae83dcbd020" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0Ctrl" scoped="" ref="0x2ae83dcbd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2ae83dcbd370"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2ae83dcbd4f8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2ae83dcbd680"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2ae83dcbd808"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2ae83dcbd990"/>
        <function-ref name="setControl" scoped="" ref="0x2ae83dcbdb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x2ae83dca7540" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x2ae83dca7540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ae83cd7fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2ae83dca5db8"/>
        <function-ref name="fired" scoped="" ref="0x2ae83dca6a58"/>
        <function-ref name="get" scoped="" ref="0x2ae83dca60f8"/>
        <function-ref name="reset" scoped="" ref="0x2ae83dca5020"/>
        <function-ref name="isOn" scoped="" ref="0x2ae83dca3270"/>
        <function-ref name="set" scoped="" ref="0x2ae83dca6580"/>
        <function-ref name="start" scoped="" ref="0x2ae83dca54a8"/>
        <function-ref name="stop" scoped="" ref="0x2ae83dca5930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2ae83dcacca0" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2ae83dcacca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ae83cd7fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2ae83dca8e20"/>
        <function-ref name="test" scoped="" ref="0x2ae83dca8510"/>
        <function-ref name="get" scoped="" ref="0x2ae83dcab858"/>
        <function-ref name="captured" scoped="" ref="0x2ae83dcaa238"/>
        <function-ref name="reset" scoped="" ref="0x2ae83dcaa710"/>
        <function-ref name="isOn" scoped="" ref="0x2ae83dca8998"/>
        <function-ref name="set" scoped="" ref="0x2ae83dcabce0"/>
        <function-ref name="start" scoped="" ref="0x2ae83dcaab98"/>
        <function-ref name="stop" scoped="" ref="0x2ae83dca8088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x2ae83dca38e8" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x2ae83dca38e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ae83cd7fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2ae83dc9f088"/>
        <function-ref name="fired" scoped="" ref="0x2ae83dca2df0"/>
        <function-ref name="get" scoped="" ref="0x2ae83dca2490"/>
        <function-ref name="reset" scoped="" ref="0x2ae83dca12b0"/>
        <function-ref name="isOn" scoped="" ref="0x2ae83dc9f510"/>
        <function-ref name="set" scoped="" ref="0x2ae83dca2918"/>
        <function-ref name="start" scoped="" ref="0x2ae83dca1738"/>
        <function-ref name="stop" scoped="" ref="0x2ae83dca1bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x2ae83dc9fb88" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x2ae83dc9fb88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ae83cd7fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2ae83dcbf4a8"/>
        <function-ref name="fired" scoped="" ref="0x2ae83dcc00f8"/>
        <function-ref name="get" scoped="" ref="0x2ae83dc9e760"/>
        <function-ref name="reset" scoped="" ref="0x2ae83dcc0580"/>
        <function-ref name="isOn" scoped="" ref="0x2ae83dcbf930"/>
        <function-ref name="set" scoped="" ref="0x2ae83dc9ebe8"/>
        <function-ref name="start" scoped="" ref="0x2ae83dcc0a08"/>
        <function-ref name="stop" scoped="" ref="0x2ae83dcbf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2ae83dc90490" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2ae83dc90490"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ae83cd7fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2ae83dcae580"/>
        <function-ref name="test" scoped="" ref="0x2ae83dc8ec30"/>
        <function-ref name="get" scoped="" ref="0x2ae83dc8f088"/>
        <function-ref name="setScale" scoped="" ref="0x2ae83dcaea08"/>
        <function-ref name="getScale" scoped="" ref="0x2ae83dcad020"/>
        <function-ref name="reset" scoped="" ref="0x2ae83dc8fe70"/>
        <function-ref name="overflow" scoped="" ref="0x2ae83dc8f9e8"/>
        <function-ref name="isOn" scoped="" ref="0x2ae83dcae0f8"/>
        <function-ref name="set" scoped="" ref="0x2ae83dc8f510"/>
        <function-ref name="start" scoped="" ref="0x2ae83dc8e320"/>
        <function-ref name="stop" scoped="" ref="0x2ae83dc8e7a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ae83dd50190" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ae83dd50190"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x2ae83d666388"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x2ae83d666388"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ae83dd504e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2ae83dd508b0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2ae83dd508b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ae83cd7fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2ae83dd41998"/>
        <function-ref name="test" scoped="" ref="0x2ae83dd41088"/>
        <function-ref name="get" scoped="" ref="0x2ae83dd44490"/>
        <function-ref name="setScale" scoped="" ref="0x2ae83dd41e20"/>
        <function-ref name="getScale" scoped="" ref="0x2ae83dd40350"/>
        <function-ref name="reset" scoped="" ref="0x2ae83dd422b0"/>
        <function-ref name="overflow" scoped="" ref="0x2ae83dd44df0"/>
        <function-ref name="isOn" scoped="" ref="0x2ae83dd41510"/>
        <function-ref name="set" scoped="" ref="0x2ae83dd44918"/>
        <function-ref name="start" scoped="" ref="0x2ae83dd42738"/>
        <function-ref name="stop" scoped="" ref="0x2ae83dd42bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2ae83edb1420" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2ae83edb1420"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x2ae83d666020"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x2ae83d666020"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ae83d6ecd70"/>
            <typename><typedef-ref name="TOne" ref="0x2ae83d722720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ae83cd7fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ae83edafab0"/>
        <function-ref name="fired" scoped="" ref="0x2ae83edb0b30"/>
        <function-ref name="startAt" scoped="" ref="0x2ae83edaf4a8"/>
        <function-ref name="isRunning" scoped="" ref="0x2ae83edaf020"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ae83edad020"/>
        <function-ref name="start" scoped="" ref="0x2ae83edb01d0"/>
        <function-ref name="stop" scoped="" ref="0x2ae83edb06a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x2ae83eda85a8" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x2ae83eda85a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ae83cd7fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2ae83eda6db8"/>
        <function-ref name="fired" scoped="" ref="0x2ae83eda7ab0"/>
        <function-ref name="get" scoped="" ref="0x2ae83eda7150"/>
        <function-ref name="reset" scoped="" ref="0x2ae83eda6020"/>
        <function-ref name="isOn" scoped="" ref="0x2ae83eda4270"/>
        <function-ref name="set" scoped="" ref="0x2ae83eda75d8"/>
        <function-ref name="start" scoped="" ref="0x2ae83eda64a8"/>
        <function-ref name="stop" scoped="" ref="0x2ae83eda6930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x2ae83edad540" loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x2ae83edad540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ae83cd7fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2ae83edaa6f8"/>
        <function-ref name="test" scoped="" ref="0x2ae83edabdb8"/>
        <function-ref name="get" scoped="" ref="0x2ae83edac0f8"/>
        <function-ref name="setScale" scoped="" ref="0x2ae83edaab80"/>
        <function-ref name="getScale" scoped="" ref="0x2ae83eda8088"/>
        <function-ref name="reset" scoped="" ref="0x2ae83edab020"/>
        <function-ref name="overflow" scoped="" ref="0x2ae83edaca58"/>
        <function-ref name="isOn" scoped="" ref="0x2ae83edaa270"/>
        <function-ref name="set" scoped="" ref="0x2ae83edac580"/>
        <function-ref name="start" scoped="" ref="0x2ae83edab4a8"/>
        <function-ref name="stop" scoped="" ref="0x2ae83edab930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2ae83dd95d70" loc="24:/opt/tinyos-2.1.2/tos/platforms/mica/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2ae83dd95d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ae83d6ecd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2ae83d6eb178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ae83cd80608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ae83dd9aaf8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ae83dd994a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ae83dd99020"/>
        <function-ref name="overflow" scoped="" ref="0x2ae83dd99930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2ae83dd94ad0" loc="24:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2ae83dd94ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ae83d6ecd70"/>
            <typename><typedef-ref name="TOne" ref="0x2ae83d722720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ae83cd7fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ae83dd90860"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ae83dd8f1f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ae83dd90ce8"/>
        <function-ref name="overflow" scoped="" ref="0x2ae83dd8f680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2ae83dd8ca98" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2ae83dd8ca98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ae83d6ecd70"/>
            <typename><typedef-ref name="TOne" ref="0x2ae83d722720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ae83cd7fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ae83dda1828"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ae83dda0190"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ae83dda1cb0"/>
        <function-ref name="overflow" scoped="" ref="0x2ae83dda0618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2ae83dda0b78" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2ae83dda0b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ae83cd7fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2ae83ddc3c20"/>
        <function-ref name="test" scoped="" ref="0x2ae83ddc3310"/>
        <function-ref name="get" scoped="" ref="0x2ae83dd9e728"/>
        <function-ref name="setScale" scoped="" ref="0x2ae83ddc10f8"/>
        <function-ref name="getScale" scoped="" ref="0x2ae83ddc15d0"/>
        <function-ref name="reset" scoped="" ref="0x2ae83ddc4548"/>
        <function-ref name="overflow" scoped="" ref="0x2ae83ddc40c0"/>
        <function-ref name="isOn" scoped="" ref="0x2ae83ddc3798"/>
        <function-ref name="set" scoped="" ref="0x2ae83dd9ebb0"/>
        <function-ref name="start" scoped="" ref="0x2ae83ddc49d0"/>
        <function-ref name="stop" scoped="" ref="0x2ae83ddc4e58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x2ae83ddc92b0" loc="63:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x2ae83ddc92b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ae83d6ecd70"/>
            <typename><typedef-ref name="TOne" ref="0x2ae83d722720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ae83cd7fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ae83ddc8088"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ae83ddc8998"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ae83ddc8510"/>
        <function-ref name="overflow" scoped="" ref="0x2ae83ddc8e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2ae83ddcc0e0" loc="62:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2ae83ddcc0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ae83d6ecd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2ae83d6eb178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ae83cd80608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ae83ddcce30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ae83ddca798"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ae83ddca310"/>
        <function-ref name="overflow" scoped="" ref="0x2ae83ddcac20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2ae83ed58e00" loc="61:/opt/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2ae83ed58e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ae83d6ecd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2ae83d6eb178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ae83cd80608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ae83ed55628"/>
        <function-ref name="fired" scoped="" ref="0x2ae83ed56580"/>
        <function-ref name="startAt" scoped="" ref="0x2ae83ed55020"/>
        <function-ref name="isRunning" scoped="" ref="0x2ae83ed56a08"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ae83ed55ab0"/>
        <function-ref name="start" scoped="" ref="0x2ae83ed57be8"/>
        <function-ref name="stop" scoped="" ref="0x2ae83ed560f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x2ae83ed51310" loc="73:/opt/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmFrom" scoped="" ref="0x2ae83ed51310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ae83d6ecd70"/>
            <typename><typedef-ref name="TOne" ref="0x2ae83d722720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ae83cd7fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ae83ed4f928"/>
        <function-ref name="fired" scoped="" ref="0x2ae83ed509e8"/>
        <function-ref name="startAt" scoped="" ref="0x2ae83ed4f320"/>
        <function-ref name="isRunning" scoped="" ref="0x2ae83ed50e70"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ae83ed4fdb0"/>
        <function-ref name="start" scoped="" ref="0x2ae83ed50088"/>
        <function-ref name="stop" scoped="" ref="0x2ae83ed50560"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2ae83ed54128" loc="68:/opt/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2ae83ed54128"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ae83d6ecd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2ae83d6eb178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ae83cd80608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ae83ed54e78"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ae83ed537b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ae83ed53330"/>
        <function-ref name="overflow" scoped="" ref="0x2ae83ed53c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ae83de01a58" loc="18:/opt/tinyos-2.1.2/tos/system/NoInitC.nc">
      <component-ref qname="NoInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ae83de01a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ae83de01da8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x2ae83de1d020" loc="87:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFO" scoped="" ref="0x2ae83de1d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83de1d370"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83de1d4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83de1d680"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83de1d808"/>
        <function-ref name="get" scoped="" ref="0x2ae83de1d990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83de1db18"/>
        <function-ref name="set" scoped="" ref="0x2ae83de1dca0"/>
        <function-ref name="clr" scoped="" ref="0x2ae83de1de28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x2ae83de1c198" loc="88:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFOP" scoped="" ref="0x2ae83de1c198"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83de1c4e8"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83de1c670"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83de1c7f8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83de1c980"/>
        <function-ref name="get" scoped="" ref="0x2ae83de1cb08"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83de1cc90"/>
        <function-ref name="set" scoped="" ref="0x2ae83de1ce18"/>
        <function-ref name="clr" scoped="" ref="0x2ae83de1b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x2ae83de1b338" loc="89:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x2ae83de1b338"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83de1b688"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83de1b810"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83de1b998"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83de1bb20"/>
        <function-ref name="get" scoped="" ref="0x2ae83de1bca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83de1be30"/>
        <function-ref name="set" scoped="" ref="0x2ae83de1a020"/>
        <function-ref name="clr" scoped="" ref="0x2ae83de1a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x2ae83de1fde0" loc="86:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x2ae83de1fde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83de1e170"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83de1e2f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83de1e480"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83de1e608"/>
        <function-ref name="get" scoped="" ref="0x2ae83de1e790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83de1e918"/>
        <function-ref name="set" scoped="" ref="0x2ae83de1eaa0"/>
        <function-ref name="clr" scoped="" ref="0x2ae83de1ec28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x2ae83de19648" loc="91:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VREN" scoped="" ref="0x2ae83de19648"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83de19998"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83de19b20"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83de19ca8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83de19e30"/>
        <function-ref name="get" scoped="" ref="0x2ae83de17020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83de171a8"/>
        <function-ref name="set" scoped="" ref="0x2ae83de17330"/>
        <function-ref name="clr" scoped="" ref="0x2ae83de174b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x2ae83dbc9c88" loc="85:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x2ae83dbc9c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83de1f020"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83de1f1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83de1f330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83de1f4b8"/>
        <function-ref name="get" scoped="" ref="0x2ae83de1f640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83de1f7c8"/>
        <function-ref name="set" scoped="" ref="0x2ae83de1f950"/>
        <function-ref name="clr" scoped="" ref="0x2ae83de1fad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x2ae83de1a4b0" loc="90:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFD" scoped="" ref="0x2ae83de1a4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83de1a800"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83de1a988"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83de1ab10"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83de1ac98"/>
        <function-ref name="get" scoped="" ref="0x2ae83de1ae20"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83de19020"/>
        <function-ref name="set" scoped="" ref="0x2ae83de191a8"/>
        <function-ref name="clr" scoped="" ref="0x2ae83de19330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x2ae83de33e80" loc="39:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CaptureSFD" scoped="" ref="0x2ae83de33e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2ae83de361f8"/>
        <function-ref name="disable" scoped="" ref="0x2ae83de36380"/>
        <function-ref name="captured" scoped="" ref="0x2ae83de36508"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2ae83de36690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x2ae83de36a60" loc="40:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptCCA" scoped="" ref="0x2ae83de36a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ae83de36db0"/>
        <function-ref name="disable" scoped="" ref="0x2ae83de35020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2ae83de351a8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2ae83de35330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x2ae83de35710" loc="41:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptFIFOP" scoped="" ref="0x2ae83de35710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ae83de35a60"/>
        <function-ref name="disable" scoped="" ref="0x2ae83de35be8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2ae83de35d70"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2ae83de32020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2ae83de31c40" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2ae83de31c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2ae83de49020"/>
        <function-ref name="disable" scoped="" ref="0x2ae83de491a8"/>
        <function-ref name="captured" scoped="" ref="0x2ae83de49330"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2ae83de494b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Capture" ref="0x2ae83de49888" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Capture" scoped="" ref="0x2ae83de49888"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ae83cd7fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2ae83de469d0"/>
        <function-ref name="test" scoped="" ref="0x2ae83de460c0"/>
        <function-ref name="get" scoped="" ref="0x2ae83de48490"/>
        <function-ref name="captured" scoped="" ref="0x2ae83de48df0"/>
        <function-ref name="reset" scoped="" ref="0x2ae83de472f0"/>
        <function-ref name="isOn" scoped="" ref="0x2ae83de46548"/>
        <function-ref name="set" scoped="" ref="0x2ae83de48918"/>
        <function-ref name="start" scoped="" ref="0x2ae83de47778"/>
        <function-ref name="stop" scoped="" ref="0x2ae83de47c00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x2ae83de41d78" loc="9:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x2ae83de41d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ae83de5a0f0"/>
        <function-ref name="fired" scoped="" ref="0x2ae83de5a278"/>
        <function-ref name="disable" scoped="" ref="0x2ae83de5a400"/>
        <function-ref name="edge" scoped="" ref="0x2ae83de5a588"/>
        <function-ref name="enable" scoped="" ref="0x2ae83de5a710"/>
        <function-ref name="getValue" scoped="" ref="0x2ae83de5a898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x2ae83de412c8" loc="8:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x2ae83de412c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ae83de41618"/>
        <function-ref name="disable" scoped="" ref="0x2ae83de417a0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2ae83de41928"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2ae83de41ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int6" ref="0x2ae83de7ab38" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int6" scoped="" ref="0x2ae83de7ab38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ae83de79020"/>
        <function-ref name="fired" scoped="" ref="0x2ae83de791a8"/>
        <function-ref name="disable" scoped="" ref="0x2ae83de79330"/>
        <function-ref name="edge" scoped="" ref="0x2ae83de794b8"/>
        <function-ref name="enable" scoped="" ref="0x2ae83de79640"/>
        <function-ref name="getValue" scoped="" ref="0x2ae83de797c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x2ae83de55bf0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x2ae83de55bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ae83de54020"/>
        <function-ref name="fired" scoped="" ref="0x2ae83de541a8"/>
        <function-ref name="disable" scoped="" ref="0x2ae83de54330"/>
        <function-ref name="edge" scoped="" ref="0x2ae83de544b8"/>
        <function-ref name="enable" scoped="" ref="0x2ae83de54640"/>
        <function-ref name="getValue" scoped="" ref="0x2ae83de547c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int4" ref="0x2ae83de52b38" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int4" scoped="" ref="0x2ae83de52b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ae83de7b020"/>
        <function-ref name="fired" scoped="" ref="0x2ae83de7b1a8"/>
        <function-ref name="disable" scoped="" ref="0x2ae83de7b330"/>
        <function-ref name="edge" scoped="" ref="0x2ae83de7b4b8"/>
        <function-ref name="enable" scoped="" ref="0x2ae83de7b640"/>
        <function-ref name="getValue" scoped="" ref="0x2ae83de7b7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int7" ref="0x2ae83de79b38" loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int7" scoped="" ref="0x2ae83de79b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ae83de78020"/>
        <function-ref name="fired" scoped="" ref="0x2ae83de781a8"/>
        <function-ref name="disable" scoped="" ref="0x2ae83de78330"/>
        <function-ref name="edge" scoped="" ref="0x2ae83de784b8"/>
        <function-ref name="enable" scoped="" ref="0x2ae83de78640"/>
        <function-ref name="getValue" scoped="" ref="0x2ae83de787c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x2ae83de54b38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x2ae83de54b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ae83de53020"/>
        <function-ref name="fired" scoped="" ref="0x2ae83de531a8"/>
        <function-ref name="disable" scoped="" ref="0x2ae83de53330"/>
        <function-ref name="edge" scoped="" ref="0x2ae83de534b8"/>
        <function-ref name="enable" scoped="" ref="0x2ae83de53640"/>
        <function-ref name="getValue" scoped="" ref="0x2ae83de537c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int5" ref="0x2ae83de7bb38" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int5" scoped="" ref="0x2ae83de7bb38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ae83de7a020"/>
        <function-ref name="fired" scoped="" ref="0x2ae83de7a1a8"/>
        <function-ref name="disable" scoped="" ref="0x2ae83de7a330"/>
        <function-ref name="edge" scoped="" ref="0x2ae83de7a4b8"/>
        <function-ref name="enable" scoped="" ref="0x2ae83de7a640"/>
        <function-ref name="getValue" scoped="" ref="0x2ae83de7a7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x2ae83de58d50" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x2ae83de58d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ae83de550d8"/>
        <function-ref name="fired" scoped="" ref="0x2ae83de55260"/>
        <function-ref name="disable" scoped="" ref="0x2ae83de553e8"/>
        <function-ref name="edge" scoped="" ref="0x2ae83de55570"/>
        <function-ref name="enable" scoped="" ref="0x2ae83de556f8"/>
        <function-ref name="getValue" scoped="" ref="0x2ae83de55880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x2ae83de53b38" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x2ae83de53b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ae83de52020"/>
        <function-ref name="fired" scoped="" ref="0x2ae83de521a8"/>
        <function-ref name="disable" scoped="" ref="0x2ae83de52330"/>
        <function-ref name="edge" scoped="" ref="0x2ae83de524b8"/>
        <function-ref name="enable" scoped="" ref="0x2ae83de52640"/>
        <function-ref name="getValue" scoped="" ref="0x2ae83de527c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig6" ref="0x2ae83de70758" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig6" scoped="" ref="0x2ae83de70758"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ae83de70aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig1" ref="0x2ae83de74020" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig1" scoped="" ref="0x2ae83de74020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ae83de74370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig4" ref="0x2ae83de73758" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig4" scoped="" ref="0x2ae83de73758"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ae83de73aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig7" ref="0x2ae83de6f020" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig7" scoped="" ref="0x2ae83de6f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ae83de6f370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig2" ref="0x2ae83de74758" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig2" scoped="" ref="0x2ae83de74758"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ae83de74aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig5" ref="0x2ae83de70020" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig5" scoped="" ref="0x2ae83de70020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ae83de70370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig0" ref="0x2ae83de72850" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig0" scoped="" ref="0x2ae83de72850"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ae83de72ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig3" ref="0x2ae83de73020" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig3" scoped="" ref="0x2ae83de73020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ae83de73370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2ae83de7e258" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2ae83de7e258"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ae83de7e5a8"/>
        <function-ref name="fired" scoped="" ref="0x2ae83de7e730"/>
        <function-ref name="disable" scoped="" ref="0x2ae83de7e8b8"/>
        <function-ref name="edge" scoped="" ref="0x2ae83de7ea40"/>
        <function-ref name="enable" scoped="" ref="0x2ae83de7ebc8"/>
        <function-ref name="getValue" scoped="" ref="0x2ae83de7ed50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2ae83de94060" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2ae83de94060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ae83de943b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2ae83de91cf8" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2ae83de91cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ae83deba0a0"/>
        <function-ref name="fired" scoped="" ref="0x2ae83deba228"/>
        <function-ref name="disable" scoped="" ref="0x2ae83deba3b0"/>
        <function-ref name="edge" scoped="" ref="0x2ae83deba538"/>
        <function-ref name="enable" scoped="" ref="0x2ae83deba6c0"/>
        <function-ref name="getValue" scoped="" ref="0x2ae83deba848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2ae83debab10" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2ae83debab10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ae83debae60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2ae83deb77e8" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2ae83deb77e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ae83deb7b38"/>
        <function-ref name="fired" scoped="" ref="0x2ae83deb7cc0"/>
        <function-ref name="disable" scoped="" ref="0x2ae83deb7e48"/>
        <function-ref name="edge" scoped="" ref="0x2ae83deb6020"/>
        <function-ref name="enable" scoped="" ref="0x2ae83deb61a8"/>
        <function-ref name="getValue" scoped="" ref="0x2ae83deb6330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2ae83deb65f8" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2ae83deb65f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ae83deb6948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2ae83deb33e0" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2ae83deb33e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ae83deb3730"/>
        <function-ref name="fired" scoped="" ref="0x2ae83deb38b8"/>
        <function-ref name="disable" scoped="" ref="0x2ae83deb3a40"/>
        <function-ref name="edge" scoped="" ref="0x2ae83deb3bc8"/>
        <function-ref name="enable" scoped="" ref="0x2ae83deb3d50"/>
        <function-ref name="getValue" scoped="" ref="0x2ae83deb1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2ae83deb12e8" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2ae83deb12e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ae83deb1638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2ae83deae180" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2ae83deae180"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ae83deae4d0"/>
        <function-ref name="fired" scoped="" ref="0x2ae83deae658"/>
        <function-ref name="disable" scoped="" ref="0x2ae83deae7e0"/>
        <function-ref name="edge" scoped="" ref="0x2ae83deae968"/>
        <function-ref name="enable" scoped="" ref="0x2ae83deaeaf0"/>
        <function-ref name="getValue" scoped="" ref="0x2ae83deaec78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2ae83dead020" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2ae83dead020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ae83dead370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2ae83deaa020" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2ae83deaa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ae83deaa370"/>
        <function-ref name="fired" scoped="" ref="0x2ae83deaa4f8"/>
        <function-ref name="disable" scoped="" ref="0x2ae83deaa680"/>
        <function-ref name="edge" scoped="" ref="0x2ae83deaa808"/>
        <function-ref name="enable" scoped="" ref="0x2ae83deaa990"/>
        <function-ref name="getValue" scoped="" ref="0x2ae83deaab18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2ae83deaade0" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2ae83deaade0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ae83dea9170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2ae83dea6cd8" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2ae83dea6cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ae83ded00a0"/>
        <function-ref name="fired" scoped="" ref="0x2ae83ded0228"/>
        <function-ref name="disable" scoped="" ref="0x2ae83ded03b0"/>
        <function-ref name="edge" scoped="" ref="0x2ae83ded0538"/>
        <function-ref name="enable" scoped="" ref="0x2ae83ded06c0"/>
        <function-ref name="getValue" scoped="" ref="0x2ae83ded0848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2ae83ded0b10" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2ae83ded0b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ae83ded0e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2ae83decd9d8" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2ae83decd9d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ae83decdd28"/>
        <function-ref name="fired" scoped="" ref="0x2ae83decc020"/>
        <function-ref name="disable" scoped="" ref="0x2ae83decc1a8"/>
        <function-ref name="edge" scoped="" ref="0x2ae83decc330"/>
        <function-ref name="enable" scoped="" ref="0x2ae83decc4b8"/>
        <function-ref name="getValue" scoped="" ref="0x2ae83decc640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2ae83decc908" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2ae83decc908"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ae83deccc58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC_CCA" ref="0x2ae83dec08e0" loc="51:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC_CCA" scoped="" ref="0x2ae83dec08e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83dec0c30"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83dec0db8"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83debf020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83debf1a8"/>
        <function-ref name="get" scoped="" ref="0x2ae83debf330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83debf4b8"/>
        <function-ref name="set" scoped="" ref="0x2ae83debf640"/>
        <function-ref name="clr" scoped="" ref="0x2ae83debf7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x2ae83dec3cf0" loc="47:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x2ae83dec3cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ae83dec00a0"/>
        <function-ref name="disable" scoped="" ref="0x2ae83dec0228"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2ae83dec03b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2ae83dec0538"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCATask" ref="0x2ae83debc278" loc="69:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCATask" scoped="" ref="0x2ae83debc278"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ae83debc5c8"/>
        <function-ref name="runTask" scoped="" ref="0x2ae83debc750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2ae83e11ac90" loc="69:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x2ae83e11ac90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e1193e8"/>
        <function-ref name="write" scoped="" ref="0x2ae83e119570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2ae83e123438" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x2ae83e123438"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ae83e123788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2ae83e11ddd8" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x2ae83e11ddd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e11c170"/>
        <function-ref name="write" scoped="" ref="0x2ae83e11c2f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2ae83e1177c0" loc="72:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x2ae83e1177c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e117b10"/>
        <function-ref name="write" scoped="" ref="0x2ae83e117c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2ae83e116020" loc="73:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x2ae83e116020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e116370"/>
        <function-ref name="write" scoped="" ref="0x2ae83e1164f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2ae83e1407c0" loc="94:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x2ae83e1407c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e140b10"/>
        <function-ref name="write" scoped="" ref="0x2ae83e140c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2ae83e10e7c0" loc="90:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x2ae83e10e7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e10eb10"/>
        <function-ref name="write" scoped="" ref="0x2ae83e10ec98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2ae83e1226b8" loc="50:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x2ae83e1226b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ae83e122a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2ae83e10f7c0" loc="88:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2ae83e10f7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e10fb10"/>
        <function-ref name="write" scoped="" ref="0x2ae83e10fc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2ae83e11cd60" loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x2ae83e11cd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e11b0d8"/>
        <function-ref name="write" scoped="" ref="0x2ae83e11b260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2ae83e11bcc8" loc="67:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x2ae83e11bcc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e11a0a0"/>
        <function-ref name="write" scoped="" ref="0x2ae83e11a228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2ae83e113020" loc="79:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x2ae83e113020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e113370"/>
        <function-ref name="write" scoped="" ref="0x2ae83e1134f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2ae83e1167c0" loc="74:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x2ae83e1167c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e116b10"/>
        <function-ref name="write" scoped="" ref="0x2ae83e116c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2ae83e126e78" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x2ae83e126e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2ae83e1251f8"/>
        <function-ref name="abortRelease" scoped="" ref="0x2ae83e125380"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2ae83e125508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2ae83e120020" loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x2ae83e120020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ae83e120370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2ae83e120638" loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x2ae83e120638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ae83e120a88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2ae83e120d50" loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x2ae83e120d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ae83e11f0d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2ae83e10e020" loc="89:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2ae83e10e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e10e370"/>
        <function-ref name="write" scoped="" ref="0x2ae83e10e4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2ae83e121368" loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x2ae83e121368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ae83e1216b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2ae83e11b528" loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x2ae83e11b528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e11b878"/>
        <function-ref name="write" scoped="" ref="0x2ae83e11ba00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2ae83e11c5c0" loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x2ae83e11c5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e11c910"/>
        <function-ref name="write" scoped="" ref="0x2ae83e11ca98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2ae83e125de8" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x2ae83e125de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ae83e123170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2ae83e140020" loc="93:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x2ae83e140020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e140370"/>
        <function-ref name="write" scoped="" ref="0x2ae83e1404f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2ae83e10d020" loc="91:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x2ae83e10d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e10d370"/>
        <function-ref name="write" scoped="" ref="0x2ae83e10d4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2ae83e1137c0" loc="80:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x2ae83e1137c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e113b10"/>
        <function-ref name="write" scoped="" ref="0x2ae83e113c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2ae83e10f020" loc="87:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x2ae83e10f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e10f370"/>
        <function-ref name="write" scoped="" ref="0x2ae83e10f4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2ae83e1157c0" loc="76:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x2ae83e1157c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e115b10"/>
        <function-ref name="write" scoped="" ref="0x2ae83e115c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2ae83e13f020" loc="97:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x2ae83e13f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2ae83e13f770"/>
        <function-ref name="writeDone" scoped="" ref="0x2ae83e13f8f8"/>
        <function-ref name="write" scoped="" ref="0x2ae83e13fa80"/>
        <function-ref name="beginRead" scoped="" ref="0x2ae83e13fc08"/>
        <function-ref name="readDone" scoped="" ref="0x2ae83e13fd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2ae83e1257d0" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x2ae83e1257d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ae83e125b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2ae83e11d638" loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x2ae83e11d638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e11d988"/>
        <function-ref name="write" scoped="" ref="0x2ae83e11db10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2ae83e11a4f0" loc="68:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x2ae83e11a4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e11a840"/>
        <function-ref name="write" scoped="" ref="0x2ae83e11a9c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2ae83e115020" loc="75:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x2ae83e115020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e115370"/>
        <function-ref name="write" scoped="" ref="0x2ae83e1154f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2ae83e119838" loc="70:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x2ae83e119838"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e119b88"/>
        <function-ref name="write" scoped="" ref="0x2ae83e119d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2ae83e123a50" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x2ae83e123a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ae83e123da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2ae83e117020" loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x2ae83e117020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e117370"/>
        <function-ref name="write" scoped="" ref="0x2ae83e1174f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ae83e126280" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2ae83e126280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ae83e1265d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ae83e126758"/>
        <function-ref name="request" scoped="" ref="0x2ae83e1268e0"/>
        <function-ref name="granted" scoped="" ref="0x2ae83e126a68"/>
        <function-ref name="isOwner" scoped="" ref="0x2ae83e126bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2ae83e11f3a0" loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x2ae83e11f3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ae83e11f6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2ae83e11d020" loc="59:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x2ae83e11d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ae83e11d370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2ae83e1107c0" loc="86:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x2ae83e1107c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e110b10"/>
        <function-ref name="write" scoped="" ref="0x2ae83e110c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2ae83e110020" loc="85:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x2ae83e110020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e110370"/>
        <function-ref name="write" scoped="" ref="0x2ae83e1104f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2ae83e121980" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x2ae83e121980"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ae83e121cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2ae83e1127c0" loc="82:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2ae83e1127c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e112b10"/>
        <function-ref name="write" scoped="" ref="0x2ae83e112c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2ae83e10d7c0" loc="92:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x2ae83e10d7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e10db10"/>
        <function-ref name="write" scoped="" ref="0x2ae83e10dc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2ae83e112020" loc="81:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x2ae83e112020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e112370"/>
        <function-ref name="write" scoped="" ref="0x2ae83e1124f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2ae83e1220a0" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x2ae83e1220a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ae83e1223f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2ae83e1147c0" loc="78:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x2ae83e1147c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e114b10"/>
        <function-ref name="write" scoped="" ref="0x2ae83e114c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2ae83e122cd0" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x2ae83e122cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ae83e1210a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2ae83e114020" loc="77:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x2ae83e114020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e114370"/>
        <function-ref name="write" scoped="" ref="0x2ae83e1144f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2ae83e11f9b8" loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x2ae83e11f9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ae83e11fd08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2ae83e13d0a0" loc="98:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x2ae83e13d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2ae83e13d3f0"/>
        <function-ref name="writeDone" scoped="" ref="0x2ae83e13d578"/>
        <function-ref name="write" scoped="" ref="0x2ae83e13d700"/>
        <function-ref name="beginRead" scoped="" ref="0x2ae83e13d888"/>
        <function-ref name="readDone" scoped="" ref="0x2ae83e13da10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x2ae83df013c8" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Fifo" scoped="" ref="0x2ae83df013c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2ae83df01718"/>
        <function-ref name="writeDone" scoped="" ref="0x2ae83df018a0"/>
        <function-ref name="write" scoped="" ref="0x2ae83df01a28"/>
        <function-ref name="beginRead" scoped="" ref="0x2ae83df01bb0"/>
        <function-ref name="readDone" scoped="" ref="0x2ae83df01d38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2ae83df034c8" loc="40:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x2ae83df034c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2ae83df03818"/>
        <function-ref name="abortRelease" scoped="" ref="0x2ae83df039a0"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2ae83df03b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x2ae83df005e0" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ram" scoped="" ref="0x2ae83df005e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x2ae83cd7fb98"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83df00930"/>
        <function-ref name="write" scoped="" ref="0x2ae83df00ab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x2ae83deff348" loc="43:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reg" scoped="" ref="0x2ae83deff348"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83deff698"/>
        <function-ref name="write" scoped="" ref="0x2ae83deff820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ae83df06808" loc="39:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2ae83df06808"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ae83df06b58"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ae83df06ce0"/>
        <function-ref name="request" scoped="" ref="0x2ae83df06e68"/>
        <function-ref name="granted" scoped="" ref="0x2ae83df03020"/>
        <function-ref name="isOwner" scoped="" ref="0x2ae83df031a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x2ae83defe1c8" loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Strobe" scoped="" ref="0x2ae83defe1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ae83defe518"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x2ae83df14860" loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x2ae83df14860"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ae83df14bb0"/>
        <function-ref name="sendDone" scoped="" ref="0x2ae83df14d38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x2ae83df244d0" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Fifo" scoped="" ref="0x2ae83df244d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2ae83df24820"/>
        <function-ref name="writeDone" scoped="" ref="0x2ae83df249a8"/>
        <function-ref name="write" scoped="" ref="0x2ae83df24b30"/>
        <function-ref name="beginRead" scoped="" ref="0x2ae83df24cb8"/>
        <function-ref name="readDone" scoped="" ref="0x2ae83df24e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2ae83df274e8" loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x2ae83df274e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2ae83df27838"/>
        <function-ref name="abortRelease" scoped="" ref="0x2ae83df279c0"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2ae83df27b48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x2ae83df1c470" loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x2ae83df1c470"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2ae83df1c7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x2ae83df1e0e0" loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WorkingState" scoped="" ref="0x2ae83df1e0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2ae83df1e430"/>
        <function-ref name="toIdle" scoped="" ref="0x2ae83df1e5b8"/>
        <function-ref name="isState" scoped="" ref="0x2ae83df1e740"/>
        <function-ref name="isIdle" scoped="" ref="0x2ae83df1e8c8"/>
        <function-ref name="requestState" scoped="" ref="0x2ae83df1ea50"/>
        <function-ref name="forceState" scoped="" ref="0x2ae83df1ebd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2ae83df218e8" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x2ae83df218e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ae83df21c38"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ae83df21dc0"/>
        <function-ref name="request" scoped="" ref="0x2ae83df1f020"/>
        <function-ref name="granted" scoped="" ref="0x2ae83df1f1a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2ae83df1f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x2ae83df23680" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ram" scoped="" ref="0x2ae83df23680"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x2ae83cd7fb98"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83df239d0"/>
        <function-ref name="write" scoped="" ref="0x2ae83df23b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x2ae83df223c8" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reg" scoped="" ref="0x2ae83df223c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83df22718"/>
        <function-ref name="write" scoped="" ref="0x2ae83df228a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2ae83df1ee50" loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2ae83df1ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ae83df1d1e8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ae83df1d370"/>
        <function-ref name="led1On" scoped="" ref="0x2ae83df1d4f8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ae83df1d680"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ae83df1d808"/>
        <function-ref name="get" scoped="" ref="0x2ae83df1d990"/>
        <function-ref name="led1Off" scoped="" ref="0x2ae83df1db18"/>
        <function-ref name="led2Off" scoped="" ref="0x2ae83df151a8"/>
        <function-ref name="set" scoped="" ref="0x2ae83df1dca0"/>
        <function-ref name="led0On" scoped="" ref="0x2ae83df1de28"/>
        <function-ref name="led2On" scoped="" ref="0x2ae83df15020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ae83df26300" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2ae83df26300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ae83df26650"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ae83df267d8"/>
        <function-ref name="request" scoped="" ref="0x2ae83df26960"/>
        <function-ref name="granted" scoped="" ref="0x2ae83df26ae8"/>
        <function-ref name="isOwner" scoped="" ref="0x2ae83df26c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x2ae83df3cb80" loc="88:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grant" scoped="" ref="0x2ae83df3cb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ae83df3b020"/>
        <function-ref name="runTask" scoped="" ref="0x2ae83df3b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x2ae83df211c8" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Strobe" scoped="" ref="0x2ae83df211c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ae83df21518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2ae83df6e978" loc="67:/opt/tinyos-2.1.2/tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x2ae83df6e978"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2ae83df6ecc8"/>
        <function-ref name="toIdle" scoped="" ref="0x2ae83df6ee50"/>
        <function-ref name="isState" scoped="" ref="0x2ae83df6d020"/>
        <function-ref name="isIdle" scoped="" ref="0x2ae83df6d1a8"/>
        <function-ref name="requestState" scoped="" ref="0x2ae83df6d330"/>
        <function-ref name="forceState" scoped="" ref="0x2ae83df6d4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2ae83df97790" loc="66:/opt/tinyos-2.1.2/tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x2ae83df97790"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2ae83df97ae0"/>
        <function-ref name="toIdle" scoped="" ref="0x2ae83df97c68"/>
        <function-ref name="isState" scoped="" ref="0x2ae83df97df0"/>
        <function-ref name="isIdle" scoped="" ref="0x2ae83df96020"/>
        <function-ref name="requestState" scoped="" ref="0x2ae83df961a8"/>
        <function-ref name="forceState" scoped="" ref="0x2ae83df96330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ae83df93438" loc="66:/opt/tinyos-2.1.2/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ae83df93438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ae83df93788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2ae83df91020" loc="67:/opt/tinyos-2.1.2/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x2ae83df91020"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2ae83df91370"/>
        <function-ref name="toIdle" scoped="" ref="0x2ae83df914f8"/>
        <function-ref name="isState" scoped="" ref="0x2ae83df91680"/>
        <function-ref name="isIdle" scoped="" ref="0x2ae83df91808"/>
        <function-ref name="requestState" scoped="" ref="0x2ae83df91990"/>
        <function-ref name="forceState" scoped="" ref="0x2ae83df91b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2ae83e0dd2a8" loc="43:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x2ae83e0dd2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ae83e0dd5f8"/>
        <function-ref name="sendDone" scoped="" ref="0x2ae83e0dd780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2ae83e0dec18" loc="42:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x2ae83e0dec18"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2ae83e0dd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ae83e0df960" loc="39:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ae83e0df960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ae83e0dfcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ae83e0de020" loc="40:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2ae83e0de020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ae83e0de370"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ae83e0de4f8"/>
        <function-ref name="request" scoped="" ref="0x2ae83e0de680"/>
        <function-ref name="granted" scoped="" ref="0x2ae83e0de808"/>
        <function-ref name="isOwner" scoped="" ref="0x2ae83e0de990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2ae83df9ccc0" loc="84:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x2ae83df9ccc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ae83dfa10a0"/>
        <function-ref name="sendDone" scoped="" ref="0x2ae83dfa1228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2ae83dfa5a20" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x2ae83dfa5a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2ae83dfa5d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ae83dfa5400" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ae83dfa5400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ae83dfa5750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x2ae83df9c1f0" loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x2ae83df9c1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2ae83df9c540"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2ae83df9c6c8"/>
        <function-ref name="splitRead" scoped="" ref="0x2ae83df9c850"/>
        <function-ref name="write" scoped="" ref="0x2ae83df9c9d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ae83dfa19f8" loc="85:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2ae83dfa19f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ae83dfa1d48"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ae83dfa0020"/>
        <function-ref name="request" scoped="" ref="0x2ae83dfa01a8"/>
        <function-ref name="granted" scoped="" ref="0x2ae83dfa0330"/>
        <function-ref name="isOwner" scoped="" ref="0x2ae83dfa04b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x2ae83dfe5b58" loc="296:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x2ae83dfe5b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ae83dfe4020"/>
        <function-ref name="runTask" scoped="" ref="0x2ae83dfe41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2ae83dfc5020" loc="94:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x2ae83dfc5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ae83dfc5370"/>
        <function-ref name="sendDone" scoped="" ref="0x2ae83dfc54f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0x2ae83dfd8208" loc="99:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0x2ae83dfd8208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ae83dfd8558"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ae83dfd86e0"/>
        <function-ref name="request" scoped="" ref="0x2ae83dfd8868"/>
        <function-ref name="granted" scoped="" ref="0x2ae83dfd89f0"/>
        <function-ref name="isOwner" scoped="" ref="0x2ae83dfd8b78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2ae83dfc7d80" loc="92:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x2ae83dfc7d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2ae83dfc6170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ae83dfc77a0" loc="91:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ae83dfc77a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ae83dfc7af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x2ae83dfc3020" loc="98:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x2ae83dfc3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x2ae83dfc3370"/>
        <function-ref name="sleep" scoped="" ref="0x2ae83dfd97c8"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x2ae83dfc3680"/>
        <function-ref name="dataReady" scoped="" ref="0x2ae83dfd9950"/>
        <function-ref name="initMaster" scoped="" ref="0x2ae83dfc3990"/>
        <function-ref name="setMasterBit" scoped="" ref="0x2ae83dfc3b18"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x2ae83dfc3ca0"/>
        <function-ref name="read" scoped="" ref="0x2ae83dfc3e28"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x2ae83dfc2020"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x2ae83dfc21a8"/>
        <function-ref name="setClock" scoped="" ref="0x2ae83dfc2330"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2ae83dfc24b8"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x2ae83dfc2640"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x2ae83dfc28c8"/>
        <function-ref name="setDataOrder" scoped="" ref="0x2ae83dfc2a50"/>
        <function-ref name="write" scoped="" ref="0x2ae83dfc2bd8"/>
        <function-ref name="enableSpi" scoped="" ref="0x2ae83dfc2d60"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x2ae83dfd9020"/>
        <function-ref name="getClockPhase" scoped="" ref="0x2ae83dfd91a8"/>
        <function-ref name="getClock" scoped="" ref="0x2ae83dfd9330"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x2ae83dfd94b8"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x2ae83dfc34f8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x2ae83dfc3808"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x2ae83dfd9640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x2ae83dfc6428" loc="93:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x2ae83dfc6428"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2ae83dfc6778"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2ae83dfc6900"/>
        <function-ref name="splitRead" scoped="" ref="0x2ae83dfc6a88"/>
        <function-ref name="write" scoped="" ref="0x2ae83dfc6c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ae83dfc5c88" loc="95:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2ae83dfc5c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ae83dfc4020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ae83dfc41a8"/>
        <function-ref name="request" scoped="" ref="0x2ae83dfc4330"/>
        <function-ref name="granted" scoped="" ref="0x2ae83dfc44b8"/>
        <function-ref name="isOwner" scoped="" ref="0x2ae83dfc4640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2ae83dfd35d0" loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2ae83dfd35d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2ae83dfd3920"/>
        <function-ref name="userId" scoped="" ref="0x2ae83dfd3aa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x2ae83dfd3d78" loc="101:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2ae83dfd3d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2ae83dfd60f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x2ae83e019020" loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x2ae83e019020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x2ae83e019370"/>
        <function-ref name="sleep" scoped="" ref="0x2ae83e0177c8"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x2ae83e019680"/>
        <function-ref name="dataReady" scoped="" ref="0x2ae83e017950"/>
        <function-ref name="initMaster" scoped="" ref="0x2ae83e019990"/>
        <function-ref name="setMasterBit" scoped="" ref="0x2ae83e019b18"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x2ae83e019ca0"/>
        <function-ref name="read" scoped="" ref="0x2ae83e019e28"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x2ae83e018020"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x2ae83e0181a8"/>
        <function-ref name="setClock" scoped="" ref="0x2ae83e018330"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2ae83e0184b8"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x2ae83e018640"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x2ae83e0188c8"/>
        <function-ref name="setDataOrder" scoped="" ref="0x2ae83e018a50"/>
        <function-ref name="write" scoped="" ref="0x2ae83e018bd8"/>
        <function-ref name="enableSpi" scoped="" ref="0x2ae83e018d60"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x2ae83e017020"/>
        <function-ref name="getClockPhase" scoped="" ref="0x2ae83e0171a8"/>
        <function-ref name="getClock" scoped="" ref="0x2ae83e017330"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x2ae83e0174b8"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x2ae83e0194f8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x2ae83e019808"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x2ae83e017640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x2ae83e03b190" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x2ae83e03b190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83e03b4e0"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83e03b668"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83e03b7f0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83e03b978"/>
        <function-ref name="get" scoped="" ref="0x2ae83e03bb00"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83e03bc88"/>
        <function-ref name="set" scoped="" ref="0x2ae83e03be10"/>
        <function-ref name="clr" scoped="" ref="0x2ae83e03a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x2ae83e040de0" loc="79:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x2ae83e040de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83e03f170"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83e03f2f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83e03f480"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83e03f608"/>
        <function-ref name="get" scoped="" ref="0x2ae83e03f790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83e03f918"/>
        <function-ref name="set" scoped="" ref="0x2ae83e03faa0"/>
        <function-ref name="clr" scoped="" ref="0x2ae83e03fc28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x2ae83e03dc70" loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x2ae83e03dc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83e040020"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83e0401a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83e040330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83e0404b8"/>
        <function-ref name="get" scoped="" ref="0x2ae83e040640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83e0407c8"/>
        <function-ref name="set" scoped="" ref="0x2ae83e040950"/>
        <function-ref name="clr" scoped="" ref="0x2ae83e040ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x2ae83e03d438" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x2ae83e03d438"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ae83e03d788"/>
        <function-ref name="stop" scoped="" ref="0x2ae83e03d910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x2ae83e03a350" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x2ae83e03a350"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2ae83e03a6a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x2ae83e016dc0" loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x2ae83e016dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x2ae83e013170"/>
        <function-ref name="sleep" scoped="" ref="0x2ae83e041640"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x2ae83e013480"/>
        <function-ref name="dataReady" scoped="" ref="0x2ae83e0417c8"/>
        <function-ref name="initMaster" scoped="" ref="0x2ae83e013790"/>
        <function-ref name="setMasterBit" scoped="" ref="0x2ae83e013918"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x2ae83e013aa0"/>
        <function-ref name="read" scoped="" ref="0x2ae83e013c28"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x2ae83e013db0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x2ae83e012020"/>
        <function-ref name="setClock" scoped="" ref="0x2ae83e0121a8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2ae83e012330"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x2ae83e0124b8"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x2ae83e012740"/>
        <function-ref name="setDataOrder" scoped="" ref="0x2ae83e0128c8"/>
        <function-ref name="write" scoped="" ref="0x2ae83e012a50"/>
        <function-ref name="enableSpi" scoped="" ref="0x2ae83e012bd8"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x2ae83e012d60"/>
        <function-ref name="getClockPhase" scoped="" ref="0x2ae83e041020"/>
        <function-ref name="getClock" scoped="" ref="0x2ae83e0411a8"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x2ae83e041330"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x2ae83e0132f8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x2ae83e013608"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x2ae83e0414b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x2ae83e03c020" loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x2ae83e03c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83e03c370"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83e03c4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83e03c680"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83e03c808"/>
        <function-ref name="get" scoped="" ref="0x2ae83e03c990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83e03cb18"/>
        <function-ref name="set" scoped="" ref="0x2ae83e03cca0"/>
        <function-ref name="clr" scoped="" ref="0x2ae83e03ce28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2ae83e0c2020" loc="86:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2ae83e0c2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2ae83e0c2390"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2ae83e0c2518"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2ae83e0c1020" loc="89:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2ae83e0c1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2ae83e0c1390"/>
        <function-ref name="configure" scoped="" ref="0x2ae83e0c1518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ae83e0c3200" loc="85:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2ae83e0c3200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ae83e0c3570"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ae83e0c36f8"/>
        <function-ref name="request" scoped="" ref="0x2ae83e0c3880"/>
        <function-ref name="granted" scoped="" ref="0x2ae83e0c3a08"/>
        <function-ref name="isOwner" scoped="" ref="0x2ae83e0c3b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2ae83e0c2760" loc="87:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2ae83e0c2760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2ae83e0c2ab0"/>
        <function-ref name="userId" scoped="" ref="0x2ae83e0c2c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ae83ee7f620" loc="44:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ae83ee7f620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ae83ee7f970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2ae83ee7fbf8" loc="45:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x2ae83ee7fbf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2ae83ee7e020"/>
        <function-ref name="isEmpty" scoped="" ref="0x2ae83ee7e1a8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2ae83ee7e330"/>
        <function-ref name="dequeue" scoped="" ref="0x2ae83ee7e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2ae83ee7b820" loc="52:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2ae83ee7b820"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2ae83ee7bb90"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2ae83ee7bd18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2ae83ee7a8c0" loc="56:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2ae83ee7a8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2ae83ee7ac30"/>
        <function-ref name="configure" scoped="" ref="0x2ae83ee7adb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2ae83ee790a0" loc="57:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2ae83ee790a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2ae83ee793f0"/>
        <function-ref name="isEmpty" scoped="" ref="0x2ae83ee79578"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2ae83ee79700"/>
        <function-ref name="dequeue" scoped="" ref="0x2ae83ee79888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ae83ee7ca28" loc="51:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2ae83ee7ca28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ae83ee7cd98"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ae83ee7b020"/>
        <function-ref name="request" scoped="" ref="0x2ae83ee7b1a8"/>
        <function-ref name="granted" scoped="" ref="0x2ae83ee7b330"/>
        <function-ref name="isOwner" scoped="" ref="0x2ae83ee7b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2ae83ee7a020" loc="53:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2ae83ee7a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2ae83ee7a370"/>
        <function-ref name="userId" scoped="" ref="0x2ae83ee7a4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2ae83ee79b50" loc="69:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x2ae83ee79b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ae83ee78020"/>
        <function-ref name="runTask" scoped="" ref="0x2ae83ee781a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x2ae83e0eb4a8" loc="45:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x2ae83e0eb4a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83e0eb7f8"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83e0eb980"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83e0ebb08"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83e0ebc90"/>
        <function-ref name="get" scoped="" ref="0x2ae83e0ebe18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83e0ea020"/>
        <function-ref name="set" scoped="" ref="0x2ae83e0ea1a8"/>
        <function-ref name="clr" scoped="" ref="0x2ae83e0ea330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ae83e0ef870" loc="40:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2ae83e0ef870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ae83e0efbc0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ae83e0efd48"/>
        <function-ref name="request" scoped="" ref="0x2ae83e0ec020"/>
        <function-ref name="granted" scoped="" ref="0x2ae83e0ec1a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2ae83e0ec330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResource" ref="0x2ae83e0ec700" loc="44:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubResource" scoped="" ref="0x2ae83e0ec700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ae83e0eca50"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ae83e0ecbd8"/>
        <function-ref name="request" scoped="" ref="0x2ae83e0ecd60"/>
        <function-ref name="granted" scoped="" ref="0x2ae83e0eb020"/>
        <function-ref name="isOwner" scoped="" ref="0x2ae83e0eb1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2ae83e1277c0" loc="69:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x2ae83e1277c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e127d10"/>
        <function-ref name="write" scoped="" ref="0x2ae83e15b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2ae83e132cd0" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x2ae83e132cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ae83e1310a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2ae83e12b7c0" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x2ae83e12b7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e12bb10"/>
        <function-ref name="write" scoped="" ref="0x2ae83e12bc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2ae83e15a2e8" loc="72:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x2ae83e15a2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e15a638"/>
        <function-ref name="write" scoped="" ref="0x2ae83e15a7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2ae83e15aa88" loc="73:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x2ae83e15aa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e15add8"/>
        <function-ref name="write" scoped="" ref="0x2ae83e159020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2ae83e14e2e8" loc="94:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x2ae83e14e2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e14e638"/>
        <function-ref name="write" scoped="" ref="0x2ae83e14e7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2ae83e1512e8" loc="90:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x2ae83e1512e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e151638"/>
        <function-ref name="write" scoped="" ref="0x2ae83e1517c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2ae83e130020" loc="50:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x2ae83e130020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ae83e130370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2ae83e1522e8" loc="88:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2ae83e1522e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e152638"/>
        <function-ref name="write" scoped="" ref="0x2ae83e1527c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2ae83e12a7c0" loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x2ae83e12a7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e12ab10"/>
        <function-ref name="write" scoped="" ref="0x2ae83e12ac98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2ae83e1297c0" loc="67:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x2ae83e1297c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e129b10"/>
        <function-ref name="write" scoped="" ref="0x2ae83e129c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2ae83e156a88" loc="79:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x2ae83e156a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e156dd8"/>
        <function-ref name="write" scoped="" ref="0x2ae83e155020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2ae83e1592e8" loc="74:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x2ae83e1592e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e159638"/>
        <function-ref name="write" scoped="" ref="0x2ae83e1597c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2ae83e133740" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x2ae83e133740"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2ae83e133a90"/>
        <function-ref name="abortRelease" scoped="" ref="0x2ae83e133c18"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2ae83e133da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2ae83e12e900" loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x2ae83e12e900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ae83e12ec50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2ae83e12d020" loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x2ae83e12d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ae83e12d470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2ae83e12d738" loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x2ae83e12d738"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ae83e12da88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2ae83e152a88" loc="89:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2ae83e152a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e152dd8"/>
        <function-ref name="write" scoped="" ref="0x2ae83e151020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2ae83e130c50" loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x2ae83e130c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ae83e12e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2ae83e129020" loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x2ae83e129020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e129370"/>
        <function-ref name="write" scoped="" ref="0x2ae83e1294f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2ae83e12a020" loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x2ae83e12a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e12a370"/>
        <function-ref name="write" scoped="" ref="0x2ae83e12a4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2ae83e1326b8" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x2ae83e1326b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ae83e132a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2ae83e14fa88" loc="93:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x2ae83e14fa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e14fdd8"/>
        <function-ref name="write" scoped="" ref="0x2ae83e14e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2ae83e151a88" loc="91:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x2ae83e151a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e151dd8"/>
        <function-ref name="write" scoped="" ref="0x2ae83e14f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2ae83e1552e8" loc="80:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x2ae83e1552e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e155638"/>
        <function-ref name="write" scoped="" ref="0x2ae83e1557c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2ae83e153a88" loc="87:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x2ae83e153a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e153dd8"/>
        <function-ref name="write" scoped="" ref="0x2ae83e152020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2ae83e1582e8" loc="76:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x2ae83e1582e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e158638"/>
        <function-ref name="write" scoped="" ref="0x2ae83e1587c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2ae83e14ea88" loc="97:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x2ae83e14ea88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2ae83e14d5e8"/>
        <function-ref name="writeDone" scoped="" ref="0x2ae83e14d770"/>
        <function-ref name="write" scoped="" ref="0x2ae83e14d8f8"/>
        <function-ref name="beginRead" scoped="" ref="0x2ae83e14da80"/>
        <function-ref name="readDone" scoped="" ref="0x2ae83e14dc08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2ae83e1320a0" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x2ae83e1320a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ae83e1323f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2ae83e12b020" loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x2ae83e12b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e12b370"/>
        <function-ref name="write" scoped="" ref="0x2ae83e12b4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2ae83e127020" loc="68:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x2ae83e127020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e127370"/>
        <function-ref name="write" scoped="" ref="0x2ae83e1274f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2ae83e159a88" loc="75:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x2ae83e159a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e159dd8"/>
        <function-ref name="write" scoped="" ref="0x2ae83e158020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2ae83e15b2e8" loc="70:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x2ae83e15b2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e15b638"/>
        <function-ref name="write" scoped="" ref="0x2ae83e15b7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2ae83e131368" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x2ae83e131368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ae83e1316b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2ae83e15ba88" loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x2ae83e15ba88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e15bdd8"/>
        <function-ref name="write" scoped="" ref="0x2ae83e15a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ae83e134a48" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2ae83e134a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ae83e134d98"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ae83e133020"/>
        <function-ref name="request" scoped="" ref="0x2ae83e1331a8"/>
        <function-ref name="granted" scoped="" ref="0x2ae83e133330"/>
        <function-ref name="isOwner" scoped="" ref="0x2ae83e1334b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2ae83e12dd50" loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x2ae83e12dd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ae83e12c0d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2ae83e12c9b8" loc="59:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x2ae83e12c9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ae83e12cd08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2ae83e1532e8" loc="86:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x2ae83e1532e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e153638"/>
        <function-ref name="write" scoped="" ref="0x2ae83e1537c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2ae83e154a88" loc="85:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x2ae83e154a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e154dd8"/>
        <function-ref name="write" scoped="" ref="0x2ae83e153020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2ae83e12e2e8" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x2ae83e12e2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ae83e12e638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2ae83e1542e8" loc="82:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2ae83e1542e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e154638"/>
        <function-ref name="write" scoped="" ref="0x2ae83e1547c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2ae83e14f2e8" loc="92:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x2ae83e14f2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e14f638"/>
        <function-ref name="write" scoped="" ref="0x2ae83e14f7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2ae83e155a88" loc="81:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x2ae83e155a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e155dd8"/>
        <function-ref name="write" scoped="" ref="0x2ae83e154020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2ae83e131980" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x2ae83e131980"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ae83e131cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2ae83e1562e8" loc="78:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x2ae83e1562e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e156638"/>
        <function-ref name="write" scoped="" ref="0x2ae83e1567c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2ae83e130638" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x2ae83e130638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ae83e130988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2ae83e158a88" loc="77:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x2ae83e158a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e158dd8"/>
        <function-ref name="write" scoped="" ref="0x2ae83e156020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2ae83e12c3a0" loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x2ae83e12c3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ae83e12c6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2ae83e14c020" loc="98:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x2ae83e14c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2ae83e14c370"/>
        <function-ref name="writeDone" scoped="" ref="0x2ae83e14c4f8"/>
        <function-ref name="write" scoped="" ref="0x2ae83e14c680"/>
        <function-ref name="beginRead" scoped="" ref="0x2ae83e14c808"/>
        <function-ref name="readDone" scoped="" ref="0x2ae83e14c990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2ae83e170c90" loc="69:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x2ae83e170c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e16f3e8"/>
        <function-ref name="write" scoped="" ref="0x2ae83e16f570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2ae83e1443a0" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x2ae83e1443a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ae83e1446f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2ae83e174dd8" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x2ae83e174dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e172170"/>
        <function-ref name="write" scoped="" ref="0x2ae83e1722f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2ae83e16e7c0" loc="72:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x2ae83e16e7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e16eb10"/>
        <function-ref name="write" scoped="" ref="0x2ae83e16ec98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2ae83e16d020" loc="73:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x2ae83e16d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e16d370"/>
        <function-ref name="write" scoped="" ref="0x2ae83e16d4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2ae83e1627c0" loc="94:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x2ae83e1627c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e162b10"/>
        <function-ref name="write" scoped="" ref="0x2ae83e162c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2ae83e1647c0" loc="90:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x2ae83e1647c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e164b10"/>
        <function-ref name="write" scoped="" ref="0x2ae83e164c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2ae83e142638" loc="50:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x2ae83e142638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ae83e142988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2ae83e1657c0" loc="88:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2ae83e1657c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e165b10"/>
        <function-ref name="write" scoped="" ref="0x2ae83e165c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2ae83e172d60" loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x2ae83e172d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e1710d8"/>
        <function-ref name="write" scoped="" ref="0x2ae83e171260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2ae83e171cc8" loc="67:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x2ae83e171cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e1700a0"/>
        <function-ref name="write" scoped="" ref="0x2ae83e170228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2ae83e169020" loc="79:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x2ae83e169020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e169370"/>
        <function-ref name="write" scoped="" ref="0x2ae83e1694f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2ae83e16d7c0" loc="74:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x2ae83e16d7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e16db10"/>
        <function-ref name="write" scoped="" ref="0x2ae83e16dc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2ae83e146da0" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x2ae83e146da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2ae83e145170"/>
        <function-ref name="abortRelease" scoped="" ref="0x2ae83e1452f8"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2ae83e145480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2ae83e176020" loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x2ae83e176020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ae83e176370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2ae83e176638" loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x2ae83e176638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ae83e176a88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2ae83e176d50" loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x2ae83e176d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ae83e1750d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2ae83e164020" loc="89:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2ae83e164020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e164370"/>
        <function-ref name="write" scoped="" ref="0x2ae83e1644f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2ae83e1412e8" loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x2ae83e1412e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ae83e141638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2ae83e171528" loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x2ae83e171528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e171878"/>
        <function-ref name="write" scoped="" ref="0x2ae83e171a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2ae83e1725c0" loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x2ae83e1725c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e172910"/>
        <function-ref name="write" scoped="" ref="0x2ae83e172a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2ae83e145d60" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x2ae83e145d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ae83e1440d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2ae83e162020" loc="93:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x2ae83e162020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e162370"/>
        <function-ref name="write" scoped="" ref="0x2ae83e1624f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2ae83e163020" loc="91:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x2ae83e163020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e163370"/>
        <function-ref name="write" scoped="" ref="0x2ae83e1634f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2ae83e1697c0" loc="80:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x2ae83e1697c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e169b10"/>
        <function-ref name="write" scoped="" ref="0x2ae83e169c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2ae83e165020" loc="87:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x2ae83e165020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e165370"/>
        <function-ref name="write" scoped="" ref="0x2ae83e1654f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2ae83e16b7c0" loc="76:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x2ae83e16b7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e16bb10"/>
        <function-ref name="write" scoped="" ref="0x2ae83e16bc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2ae83e161020" loc="97:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x2ae83e161020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2ae83e161770"/>
        <function-ref name="writeDone" scoped="" ref="0x2ae83e1618f8"/>
        <function-ref name="write" scoped="" ref="0x2ae83e161a80"/>
        <function-ref name="beginRead" scoped="" ref="0x2ae83e161c08"/>
        <function-ref name="readDone" scoped="" ref="0x2ae83e161d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2ae83e145748" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x2ae83e145748"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ae83e145a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2ae83e174638" loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x2ae83e174638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e174988"/>
        <function-ref name="write" scoped="" ref="0x2ae83e174b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2ae83e1704f0" loc="68:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x2ae83e1704f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e170840"/>
        <function-ref name="write" scoped="" ref="0x2ae83e1709c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2ae83e16b020" loc="75:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x2ae83e16b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e16b370"/>
        <function-ref name="write" scoped="" ref="0x2ae83e16b4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2ae83e16f838" loc="70:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x2ae83e16f838"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e16fb88"/>
        <function-ref name="write" scoped="" ref="0x2ae83e16fd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2ae83e1449b8" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x2ae83e1449b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ae83e144d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2ae83e16e020" loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x2ae83e16e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e16e370"/>
        <function-ref name="write" scoped="" ref="0x2ae83e16e4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ae83e1461a8" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2ae83e1461a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ae83e1464f8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ae83e146680"/>
        <function-ref name="request" scoped="" ref="0x2ae83e146808"/>
        <function-ref name="granted" scoped="" ref="0x2ae83e146990"/>
        <function-ref name="isOwner" scoped="" ref="0x2ae83e146b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2ae83e1753a0" loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x2ae83e1753a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ae83e1756f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2ae83e174020" loc="59:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x2ae83e174020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ae83e174370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2ae83e1677c0" loc="86:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x2ae83e1677c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e167b10"/>
        <function-ref name="write" scoped="" ref="0x2ae83e167c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2ae83e167020" loc="85:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x2ae83e167020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e167370"/>
        <function-ref name="write" scoped="" ref="0x2ae83e1674f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2ae83e141900" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x2ae83e141900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ae83e141c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2ae83e1687c0" loc="82:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2ae83e1687c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e168b10"/>
        <function-ref name="write" scoped="" ref="0x2ae83e168c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2ae83e1637c0" loc="92:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x2ae83e1637c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e163b10"/>
        <function-ref name="write" scoped="" ref="0x2ae83e163c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2ae83e168020" loc="81:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x2ae83e168020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e168370"/>
        <function-ref name="write" scoped="" ref="0x2ae83e1684f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2ae83e142020" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x2ae83e142020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ae83e142370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2ae83e16a7c0" loc="78:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x2ae83e16a7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e16ab10"/>
        <function-ref name="write" scoped="" ref="0x2ae83e16ac98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2ae83e142c50" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x2ae83e142c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ae83e141020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2ae83e16a020" loc="77:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x2ae83e16a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e16a370"/>
        <function-ref name="write" scoped="" ref="0x2ae83e16a4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2ae83e1759b8" loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x2ae83e1759b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ae83e175d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2ae83e1600a0" loc="98:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x2ae83e1600a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2ae83e1603f0"/>
        <function-ref name="writeDone" scoped="" ref="0x2ae83e160578"/>
        <function-ref name="write" scoped="" ref="0x2ae83e160700"/>
        <function-ref name="beginRead" scoped="" ref="0x2ae83e160888"/>
        <function-ref name="readDone" scoped="" ref="0x2ae83e160a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x2ae83e18e2b8" loc="54:/opt/tinyos-2.1.2/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2ae83e18e2b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2ae83e18e608"/>
        <function-ref name="changed" scoped="" ref="0x2ae83e18e790"/>
        <function-ref name="amGroup" scoped="" ref="0x2ae83e18e918"/>
        <function-ref name="setAddress" scoped="" ref="0x2ae83e18eaa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x2ae83e190d10" loc="40:/opt/tinyos-2.1.2/tos/platforms/micaz/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2ae83e190d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x2ae83e17d0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2ae83e1a2140" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x2ae83e1a2140"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2ae83e1a2490"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2ae83e1a2618"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2ae83e1a27a0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2ae83e1a2928"/>
        <function-ref name="setCca" scoped="" ref="0x2ae83e1a2ab0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2ae83e1a2c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x2ae83e1a1cb8" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EnergyIndicator" scoped="" ref="0x2ae83e1a1cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2ae83e1a00a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x2ae83e1a3480" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Transmit" scoped="" ref="0x2ae83e1a3480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ae83e1a37d0"/>
        <function-ref name="cancel" scoped="" ref="0x2ae83e1a3958"/>
        <function-ref name="modify" scoped="" ref="0x2ae83e1a3ae0"/>
        <function-ref name="sendDone" scoped="" ref="0x2ae83e1a3c68"/>
        <function-ref name="resend" scoped="" ref="0x2ae83e1a3df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2ae83e1a6c48" loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2ae83e1a6c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ae83e1a3020"/>
        <function-ref name="stop" scoped="" ref="0x2ae83e1a31a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x2ae83e1a0458" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteIndicator" scoped="" ref="0x2ae83e1a0458"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2ae83e1a07a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2ae83e1b5948" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x2ae83e1b5948"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2ae83e1b5c98"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2ae83e1b5e20"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2ae83e1b4020"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2ae83e1b41a8"/>
        <function-ref name="setCca" scoped="" ref="0x2ae83e1b4330"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2ae83e1b44b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x2ae83e1e5460" loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x2ae83e1e5460"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ae83d6ecd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2ae83d6eb178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ae83cd80608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2ae83e1e3900"/>
        <function-ref name="clear" scoped="" ref="0x2ae83e1e2020"/>
        <function-ref name="isValid" scoped="" ref="0x2ae83e1e3220"/>
        <function-ref name="set" scoped="" ref="0x2ae83e1e2700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x2ae83e1cfde0" loc="78:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x2ae83e1cfde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e1ce170"/>
        <function-ref name="write" scoped="" ref="0x2ae83e1ce2f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x2ae83e1ce650" loc="79:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x2ae83e1ce650"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e1ce9a0"/>
        <function-ref name="write" scoped="" ref="0x2ae83e1ceb28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x2ae83e1b48c0" loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EnergyIndicator" scoped="" ref="0x2ae83e1b48c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2ae83e1b4c10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x2ae83e1d2478" loc="72:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x2ae83e1d2478"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ae83e1d27c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x2ae83e1d8d60" loc="60:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CaptureSFD" scoped="" ref="0x2ae83e1d8d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2ae83e1e00d8"/>
        <function-ref name="disable" scoped="" ref="0x2ae83e1e0260"/>
        <function-ref name="captured" scoped="" ref="0x2ae83e1e03e8"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2ae83e1e0570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x2ae83e1b39d8" loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BackoffTimer" scoped="" ref="0x2ae83e1b39d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ae83d6ecd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2ae83d6eb178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ae83cd80608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ae83e1af088"/>
        <function-ref name="fired" scoped="" ref="0x2ae83e1b00f8"/>
        <function-ref name="startAt" scoped="" ref="0x2ae83e1b0a08"/>
        <function-ref name="isRunning" scoped="" ref="0x2ae83e1b0580"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ae83e1af510"/>
        <function-ref name="start" scoped="" ref="0x2ae83e1b2768"/>
        <function-ref name="stop" scoped="" ref="0x2ae83e1b2c40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2ae83e1af9a8" loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x2ae83e1af9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2ae83e1afcf8"/>
        <function-ref name="setNetwork" scoped="" ref="0x2ae83e1afe80"/>
        <function-ref name="getRssi" scoped="" ref="0x2ae83e1e6030"/>
        <function-ref name="getNetwork" scoped="" ref="0x2ae83e1e61b8"/>
        <function-ref name="getPower" scoped="" ref="0x2ae83e1e6340"/>
        <function-ref name="getLqi" scoped="" ref="0x2ae83e1e64c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x2ae83e1d4538" loc="68:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2ae83e1d4538"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e1d4888"/>
        <function-ref name="write" scoped="" ref="0x2ae83e1d4a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x2ae83e1d4da8" loc="69:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x2ae83e1d4da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e1d3170"/>
        <function-ref name="write" scoped="" ref="0x2ae83e1d32f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x2ae83e200750" loc="83:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x2ae83e200750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ae83e200aa0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x2ae83e200c28"/>
        <function-ref name="sfd" scoped="" ref="0x2ae83e200db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2ae83e1b6b70" loc="50:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2ae83e1b6b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ae83e1b5020"/>
        <function-ref name="cancel" scoped="" ref="0x2ae83e1b51a8"/>
        <function-ref name="modify" scoped="" ref="0x2ae83e1b5330"/>
        <function-ref name="sendDone" scoped="" ref="0x2ae83e1b54b8"/>
        <function-ref name="resend" scoped="" ref="0x2ae83e1b5640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x2ae83e1d6cb0" loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x2ae83e1d6cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2ae83e1d50a0"/>
        <function-ref name="abortRelease" scoped="" ref="0x2ae83e1d5228"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2ae83e1d53b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x2ae83e1d2b68" loc="73:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x2ae83e1d2b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ae83e1d1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x2ae83e1dfc98" loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x2ae83e1dfc98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83e1dd020"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83e1dd1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83e1dd330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83e1dd4b8"/>
        <function-ref name="get" scoped="" ref="0x2ae83e1dd640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83e1dd7c8"/>
        <function-ref name="set" scoped="" ref="0x2ae83e1dd950"/>
        <function-ref name="clr" scoped="" ref="0x2ae83e1ddad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ae83e1b7b80" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ae83e1b7b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ae83e1b6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2ae83e1e67f8" loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ae83e1e67f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2ae83e1e6b48"/>
        <function-ref name="getHeader" scoped="" ref="0x2ae83e1e6cd0"/>
        <function-ref name="getMetadata" scoped="" ref="0x2ae83e1e6e58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x2ae83e1d81d8" loc="59:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2ae83e1d81d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ae83e1d8528"/>
        <function-ref name="isSet" scoped="" ref="0x2ae83e1d86b0"/>
        <function-ref name="cancel" scoped="" ref="0x2ae83e1d8838"/>
        <function-ref name="set" scoped="" ref="0x2ae83e1d89c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x2ae83e1d13d0" loc="74:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x2ae83e1d13d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e1d1920"/>
        <function-ref name="write" scoped="" ref="0x2ae83e1d1aa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2ae83e1d6020" loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x2ae83e1d6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ae83e1d6370"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ae83e1d64f8"/>
        <function-ref name="request" scoped="" ref="0x2ae83e1d6680"/>
        <function-ref name="granted" scoped="" ref="0x2ae83e1d6808"/>
        <function-ref name="isOwner" scoped="" ref="0x2ae83e1d6990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x2ae83e1e08b8" loc="61:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x2ae83e1e08b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83e1e0d08"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83e1df020"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83e1df1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83e1df330"/>
        <function-ref name="get" scoped="" ref="0x2ae83e1df4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83e1df640"/>
        <function-ref name="set" scoped="" ref="0x2ae83e1df7c8"/>
        <function-ref name="clr" scoped="" ref="0x2ae83e1df950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x2ae83e1cee80" loc="80:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x2ae83e1cee80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e1cd1f8"/>
        <function-ref name="write" scoped="" ref="0x2ae83e1cd380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x2ae83e1cd6f0" loc="81:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x2ae83e1cd6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e1cda40"/>
        <function-ref name="write" scoped="" ref="0x2ae83e1cdbc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x2ae83e1d3670" loc="70:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x2ae83e1d3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ae83e1d39c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x2ae83e1dde20" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFD" scoped="" ref="0x2ae83e1dde20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83e1d71a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83e1d7330"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83e1d74b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83e1d7640"/>
        <function-ref name="get" scoped="" ref="0x2ae83e1d77c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83e1d7950"/>
        <function-ref name="set" scoped="" ref="0x2ae83e1d7ad8"/>
        <function-ref name="clr" scoped="" ref="0x2ae83e1d7c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2ae83e2020c0" loc="84:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2ae83e2020c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ae83e202410"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ae83e202598"/>
        <function-ref name="led1On" scoped="" ref="0x2ae83e202720"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ae83e2028a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ae83e202a30"/>
        <function-ref name="get" scoped="" ref="0x2ae83e202bb8"/>
        <function-ref name="led1Off" scoped="" ref="0x2ae83e202d40"/>
        <function-ref name="led2Off" scoped="" ref="0x2ae83e1ff4b8"/>
        <function-ref name="set" scoped="" ref="0x2ae83e1ff020"/>
        <function-ref name="led0On" scoped="" ref="0x2ae83e1ff1a8"/>
        <function-ref name="led2On" scoped="" ref="0x2ae83e1ff330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x2ae83e1cf558" loc="77:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x2ae83e1cf558"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e1cf8a8"/>
        <function-ref name="write" scoped="" ref="0x2ae83e1cfa30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2ae83e1b6310" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2ae83e1b6310"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ae83e1b6660"/>
        <function-ref name="stop" scoped="" ref="0x2ae83e1b67e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x2ae83e1d5720" loc="67:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x2ae83e1d5720"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2ae83e1d5a70"/>
        <function-ref name="writeDone" scoped="" ref="0x2ae83e1d5bf8"/>
        <function-ref name="write" scoped="" ref="0x2ae83e1d5d80"/>
        <function-ref name="beginRead" scoped="" ref="0x2ae83e1d4020"/>
        <function-ref name="readDone" scoped="" ref="0x2ae83e1d41a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x2ae83e1d3d40" loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x2ae83e1d3d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ae83e1d20d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x2ae83e1d1e30" loc="76:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x2ae83e1d1e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ae83e1cf1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x2ae83e1b3060" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteIndicator" scoped="" ref="0x2ae83e1b3060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2ae83e1b33b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2ae83e287470" loc="69:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x2ae83e287470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e2879c0"/>
        <function-ref name="write" scoped="" ref="0x2ae83e287b48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2ae83e2589b8" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x2ae83e2589b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ae83e258d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2ae83e28b470" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x2ae83e28b470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e28b7c0"/>
        <function-ref name="write" scoped="" ref="0x2ae83e28b948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2ae83e286d98" loc="72:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x2ae83e286d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e285170"/>
        <function-ref name="write" scoped="" ref="0x2ae83e2852f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2ae83e2855c0" loc="73:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x2ae83e2855c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e285910"/>
        <function-ref name="write" scoped="" ref="0x2ae83e285a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2ae83e27ac10" loc="94:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x2ae83e27ac10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e279020"/>
        <function-ref name="write" scoped="" ref="0x2ae83e2791a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2ae83e27dc10" loc="90:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x2ae83e27dc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e27c020"/>
        <function-ref name="write" scoped="" ref="0x2ae83e27c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2ae83e291c50" loc="50:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x2ae83e291c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ae83e290020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2ae83e27ec10" loc="88:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2ae83e27ec10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e27d020"/>
        <function-ref name="write" scoped="" ref="0x2ae83e27d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2ae83e28a470" loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x2ae83e28a470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e28a7c0"/>
        <function-ref name="write" scoped="" ref="0x2ae83e28a948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2ae83e289470" loc="67:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x2ae83e289470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e2897c0"/>
        <function-ref name="write" scoped="" ref="0x2ae83e289948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2ae83e281470" loc="79:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x2ae83e281470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e2817c0"/>
        <function-ref name="write" scoped="" ref="0x2ae83e281948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2ae83e285d60" loc="74:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x2ae83e285d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e2840d8"/>
        <function-ref name="write" scoped="" ref="0x2ae83e284260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2ae83e259430" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x2ae83e259430"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2ae83e259780"/>
        <function-ref name="abortRelease" scoped="" ref="0x2ae83e259908"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2ae83e259a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2ae83e28f638" loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x2ae83e28f638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ae83e28f988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2ae83e28fc50" loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x2ae83e28fc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ae83e28d0d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2ae83e28d3a0" loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x2ae83e28d3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ae83e28d6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2ae83e27d470" loc="89:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2ae83e27d470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e27d7c0"/>
        <function-ref name="write" scoped="" ref="0x2ae83e27d948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2ae83e290900" loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x2ae83e290900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ae83e290c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2ae83e28ac10" loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x2ae83e28ac10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e289020"/>
        <function-ref name="write" scoped="" ref="0x2ae83e2891a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2ae83e28bc10" loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x2ae83e28bc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e28a020"/>
        <function-ref name="write" scoped="" ref="0x2ae83e28a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2ae83e2583a0" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x2ae83e2583a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ae83e2586f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2ae83e27a470" loc="93:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x2ae83e27a470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e27a7c0"/>
        <function-ref name="write" scoped="" ref="0x2ae83e27a948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2ae83e27c470" loc="91:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x2ae83e27c470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e27c7c0"/>
        <function-ref name="write" scoped="" ref="0x2ae83e27c948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2ae83e281c10" loc="80:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x2ae83e281c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e280020"/>
        <function-ref name="write" scoped="" ref="0x2ae83e2801a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2ae83e27e470" loc="87:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x2ae83e27e470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e27e7c0"/>
        <function-ref name="write" scoped="" ref="0x2ae83e27e948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2ae83e284cc8" loc="76:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x2ae83e284cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e2830a0"/>
        <function-ref name="write" scoped="" ref="0x2ae83e283228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2ae83e279470" loc="97:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x2ae83e279470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2ae83e279bc0"/>
        <function-ref name="writeDone" scoped="" ref="0x2ae83e279d48"/>
        <function-ref name="write" scoped="" ref="0x2ae83e278020"/>
        <function-ref name="beginRead" scoped="" ref="0x2ae83e2781a8"/>
        <function-ref name="readDone" scoped="" ref="0x2ae83e278330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2ae83e259d58" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x2ae83e259d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ae83e2580d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2ae83e28cc50" loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x2ae83e28cc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e28b020"/>
        <function-ref name="write" scoped="" ref="0x2ae83e28b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2ae83e289c10" loc="68:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x2ae83e289c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e287020"/>
        <function-ref name="write" scoped="" ref="0x2ae83e2871a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2ae83e284528" loc="75:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x2ae83e284528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e284878"/>
        <function-ref name="write" scoped="" ref="0x2ae83e284a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2ae83e287e10" loc="70:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x2ae83e287e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e2861a8"/>
        <function-ref name="write" scoped="" ref="0x2ae83e286330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2ae83e291020" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x2ae83e291020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ae83e291370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2ae83e2865f8" loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x2ae83e2865f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e286948"/>
        <function-ref name="write" scoped="" ref="0x2ae83e286ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ae83e25a7d0" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2ae83e25a7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ae83e25ab20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ae83e25aca8"/>
        <function-ref name="request" scoped="" ref="0x2ae83e25ae30"/>
        <function-ref name="granted" scoped="" ref="0x2ae83e259020"/>
        <function-ref name="isOwner" scoped="" ref="0x2ae83e2591a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2ae83e28d9b8" loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x2ae83e28d9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ae83e28dd08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2ae83e28c638" loc="59:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x2ae83e28c638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ae83e28c988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2ae83e27fc10" loc="86:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x2ae83e27fc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e27e020"/>
        <function-ref name="write" scoped="" ref="0x2ae83e27e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2ae83e27f470" loc="85:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x2ae83e27f470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e27f7c0"/>
        <function-ref name="write" scoped="" ref="0x2ae83e27f948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2ae83e28f020" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x2ae83e28f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ae83e28f370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2ae83e280c10" loc="82:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2ae83e280c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e27f020"/>
        <function-ref name="write" scoped="" ref="0x2ae83e27f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2ae83e27cc10" loc="92:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x2ae83e27cc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e27a020"/>
        <function-ref name="write" scoped="" ref="0x2ae83e27a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2ae83e280470" loc="81:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x2ae83e280470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e2807c0"/>
        <function-ref name="write" scoped="" ref="0x2ae83e280948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2ae83e291638" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x2ae83e291638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ae83e291988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2ae83e283c90" loc="78:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x2ae83e283c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e281020"/>
        <function-ref name="write" scoped="" ref="0x2ae83e2811a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2ae83e2902e8" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x2ae83e2902e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ae83e290638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2ae83e2834f0" loc="77:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x2ae83e2834f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e283840"/>
        <function-ref name="write" scoped="" ref="0x2ae83e2839c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2ae83e28c020" loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x2ae83e28c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ae83e28c370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2ae83e2785f8" loc="98:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x2ae83e2785f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2ae83e278948"/>
        <function-ref name="writeDone" scoped="" ref="0x2ae83e278ad0"/>
        <function-ref name="write" scoped="" ref="0x2ae83e278c58"/>
        <function-ref name="beginRead" scoped="" ref="0x2ae83e278de0"/>
        <function-ref name="readDone" scoped="" ref="0x2ae83e277020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x2ae83e2a6868" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x2ae83e2a6868"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ae83e2a6bb8"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x2ae83e2a6d40"/>
        <function-ref name="sfd" scoped="" ref="0x2ae83e2a5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ae83e2a52f0" loc="43:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2ae83e2a52f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ae83e2a5640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x2ae83e2a5a48" loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketIndicator" scoped="" ref="0x2ae83e2a5a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2ae83e2a5d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2ae83e2a6080" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2ae83e2a6080"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ae83e2a63d0"/>
        <function-ref name="stop" scoped="" ref="0x2ae83e2a6558"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x2ae83e29e998" loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFO" scoped="" ref="0x2ae83e29e998"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83e29ece8"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83e29ee70"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83e29d020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83e29d1a8"/>
        <function-ref name="get" scoped="" ref="0x2ae83e29d330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83e29d4b8"/>
        <function-ref name="set" scoped="" ref="0x2ae83e29d640"/>
        <function-ref name="clr" scoped="" ref="0x2ae83e29d7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x2ae83e296cb8" loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x2ae83e296cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x2ae83e2950a0"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2ae83e295228"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2ae83e2953b0"/>
        <function-ref name="syncDone" scoped="" ref="0x2ae83e295538"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x2ae83e2956c0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x2ae83e295848"/>
        <function-ref name="setChannel" scoped="" ref="0x2ae83e2959d0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x2ae83e295b58"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2ae83e295ce0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x2ae83e295e68"/>
        <function-ref name="getExtAddr" scoped="" ref="0x2ae83e294020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2ae83e2941a8"/>
        <function-ref name="sync" scoped="" ref="0x2ae83e294330"/>
        <function-ref name="getChannel" scoped="" ref="0x2ae83e2945b8"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2ae83e294740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x2ae83e2ba020" loc="148:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveDone_task" scoped="" ref="0x2ae83e2ba020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ae83e2ba370"/>
        <function-ref name="runTask" scoped="" ref="0x2ae83e2ba4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x2ae83e294d08" loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x2ae83e294d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ae83d6ecd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2ae83d6eb178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ae83cd80608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2ae83e2921f0"/>
        <function-ref name="clear" scoped="" ref="0x2ae83e2928d0"/>
        <function-ref name="isValid" scoped="" ref="0x2ae83e293ac0"/>
        <function-ref name="set" scoped="" ref="0x2ae83e2cb020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x2ae83e29db28" loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFOP" scoped="" ref="0x2ae83e29db28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83e29de78"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83e29b030"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83e29b1b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83e29b340"/>
        <function-ref name="get" scoped="" ref="0x2ae83e29b4c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83e29b650"/>
        <function-ref name="set" scoped="" ref="0x2ae83e29b7d8"/>
        <function-ref name="clr" scoped="" ref="0x2ae83e29b960"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x2ae83e2ca8a8" loc="69:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x2ae83e2ca8a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e2cabf8"/>
        <function-ref name="write" scoped="" ref="0x2ae83e2cad80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x2ae83e2c9130" loc="70:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x2ae83e2c9130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e2c9480"/>
        <function-ref name="write" scoped="" ref="0x2ae83e2c9608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x2ae83e2c8208" loc="72:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x2ae83e2c8208"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e2c8558"/>
        <function-ref name="write" scoped="" ref="0x2ae83e2c86e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2ae83e2973a8" loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x2ae83e2973a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2ae83e2976f8"/>
        <function-ref name="setNetwork" scoped="" ref="0x2ae83e297880"/>
        <function-ref name="getRssi" scoped="" ref="0x2ae83e297a08"/>
        <function-ref name="getNetwork" scoped="" ref="0x2ae83e297b90"/>
        <function-ref name="getPower" scoped="" ref="0x2ae83e297d18"/>
        <function-ref name="getLqi" scoped="" ref="0x2ae83e296020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x2ae83e2a1e48" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x2ae83e2a1e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ae83e2a01c0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x2ae83e2a0348"/>
        <function-ref name="sfd" scoped="" ref="0x2ae83e2a04d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x2ae83e298520" loc="60:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x2ae83e298520"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ae83e298870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x2ae83e29f6b8" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x2ae83e29f6b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ae83e29fa08"/>
        <function-ref name="isInput" scoped="" ref="0x2ae83e29fb90"/>
        <function-ref name="toggle" scoped="" ref="0x2ae83e29fd18"/>
        <function-ref name="isOutput" scoped="" ref="0x2ae83e29e020"/>
        <function-ref name="get" scoped="" ref="0x2ae83e29e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ae83e29e330"/>
        <function-ref name="set" scoped="" ref="0x2ae83e29e4b8"/>
        <function-ref name="clr" scoped="" ref="0x2ae83e29e640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x2ae83e2c8a70" loc="73:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2ae83e2c8a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e2c8dc0"/>
        <function-ref name="write" scoped="" ref="0x2ae83e2c7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ae83e2a1020" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ae83e2a1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ae83e2a1370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2ae83e296350" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ae83e296350"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2ae83e2966a0"/>
        <function-ref name="getHeader" scoped="" ref="0x2ae83e296828"/>
        <function-ref name="getMetadata" scoped="" ref="0x2ae83e2969b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ae83e2a07a0" loc="50:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2ae83e2a07a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ae83e2a0af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2ae83e29a900" loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x2ae83e29a900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ae83e29ac50"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ae83e29add8"/>
        <function-ref name="request" scoped="" ref="0x2ae83e299020"/>
        <function-ref name="granted" scoped="" ref="0x2ae83e2991a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2ae83e299330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x2ae83e2c9960" loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x2ae83e2c9960"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e2c9cb0"/>
        <function-ref name="write" scoped="" ref="0x2ae83e2c9e38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x2ae83e2996a0" loc="59:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x2ae83e2996a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2ae83e2999f0"/>
        <function-ref name="writeDone" scoped="" ref="0x2ae83e299b78"/>
        <function-ref name="write" scoped="" ref="0x2ae83e299d00"/>
        <function-ref name="beginRead" scoped="" ref="0x2ae83e298020"/>
        <function-ref name="readDone" scoped="" ref="0x2ae83e2981a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x2ae83e2c7398" loc="74:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x2ae83e2c7398"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ae83e2c78e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x2ae83e29f020" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketIndicator" scoped="" ref="0x2ae83e29f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2ae83e29f370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2ae83e2c7ba0" loc="76:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2ae83e2c7ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ae83e2c6020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ae83e2c61a8"/>
        <function-ref name="led1On" scoped="" ref="0x2ae83e2c6330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ae83e2c64b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ae83e2c6640"/>
        <function-ref name="get" scoped="" ref="0x2ae83e2c67c8"/>
        <function-ref name="led1Off" scoped="" ref="0x2ae83e2c6950"/>
        <function-ref name="led2Off" scoped="" ref="0x2ae83e2c5020"/>
        <function-ref name="set" scoped="" ref="0x2ae83e2c6ad8"/>
        <function-ref name="led0On" scoped="" ref="0x2ae83e2c6c60"/>
        <function-ref name="led2On" scoped="" ref="0x2ae83e2c6de8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x2ae83e2ca020" loc="68:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x2ae83e2ca020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e2ca370"/>
        <function-ref name="write" scoped="" ref="0x2ae83e2ca4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x2ae83e2cb8e0" loc="67:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x2ae83e2cb8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ae83e2cbc30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x2ae83e29bd40" loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptFIFOP" scoped="" ref="0x2ae83e29bd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ae83e29a0d8"/>
        <function-ref name="disable" scoped="" ref="0x2ae83e29a260"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2ae83e29a3e8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2ae83e29a570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x2ae83e298c10" loc="61:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x2ae83e298c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ae83e2970a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2ae83e2a1660" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2ae83e2a1660"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ae83e2a19b0"/>
        <function-ref name="stop" scoped="" ref="0x2ae83e2a1b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2ae83e3116b0" loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2ae83e3116b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2ae83e311a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x2ae83e3154a8" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x2ae83e3154a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2ae83e3157f8"/>
        <function-ref name="setNetwork" scoped="" ref="0x2ae83e315980"/>
        <function-ref name="getRssi" scoped="" ref="0x2ae83e315b08"/>
        <function-ref name="getNetwork" scoped="" ref="0x2ae83e315c90"/>
        <function-ref name="getPower" scoped="" ref="0x2ae83e315e18"/>
        <function-ref name="getLqi" scoped="" ref="0x2ae83e312020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x2ae83e310130" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2ae83e310130"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ae83d6ecd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2ae83d6eb178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ae83cd80608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2ae83e30f588"/>
        <function-ref name="clear" scoped="" ref="0x2ae83e30fc68"/>
        <function-ref name="isValid" scoped="" ref="0x2ae83e310e80"/>
        <function-ref name="set" scoped="" ref="0x2ae83e30d380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x2ae83e312d08" loc="43:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ae83e312d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2ae83e3110a0"/>
        <function-ref name="getHeader" scoped="" ref="0x2ae83e311228"/>
        <function-ref name="getMetadata" scoped="" ref="0x2ae83e3113b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x2ae83e309ac8" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2ae83e309ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ae83e309e18"/>
        <function-ref name="isSet" scoped="" ref="0x2ae83e344020"/>
        <function-ref name="cancel" scoped="" ref="0x2ae83e3441a8"/>
        <function-ref name="set" scoped="" ref="0x2ae83e344330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2ae83e30c020" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2ae83e30c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ae83d6ec608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ae83d6ec960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ae83cd80608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2ae83e30b478"/>
        <function-ref name="clear" scoped="" ref="0x2ae83e30bb58"/>
        <function-ref name="isValid" scoped="" ref="0x2ae83e30cd70"/>
        <function-ref name="set" scoped="" ref="0x2ae83e309278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2ae83e3123b8" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x2ae83e3123b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2ae83e312708"/>
        <function-ref name="noAck" scoped="" ref="0x2ae83e312890"/>
        <function-ref name="wasAcked" scoped="" ref="0x2ae83e312a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2ae83e33f630" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2ae83e33f630"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2ae83e33f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x2ae83e3412e8" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x2ae83e3412e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2ae83e341638"/>
        <function-ref name="setNetwork" scoped="" ref="0x2ae83e3417c0"/>
        <function-ref name="getRssi" scoped="" ref="0x2ae83e341948"/>
        <function-ref name="getNetwork" scoped="" ref="0x2ae83e341ad0"/>
        <function-ref name="getPower" scoped="" ref="0x2ae83e341c58"/>
        <function-ref name="getLqi" scoped="" ref="0x2ae83e341de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2ae83e336618" loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2ae83e336618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ae83e336968"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ae83e336af0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ae83e336c78"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ae83e336e00"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ae83e335020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x2ae83e33e060" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2ae83e33e060"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ae83d6ecd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2ae83d6eb178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ae83cd80608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2ae83e33c4b8"/>
        <function-ref name="clear" scoped="" ref="0x2ae83e33cb98"/>
        <function-ref name="isValid" scoped="" ref="0x2ae83e33edb0"/>
        <function-ref name="set" scoped="" ref="0x2ae83e33b2b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x2ae83e340b60" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ae83e340b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2ae83e33f020"/>
        <function-ref name="getHeader" scoped="" ref="0x2ae83e33f1a8"/>
        <function-ref name="getMetadata" scoped="" ref="0x2ae83e33f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x2ae83e337ac8" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2ae83e337ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ae83e337e18"/>
        <function-ref name="isSet" scoped="" ref="0x2ae83e336020"/>
        <function-ref name="cancel" scoped="" ref="0x2ae83e3361a8"/>
        <function-ref name="set" scoped="" ref="0x2ae83e336330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x2ae83e3328b0" loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime32khz" scoped="" ref="0x2ae83e3328b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ae83d6ecd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2ae83d6eb178"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ae83e334490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x2ae83e334b20" loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x2ae83e334b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ae83d6ec608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ae83d6ec960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ae83e331728"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2ae83e33a020" loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2ae83e33a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ae83d6ec608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ae83d6ec960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ae83cd80608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2ae83e338478"/>
        <function-ref name="clear" scoped="" ref="0x2ae83e338b58"/>
        <function-ref name="isValid" scoped="" ref="0x2ae83e33ad70"/>
        <function-ref name="set" scoped="" ref="0x2ae83e337278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2ae83e340210" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x2ae83e340210"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2ae83e340560"/>
        <function-ref name="noAck" scoped="" ref="0x2ae83e3406e8"/>
        <function-ref name="wasAcked" scoped="" ref="0x2ae83e340870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2ae83e39d528" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2ae83e39d528"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ae83d6ecd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2ae83d6eb178"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ae83e39c0f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2ae83e39c720" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2ae83e39c720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ae83d6ecd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2ae83d6eb178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ae83cd80608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ae83e392578"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ae83e391020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ae83e392a00"/>
        <function-ref name="overflow" scoped="" ref="0x2ae83e3914a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2ae83e38c350" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2ae83e38c350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ae83d6ec608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ae83d6ec960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ae83e3bd6c8"/>
        <function-ref name="fired" scoped="" ref="0x2ae83e38bdb0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ae83e3bfad8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ae83e3bf688"/>
        <function-ref name="getdt" scoped="" ref="0x2ae83e3bc020"/>
        <function-ref name="gett0" scoped="" ref="0x2ae83e3bdb18"/>
        <function-ref name="isRunning" scoped="" ref="0x2ae83e3bf238"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ae83e38b020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ae83e3bd0f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ae83e38b4c0"/>
        <function-ref name="stop" scoped="" ref="0x2ae83e38b960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2ae83e3bc5e0" loc="47:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2ae83e3bc5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ae83d6ec608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ae83d6ec960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ae83e3ba190"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ae83e38d080" loc="45:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ae83e38d080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ae83e38d3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x2ae83e3b2968" loc="29:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x2ae83e3b2968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ae83d6ec608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ae83d6ec960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ae83cd80608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ae83e3b1730"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ae83e3b0088"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ae83e3b1bb8"/>
        <function-ref name="overflow" scoped="" ref="0x2ae83e3b0510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ae83e3b9bd8" loc="27:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ae83e3b9bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ae83e3b6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x2ae83e3b6648" loc="28:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x2ae83e3b6648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ae83d6ec608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ae83d6ec960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ae83cd80608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ae83e3b4cc0"/>
        <function-ref name="fired" scoped="" ref="0x2ae83e3b5d50"/>
        <function-ref name="startAt" scoped="" ref="0x2ae83e3b46b8"/>
        <function-ref name="isRunning" scoped="" ref="0x2ae83e3b4230"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ae83e3b2190"/>
        <function-ref name="start" scoped="" ref="0x2ae83e3b53f0"/>
        <function-ref name="stop" scoped="" ref="0x2ae83e3b58c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2ae83e405020" loc="26:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2ae83e405020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ae83d6ec608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ae83d6ec960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ae83cd80608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ae83e403690"/>
        <function-ref name="fired" scoped="" ref="0x2ae83e4046f8"/>
        <function-ref name="startAt" scoped="" ref="0x2ae83e403088"/>
        <function-ref name="isRunning" scoped="" ref="0x2ae83e404b80"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ae83e403b18"/>
        <function-ref name="start" scoped="" ref="0x2ae83e405d70"/>
        <function-ref name="stop" scoped="" ref="0x2ae83e404270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ae83e406770" loc="25:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ae83e406770"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x2ae83d666388"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x2ae83d666388"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ae83e406ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2ae83e401128" loc="27:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2ae83e401128"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ae83d6ec608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ae83d6ec960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ae83cd80608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ae83e401e78"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ae83e4407b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ae83e440330"/>
        <function-ref name="overflow" scoped="" ref="0x2ae83e440c40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x2ae83ef15020" loc="31:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2ae83ef15020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2ae83ef15370"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2ae83ef154f8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2ae83ef15680"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2ae83ef15808"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2ae83ef15990"/>
        <function-ref name="setControl" scoped="" ref="0x2ae83ef15b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2ae83ef22da8" loc="26:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2ae83ef22da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ae83d6ec608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ae83d6ec960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ae83cd80608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ae83ef1e470"/>
        <function-ref name="fired" scoped="" ref="0x2ae83ef1f510"/>
        <function-ref name="startAt" scoped="" ref="0x2ae83ef1fe20"/>
        <function-ref name="isRunning" scoped="" ref="0x2ae83ef1f998"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ae83ef1e8f8"/>
        <function-ref name="start" scoped="" ref="0x2ae83ef20b38"/>
        <function-ref name="stop" scoped="" ref="0x2ae83ef1f088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ae83ef22600" loc="25:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ae83ef22600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ae83ef22950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2ae83ef1d020" loc="27:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2ae83ef1d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ae83d6ec608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ae83d6ec960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ae83cd80608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ae83ef1dd70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ae83ef1b6b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ae83ef1b230"/>
        <function-ref name="overflow" scoped="" ref="0x2ae83ef1bb40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x2ae83ef100a0" loc="33:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2ae83ef100a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x2ae83ef103f0"/>
        <function-ref name="compareBusy" scoped="" ref="0x2ae83ef10578"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x2ae83ef10700"/>
        <function-ref name="countBusy" scoped="" ref="0x2ae83ef10888"/>
        <function-ref name="getAssr" scoped="" ref="0x2ae83ef10a10"/>
        <function-ref name="setAssr" scoped="" ref="0x2ae83ef10b98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x2ae83ef14020" loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2ae83ef14020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2ae83ef127a8"/>
        <function-ref name="fired" scoped="" ref="0x2ae83ef13560"/>
        <function-ref name="get" scoped="" ref="0x2ae83ef14ba0"/>
        <function-ref name="reset" scoped="" ref="0x2ae83ef139e8"/>
        <function-ref name="isOn" scoped="" ref="0x2ae83ef12c30"/>
        <function-ref name="set" scoped="" ref="0x2ae83ef13088"/>
        <function-ref name="start" scoped="" ref="0x2ae83ef13e70"/>
        <function-ref name="stop" scoped="" ref="0x2ae83ef12320"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2ae83ef1a168" loc="30:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2ae83ef1a168"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2ae83ef16270"/>
        <function-ref name="test" scoped="" ref="0x2ae83ef18930"/>
        <function-ref name="get" scoped="" ref="0x2ae83ef1ace8"/>
        <function-ref name="setScale" scoped="" ref="0x2ae83ef166f8"/>
        <function-ref name="getScale" scoped="" ref="0x2ae83ef16bd0"/>
        <function-ref name="reset" scoped="" ref="0x2ae83ef19b58"/>
        <function-ref name="overflow" scoped="" ref="0x2ae83ef196d0"/>
        <function-ref name="isOn" scoped="" ref="0x2ae83ef18db8"/>
        <function-ref name="set" scoped="" ref="0x2ae83ef191f8"/>
        <function-ref name="start" scoped="" ref="0x2ae83ef18020"/>
        <function-ref name="stop" scoped="" ref="0x2ae83ef184a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x2ae83e4505e8" loc="74:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x2ae83e4505e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ae83e450938"/>
        <function-ref name="runTask" scoped="" ref="0x2ae83e450ac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2ae83e454648" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2ae83e454648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ae83d6ec608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ae83d6ec960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ae83cd80608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ae83e452cc0"/>
        <function-ref name="fired" scoped="" ref="0x2ae83e453d50"/>
        <function-ref name="startAt" scoped="" ref="0x2ae83e4526b8"/>
        <function-ref name="isRunning" scoped="" ref="0x2ae83e452230"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ae83e450190"/>
        <function-ref name="start" scoped="" ref="0x2ae83e4533f0"/>
        <function-ref name="stop" scoped="" ref="0x2ae83e4538c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2ae83e459290" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2ae83e459290"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ae83d6ec608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ae83d6ec960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ae83e4555f0"/>
        <function-ref name="fired" scoped="" ref="0x2ae83e458ba8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ae83e4578c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ae83e457470"/>
        <function-ref name="getdt" scoped="" ref="0x2ae83e454020"/>
        <function-ref name="gett0" scoped="" ref="0x2ae83e455a40"/>
        <function-ref name="isRunning" scoped="" ref="0x2ae83e457020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ae83e459dd8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ae83e455020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ae83e4582b8"/>
        <function-ref name="stop" scoped="" ref="0x2ae83e458758"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x2ae83e486618" loc="71:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x2ae83e486618"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ae83e486968"/>
        <function-ref name="runTask" scoped="" ref="0x2ae83e486af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x2ae83e48b5a0" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x2ae83e48b5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ae83d6ec608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ae83d6ec960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ae83e4878f0"/>
        <function-ref name="fired" scoped="" ref="0x2ae83e489020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ae83e489d10"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ae83e4898c0"/>
        <function-ref name="getdt" scoped="" ref="0x2ae83e4861c0"/>
        <function-ref name="gett0" scoped="" ref="0x2ae83e487d40"/>
        <function-ref name="isRunning" scoped="" ref="0x2ae83e489470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ae83e48a118"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ae83e487320"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ae83e48a5b8"/>
        <function-ref name="stop" scoped="" ref="0x2ae83e48aa58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2ae83e4910c8" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2ae83e4910c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ae83d6ec608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ae83d6ec960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ae83e48d610"/>
        <function-ref name="fired" scoped="" ref="0x2ae83e490a48"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ae83e48e900"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ae83e48e490"/>
        <function-ref name="getdt" scoped="" ref="0x2ae83e48b020"/>
        <function-ref name="gett0" scoped="" ref="0x2ae83e48da80"/>
        <function-ref name="isRunning" scoped="" ref="0x2ae83e48e020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ae83e491c30"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ae83e48d020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ae83e490118"/>
        <function-ref name="stop" scoped="" ref="0x2ae83e4905d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2ae83e484c38" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2ae83e484c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ae83d6ec608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ae83d6ec960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ae83e483820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2ae83e483e48" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2ae83e483e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ae83d6ec608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ae83d6ec960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ae83cd80608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ae83e4c3be8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ae83e4c2548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ae83e4c20c0"/>
        <function-ref name="overflow" scoped="" ref="0x2ae83e4c29d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2ae83e4bd420" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2ae83e4bd420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ae83d6ec608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ae83d6ec960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ae83e4a96c8"/>
        <function-ref name="fired" scoped="" ref="0x2ae83e4abdb0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ae83e4aaad8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ae83e4aa688"/>
        <function-ref name="getdt" scoped="" ref="0x2ae83e4a8020"/>
        <function-ref name="gett0" scoped="" ref="0x2ae83e4a9b18"/>
        <function-ref name="isRunning" scoped="" ref="0x2ae83e4aa238"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ae83e4ab020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ae83e4a90f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ae83e4ab4c0"/>
        <function-ref name="stop" scoped="" ref="0x2ae83e4ab960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2ae83e4b47d8" loc="49:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2ae83e4b47d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ae83d6ec608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ae83d6ec960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ae83e4b0a18"/>
        <function-ref name="fired" scoped="" ref="0x2ae83e4b1158"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ae83e4b1e48"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ae83e4b19f8"/>
        <function-ref name="getdt" scoped="" ref="0x2ae83e4af2e8"/>
        <function-ref name="gett0" scoped="" ref="0x2ae83e4b0e68"/>
        <function-ref name="isRunning" scoped="" ref="0x2ae83e4b15a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ae83e4b2370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ae83e4b0448"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ae83e4b2810"/>
        <function-ref name="stop" scoped="" ref="0x2ae83e4b2cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2ae83e4dba88" loc="69:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x2ae83e4dba88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e4da020"/>
        <function-ref name="write" scoped="" ref="0x2ae83e4da1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2ae83e4e5100" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x2ae83e4e5100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ae83e4e5450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2ae83e4dfa88" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x2ae83e4dfa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e4dfdd8"/>
        <function-ref name="write" scoped="" ref="0x2ae83e4de020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2ae83e4d9470" loc="72:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x2ae83e4d9470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e4d97c0"/>
        <function-ref name="write" scoped="" ref="0x2ae83e4d9948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2ae83e4d9c10" loc="73:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x2ae83e4d9c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e4d8020"/>
        <function-ref name="write" scoped="" ref="0x2ae83e4d81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2ae83e4cd470" loc="94:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x2ae83e4cd470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e4cd7c0"/>
        <function-ref name="write" scoped="" ref="0x2ae83e4cd948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2ae83e4d0470" loc="90:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x2ae83e4d0470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e4d07c0"/>
        <function-ref name="write" scoped="" ref="0x2ae83e4d0948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2ae83e4e43a0" loc="50:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x2ae83e4e43a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ae83e4e46f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2ae83e4d1470" loc="88:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2ae83e4d1470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e4d17c0"/>
        <function-ref name="write" scoped="" ref="0x2ae83e4d1948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2ae83e4dea88" loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x2ae83e4dea88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e4dedd8"/>
        <function-ref name="write" scoped="" ref="0x2ae83e4dc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2ae83e4dca88" loc="67:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x2ae83e4dca88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e4dcdd8"/>
        <function-ref name="write" scoped="" ref="0x2ae83e4db020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2ae83e4d5c10" loc="79:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x2ae83e4d5c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e4d4020"/>
        <function-ref name="write" scoped="" ref="0x2ae83e4d41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2ae83e4d8470" loc="74:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x2ae83e4d8470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e4d87c0"/>
        <function-ref name="write" scoped="" ref="0x2ae83e4d8948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2ae83e4a4a18" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x2ae83e4a4a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2ae83e4a4d68"/>
        <function-ref name="abortRelease" scoped="" ref="0x2ae83e4e6020"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2ae83e4e61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2ae83e4e3c50" loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x2ae83e4e3c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ae83e4e1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2ae83e4e12e8" loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x2ae83e4e12e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ae83e4e1738"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2ae83e4e1a00" loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x2ae83e4e1a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ae83e4e1d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2ae83e4d1c10" loc="89:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2ae83e4d1c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e4d0020"/>
        <function-ref name="write" scoped="" ref="0x2ae83e4d01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2ae83e4e3020" loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x2ae83e4e3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ae83e4e3370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2ae83e4dc2e8" loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x2ae83e4dc2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e4dc638"/>
        <function-ref name="write" scoped="" ref="0x2ae83e4dc7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2ae83e4de2e8" loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x2ae83e4de2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e4de638"/>
        <function-ref name="write" scoped="" ref="0x2ae83e4de7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2ae83e4e6a88" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x2ae83e4e6a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ae83e4e6dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2ae83e4cec10" loc="93:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x2ae83e4cec10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e4cd020"/>
        <function-ref name="write" scoped="" ref="0x2ae83e4cd1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2ae83e4d0c10" loc="91:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x2ae83e4d0c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e4ce020"/>
        <function-ref name="write" scoped="" ref="0x2ae83e4ce1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2ae83e4d4470" loc="80:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x2ae83e4d4470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e4d47c0"/>
        <function-ref name="write" scoped="" ref="0x2ae83e4d4948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2ae83e4d2c10" loc="87:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x2ae83e4d2c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e4d1020"/>
        <function-ref name="write" scoped="" ref="0x2ae83e4d11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2ae83e4d7470" loc="76:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x2ae83e4d7470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e4d77c0"/>
        <function-ref name="write" scoped="" ref="0x2ae83e4d7948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2ae83e4cdc10" loc="97:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x2ae83e4cdc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2ae83e4cc5e8"/>
        <function-ref name="writeDone" scoped="" ref="0x2ae83e4cc770"/>
        <function-ref name="write" scoped="" ref="0x2ae83e4cc8f8"/>
        <function-ref name="beginRead" scoped="" ref="0x2ae83e4cca80"/>
        <function-ref name="readDone" scoped="" ref="0x2ae83e4ccc08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2ae83e4e6470" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x2ae83e4e6470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ae83e4e67c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2ae83e4df2e8" loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x2ae83e4df2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e4df638"/>
        <function-ref name="write" scoped="" ref="0x2ae83e4df7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2ae83e4db2e8" loc="68:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x2ae83e4db2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e4db638"/>
        <function-ref name="write" scoped="" ref="0x2ae83e4db7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2ae83e4d8c10" loc="75:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x2ae83e4d8c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e4d7020"/>
        <function-ref name="write" scoped="" ref="0x2ae83e4d71a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2ae83e4da470" loc="70:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x2ae83e4da470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e4da7c0"/>
        <function-ref name="write" scoped="" ref="0x2ae83e4da948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2ae83e4e5718" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x2ae83e4e5718"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ae83e4e5a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2ae83e4dac10" loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x2ae83e4dac10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e4d9020"/>
        <function-ref name="write" scoped="" ref="0x2ae83e4d91a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ae83e4a5db8" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2ae83e4a5db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ae83e4a4170"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ae83e4a42f8"/>
        <function-ref name="request" scoped="" ref="0x2ae83e4a4480"/>
        <function-ref name="granted" scoped="" ref="0x2ae83e4a4608"/>
        <function-ref name="isOwner" scoped="" ref="0x2ae83e4a4790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2ae83e4e0060" loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x2ae83e4e0060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ae83e4e03b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2ae83e4e0c90" loc="59:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x2ae83e4e0c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ae83e4df020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2ae83e4d2470" loc="86:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x2ae83e4d2470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e4d27c0"/>
        <function-ref name="write" scoped="" ref="0x2ae83e4d2948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2ae83e4d3c10" loc="85:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x2ae83e4d3c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e4d2020"/>
        <function-ref name="write" scoped="" ref="0x2ae83e4d21a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2ae83e4e3638" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x2ae83e4e3638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ae83e4e3988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2ae83e4d3470" loc="82:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2ae83e4d3470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e4d37c0"/>
        <function-ref name="write" scoped="" ref="0x2ae83e4d3948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2ae83e4ce470" loc="92:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x2ae83e4ce470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e4ce7c0"/>
        <function-ref name="write" scoped="" ref="0x2ae83e4ce948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2ae83e4d4c10" loc="81:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x2ae83e4d4c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e4d3020"/>
        <function-ref name="write" scoped="" ref="0x2ae83e4d31a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2ae83e4e5d30" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x2ae83e4e5d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ae83e4e40d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2ae83e4d5470" loc="78:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x2ae83e4d5470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e4d57c0"/>
        <function-ref name="write" scoped="" ref="0x2ae83e4d5948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2ae83e4e49b8" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x2ae83e4e49b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ae83e4e4d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2ae83e4d7c10" loc="77:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x2ae83e4d7c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ae83e4d5020"/>
        <function-ref name="write" scoped="" ref="0x2ae83e4d51a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2ae83e4e0678" loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x2ae83e4e0678"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ae83e4e09c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2ae83e4cb020" loc="98:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x2ae83e4cb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2ae83e4cb370"/>
        <function-ref name="writeDone" scoped="" ref="0x2ae83e4cb4f8"/>
        <function-ref name="write" scoped="" ref="0x2ae83e4cb680"/>
        <function-ref name="beginRead" scoped="" ref="0x2ae83e4cb808"/>
        <function-ref name="readDone" scoped="" ref="0x2ae83e4cb990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x2ae83e4ebb98" loc="46:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2ae83e4ebb98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2ae83e4ea020"/>
        <function-ref name="rand32" scoped="" ref="0x2ae83e4ea1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x2ae83e4e9b10" loc="45:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x2ae83e4e9b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ae83cd7fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ae83e4eb6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ae83e4efdb0" loc="44:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ae83e4efdb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ae83e4ec170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x2ae83e52da08" loc="48:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2ae83e52da08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2ae83e52dd58"/>
        <function-ref name="rand32" scoped="" ref="0x2ae83e52c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x2ae83e52e9f0" loc="47:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x2ae83e52e9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ae83cd7fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ae83e52d560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ae83e52e198" loc="46:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ae83e52e198"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ae83e52e4e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2ae83e4ed338" loc="67:/opt/tinyos-2.1.2/tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x2ae83e4ed338"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2ae83e4ed688"/>
        <function-ref name="toIdle" scoped="" ref="0x2ae83e4ed810"/>
        <function-ref name="isState" scoped="" ref="0x2ae83e4ed998"/>
        <function-ref name="isIdle" scoped="" ref="0x2ae83e4edb20"/>
        <function-ref name="requestState" scoped="" ref="0x2ae83e4edca8"/>
        <function-ref name="forceState" scoped="" ref="0x2ae83e4ede30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2ae83e517a40" loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2ae83e517a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ae83e517d90"/>
        <function-ref name="getPayload" scoped="" ref="0x2ae83e516020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ae83e5161a8"/>
        <function-ref name="cancel" scoped="" ref="0x2ae83e516330"/>
        <function-ref name="sendDone" scoped="" ref="0x2ae83e5164b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2ae83e51ad08" loc="40:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2ae83e51ad08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ae83e5170a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ae83e517228"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ae83e5173b0"/>
        <function-ref name="cancel" scoped="" ref="0x2ae83e517538"/>
        <function-ref name="sendDone" scoped="" ref="0x2ae83e5176c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2ae83e512750" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2ae83e512750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ae83e512aa0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ae83e512c28"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ae83e512db0"/>
        <function-ref name="cancel" scoped="" ref="0x2ae83e511020"/>
        <function-ref name="sendDone" scoped="" ref="0x2ae83e5111a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2ae83e513438" loc="40:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2ae83e513438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ae83e513788"/>
        <function-ref name="getPayload" scoped="" ref="0x2ae83e513910"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ae83e513a98"/>
        <function-ref name="cancel" scoped="" ref="0x2ae83e513c20"/>
        <function-ref name="sendDone" scoped="" ref="0x2ae83e513da8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x2ae83e5102a8" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2ae83e5102a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2ae83e5105f8"/>
        <function-ref name="rand32" scoped="" ref="0x2ae83e510780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ae83e512080" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ae83e512080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ae83e5123d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2ae83e510a70" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ae83e510a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2ae83e510dc0"/>
        <function-ref name="getHeader" scoped="" ref="0x2ae83e50f020"/>
        <function-ref name="getMetadata" scoped="" ref="0x2ae83e50f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x2ae83e511428" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x2ae83e511428"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2ae83e511778"/>
        <function-ref name="toIdle" scoped="" ref="0x2ae83e511900"/>
        <function-ref name="isState" scoped="" ref="0x2ae83e511a88"/>
        <function-ref name="isIdle" scoped="" ref="0x2ae83e511c10"/>
        <function-ref name="requestState" scoped="" ref="0x2ae83e511d98"/>
        <function-ref name="forceState" scoped="" ref="0x2ae83e510020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2ae83e514978" loc="67:/opt/tinyos-2.1.2/tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x2ae83e514978"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2ae83e514cc8"/>
        <function-ref name="toIdle" scoped="" ref="0x2ae83e514e50"/>
        <function-ref name="isState" scoped="" ref="0x2ae83e544020"/>
        <function-ref name="isIdle" scoped="" ref="0x2ae83e5441a8"/>
        <function-ref name="requestState" scoped="" ref="0x2ae83e544330"/>
        <function-ref name="forceState" scoped="" ref="0x2ae83e5444b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2ae83e53d560" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2ae83e53d560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ae83e53d8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ae83e541750" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2ae83e541750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ae83e541aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x2ae83e541e18" loc="43:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DuplicateReceive" scoped="" ref="0x2ae83e541e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ae83e53d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2ae83e539d30" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2ae83e539d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ae83e5380d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ae83e539628" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ae83e539628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ae83e539978"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ae83e53c958" loc="43:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2ae83e53c958"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ae83e53cca8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2ae83e5383c8" loc="50:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ae83e5383c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2ae83e538718"/>
        <function-ref name="getHeader" scoped="" ref="0x2ae83e5388a0"/>
        <function-ref name="getMetadata" scoped="" ref="0x2ae83e538a28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x2ae83e539060" loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DuplicateReceive" scoped="" ref="0x2ae83e539060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ae83e5393b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2ae83e552020" loc="75:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2ae83e552020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ae83e552370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2ae83e552670" loc="76:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2ae83e552670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ae83e5529c0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ae83e552b48"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ae83e552cd0"/>
        <function-ref name="cancel" scoped="" ref="0x2ae83e552e58"/>
        <function-ref name="sendDone" scoped="" ref="0x2ae83e597020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2ae83e556a40" loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2ae83e556a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ae83e556d90"/>
        <function-ref name="getPayload" scoped="" ref="0x2ae83e555020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ae83e5551a8"/>
        <function-ref name="cancel" scoped="" ref="0x2ae83e555330"/>
        <function-ref name="sendDone" scoped="" ref="0x2ae83e5554b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x2ae83e555db8" loc="68:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveSend" scoped="" ref="0x2ae83e555db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ae83e554170"/>
        <function-ref name="getPayload" scoped="" ref="0x2ae83e5542f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ae83e554480"/>
        <function-ref name="cancel" scoped="" ref="0x2ae83e554608"/>
        <function-ref name="sendDone" scoped="" ref="0x2ae83e554790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ae83e555748" loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2ae83e555748"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ae83e555a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ae83e53fe20" loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2ae83e53fe20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ae83e5561a8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ae83e556330"/>
        <function-ref name="request" scoped="" ref="0x2ae83e5564b8"/>
        <function-ref name="granted" scoped="" ref="0x2ae83e556640"/>
        <function-ref name="isOwner" scoped="" ref="0x2ae83e5567c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x2ae83e554ae8" loc="69:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveReceive" scoped="" ref="0x2ae83e554ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ae83e554e38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x2ae83e5531a8" loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BarePacket" scoped="" ref="0x2ae83e5531a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ae83e5534f8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ae83e553680"/>
        <function-ref name="getPayload" scoped="" ref="0x2ae83e553808"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ae83e553990"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ae83e553b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2ae83e58e528" loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2ae83e58e528"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ae83e58e878"/>
        <function-ref name="getPayload" scoped="" ref="0x2ae83e58ea00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ae83e58eb88"/>
        <function-ref name="cancel" scoped="" ref="0x2ae83e58ed10"/>
        <function-ref name="sendDone" scoped="" ref="0x2ae83e58d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2ae83e58d358" loc="59:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2ae83e58d358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ae83e58d6a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x2ae83e5a6ac0" loc="180:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantTask" scoped="" ref="0x2ae83e5a6ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ae83e5a6e10"/>
        <function-ref name="runTask" scoped="" ref="0x2ae83e5a5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2ae83e58d970" loc="60:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x2ae83e58d970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2ae83e58dcc0"/>
        <function-ref name="setNetwork" scoped="" ref="0x2ae83e58de48"/>
        <function-ref name="getRssi" scoped="" ref="0x2ae83e58c020"/>
        <function-ref name="getNetwork" scoped="" ref="0x2ae83e58c1a8"/>
        <function-ref name="getPower" scoped="" ref="0x2ae83e58c330"/>
        <function-ref name="getLqi" scoped="" ref="0x2ae83e58c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x2ae83e590490" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveSend" scoped="" ref="0x2ae83e590490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ae83e5907e0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ae83e590968"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ae83e590af0"/>
        <function-ref name="cancel" scoped="" ref="0x2ae83e590c78"/>
        <function-ref name="sendDone" scoped="" ref="0x2ae83e590e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2ae83e58b1c0" loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2ae83e58b1c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2ae83e58b510"/>
        <function-ref name="isEmpty" scoped="" ref="0x2ae83e58b698"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2ae83e58b820"/>
        <function-ref name="dequeue" scoped="" ref="0x2ae83e58b9a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2ae83e58c7a8" loc="61:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ae83e58c7a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2ae83e58caf8"/>
        <function-ref name="getHeader" scoped="" ref="0x2ae83e58cc80"/>
        <function-ref name="getMetadata" scoped="" ref="0x2ae83e58ce08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x2ae83e591dc8" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x2ae83e591dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ae83e590170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ae83e592428" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2ae83e592428"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ae83e592778"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ae83e592900"/>
        <function-ref name="request" scoped="" ref="0x2ae83e592a88"/>
        <function-ref name="granted" scoped="" ref="0x2ae83e592c10"/>
        <function-ref name="isOwner" scoped="" ref="0x2ae83e592d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x2ae83e591118" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x2ae83e591118"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ae83e591468"/>
        <function-ref name="getPayload" scoped="" ref="0x2ae83e5915f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ae83e591778"/>
        <function-ref name="cancel" scoped="" ref="0x2ae83e591900"/>
        <function-ref name="sendDone" scoped="" ref="0x2ae83e591a88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x2ae83e58f188" loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveReceive" scoped="" ref="0x2ae83e58f188"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ae83e58f4d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x2ae83e58f808" loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BarePacket" scoped="" ref="0x2ae83e58f808"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ae83e58fb58"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ae83e58fce0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ae83e58fe68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ae83e58e020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ae83e58e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ae83e5cec28" loc="44:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ae83e5cec28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ae83e5cd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2ae83e5cd2a8" loc="45:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x2ae83e5cd2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2ae83e5cd5f8"/>
        <function-ref name="isEmpty" scoped="" ref="0x2ae83e5cd780"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2ae83e5cd908"/>
        <function-ref name="dequeue" scoped="" ref="0x2ae83e5cda90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2ae83e5c3dc8" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2ae83e5c3dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ae83e5c2170"/>
        <function-ref name="stopDone" scoped="" ref="0x2ae83e5c22f8"/>
        <function-ref name="start" scoped="" ref="0x2ae83e5c2480"/>
        <function-ref name="stop" scoped="" ref="0x2ae83e5c2608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2ae83e5c1838" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2ae83e5c1838"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ae83e5c1b88"/>
        <function-ref name="getPayload" scoped="" ref="0x2ae83e5c1d10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ae83e5c0020"/>
        <function-ref name="cancel" scoped="" ref="0x2ae83e5c01a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2ae83e5c0330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2ae83e5c0668" loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2ae83e5c0668"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ae83e5c09b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2ae83e5c4080" loc="43:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2ae83e5c4080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ae83e5c43d0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ae83e5c4558"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ae83e5c46e0"/>
        <function-ref name="cancel" scoped="" ref="0x2ae83e5c4868"/>
        <function-ref name="sendDone" scoped="" ref="0x2ae83e5c49f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2ae83e5c3318" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2ae83e5c3318"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2ae83e5c3668"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2ae83e5c37f0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2ae83e5c3978"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2ae83e5c3b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x2ae83e5c2928" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendState" scoped="" ref="0x2ae83e5c2928"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2ae83e5c2c78"/>
        <function-ref name="toIdle" scoped="" ref="0x2ae83e5c2e00"/>
        <function-ref name="isState" scoped="" ref="0x2ae83e5c1020"/>
        <function-ref name="isIdle" scoped="" ref="0x2ae83e5c11a8"/>
        <function-ref name="requestState" scoped="" ref="0x2ae83e5c1330"/>
        <function-ref name="forceState" scoped="" ref="0x2ae83e5c14b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x2ae83e5c0d28" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x2ae83e5c0d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ae83e5bf0a0"/>
        <function-ref name="stopDone" scoped="" ref="0x2ae83e5bf228"/>
        <function-ref name="start" scoped="" ref="0x2ae83e5bf3b0"/>
        <function-ref name="stop" scoped="" ref="0x2ae83e5bf538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ae83e5c4c80" loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2ae83e5c4c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ae83e5c3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2ae83e5bc170" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2ae83e5bc170"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2ae83e5bc4c0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2ae83e5bc648"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2ae83e5bc7d0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2ae83e5bc958"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2ae83e5bed50" loc="67:/opt/tinyos-2.1.2/tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x2ae83e5bed50"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2ae83e5fc0d8"/>
        <function-ref name="toIdle" scoped="" ref="0x2ae83e5fc260"/>
        <function-ref name="isState" scoped="" ref="0x2ae83e5fc3e8"/>
        <function-ref name="isIdle" scoped="" ref="0x2ae83e5fc570"/>
        <function-ref name="requestState" scoped="" ref="0x2ae83e5fc6f8"/>
        <function-ref name="forceState" scoped="" ref="0x2ae83e5fc880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2ae83e5f6020" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2ae83e5f6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ae83e5f6370"/>
        <function-ref name="getPayload" scoped="" ref="0x2ae83e5f64f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ae83e5f6680"/>
        <function-ref name="cancel" scoped="" ref="0x2ae83e5f6808"/>
        <function-ref name="sendDone" scoped="" ref="0x2ae83e5f6990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2ae83e5fa5c8" loc="40:/opt/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2ae83e5fa5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ae83e5fa918"/>
        <function-ref name="getPayload" scoped="" ref="0x2ae83e5faaa0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ae83e5fac28"/>
        <function-ref name="cancel" scoped="" ref="0x2ae83e5fadb0"/>
        <function-ref name="sendDone" scoped="" ref="0x2ae83e5f7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2ae83e5f72d0" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x2ae83e5f72d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2ae83e5f7620"/>
        <function-ref name="setRetries" scoped="" ref="0x2ae83e5f77a8"/>
        <function-ref name="getRetries" scoped="" ref="0x2ae83e5f7930"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2ae83e5f7ab8"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2ae83e5f7c40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x2ae83e5f23c8" loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ae83e5f23c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2ae83e5f2718"/>
        <function-ref name="noAck" scoped="" ref="0x2ae83e5f28a0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2ae83e5f2a28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2ae83e5f5540" loc="40:/opt/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x2ae83e5f5540"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2ae83e5f5890"/>
        <function-ref name="setRetries" scoped="" ref="0x2ae83e5f5a18"/>
        <function-ref name="getRetries" scoped="" ref="0x2ae83e5f5ba0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2ae83e5f5d28"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2ae83e5f2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2ae83e61ccc8" loc="59:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2ae83e61ccc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ae83e61b0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2ae83e61c020" loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2ae83e61c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ae83e61c370"/>
        <function-ref name="getPayload" scoped="" ref="0x2ae83e61c4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ae83e61c680"/>
        <function-ref name="cancel" scoped="" ref="0x2ae83e61c808"/>
        <function-ref name="sendDone" scoped="" ref="0x2ae83e61c990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x2ae83e61aab0" loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x2ae83e61aab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x2ae83e61ae00"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2ae83e619020"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2ae83e6191a8"/>
        <function-ref name="syncDone" scoped="" ref="0x2ae83e619330"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x2ae83e6194b8"/>
        <function-ref name="setShortAddr" scoped="" ref="0x2ae83e619640"/>
        <function-ref name="setChannel" scoped="" ref="0x2ae83e6197c8"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x2ae83e619950"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2ae83e619ad8"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x2ae83e619c60"/>
        <function-ref name="getExtAddr" scoped="" ref="0x2ae83e619de8"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2ae83e618020"/>
        <function-ref name="sync" scoped="" ref="0x2ae83e6181a8"/>
        <function-ref name="getChannel" scoped="" ref="0x2ae83e618430"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2ae83e6185b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2ae83e61e020" loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x2ae83e61e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ae83d913458"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2ae83e61e370"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2ae83e61e4f8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2ae83e61e680"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2ae83e61e808"/>
        <function-ref name="setCca" scoped="" ref="0x2ae83e61e990"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2ae83e61eb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2ae83e61f400" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2ae83e61f400"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ae83d913458"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2ae83e61f750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x2ae83e6176a0" loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBackoff" scoped="" ref="0x2ae83e6176a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2ae83e6179f0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2ae83e617b78"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2ae83e617d00"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2ae83e616020"/>
        <function-ref name="setCca" scoped="" ref="0x2ae83e6161a8"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2ae83e616330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2ae83e6202a8" loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2ae83e6202a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ae83e6205f8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ae83e620780"/>
        <function-ref name="getPayload" scoped="" ref="0x2ae83e620908"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ae83e620a90"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ae83e620c18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2ae83e625980" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2ae83e625980"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ae83d913458"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ae83e625cd0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ae83e625e58"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ae83e624020"/>
        <function-ref name="cancel" scoped="" ref="0x2ae83e6241a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2ae83e624330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2ae83e622628" loc="50:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2ae83e622628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ae83d913458"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ae83e622978"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2ae83e61b368" loc="60:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x2ae83e61b368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2ae83e61b6b8"/>
        <function-ref name="setNetwork" scoped="" ref="0x2ae83e61b840"/>
        <function-ref name="getRssi" scoped="" ref="0x2ae83e61b9c8"/>
        <function-ref name="getNetwork" scoped="" ref="0x2ae83e61bb50"/>
        <function-ref name="getPower" scoped="" ref="0x2ae83e61bcd8"/>
        <function-ref name="getLqi" scoped="" ref="0x2ae83e61be60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x2ae83e6188d0" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2ae83e6188d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2ae83e618d20"/>
        <function-ref name="changed" scoped="" ref="0x2ae83e617020"/>
        <function-ref name="amGroup" scoped="" ref="0x2ae83e6171a8"/>
        <function-ref name="setAddress" scoped="" ref="0x2ae83e617330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2ae83e61a188" loc="61:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ae83e61a188"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2ae83e61a4d8"/>
        <function-ref name="getHeader" scoped="" ref="0x2ae83e61a660"/>
        <function-ref name="getMetadata" scoped="" ref="0x2ae83e61a7e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ae83e624ab0" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2ae83e624ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ae83d913458"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ae83e624e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2ae83e6152a8" loc="67:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2ae83e6152a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ae83e6155f8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ae83e615780"/>
        <function-ref name="led1On" scoped="" ref="0x2ae83e615908"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ae83e615a90"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ae83e615c18"/>
        <function-ref name="get" scoped="" ref="0x2ae83e615da0"/>
        <function-ref name="led1Off" scoped="" ref="0x2ae83e614020"/>
        <function-ref name="led2Off" scoped="" ref="0x2ae83e614640"/>
        <function-ref name="set" scoped="" ref="0x2ae83e6141a8"/>
        <function-ref name="led0On" scoped="" ref="0x2ae83e614330"/>
        <function-ref name="led2On" scoped="" ref="0x2ae83e6144b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2ae83e622c18" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2ae83e622c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ae83e621020"/>
        <function-ref name="source" scoped="" ref="0x2ae83e6211a8"/>
        <function-ref name="address" scoped="" ref="0x2ae83e621330"/>
        <function-ref name="destination" scoped="" ref="0x2ae83e6214b8"/>
        <function-ref name="setSource" scoped="" ref="0x2ae83e621640"/>
        <function-ref name="setDestination" scoped="" ref="0x2ae83e6217c8"/>
        <function-ref name="type" scoped="" ref="0x2ae83e621950"/>
        <function-ref name="setType" scoped="" ref="0x2ae83e621ad8"/>
        <function-ref name="isForMe" scoped="" ref="0x2ae83e621c60"/>
        <function-ref name="setGroup" scoped="" ref="0x2ae83e621de8"/>
        <function-ref name="localGroup" scoped="" ref="0x2ae83e620020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0x2ae83e616698" loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioResource" scoped="" ref="0x2ae83e616698"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ae83e6169e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ae83e616b70"/>
        <function-ref name="request" scoped="" ref="0x2ae83e616cf8"/>
        <function-ref name="granted" scoped="" ref="0x2ae83e616e80"/>
        <function-ref name="isOwner" scoped="" ref="0x2ae83e615030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2ae83e6b8758" loc="46:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2ae83e6b8758"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ae83e6b8aa8"/>
        <function-ref name="stopDone" scoped="" ref="0x2ae83e6b8c30"/>
        <function-ref name="start" scoped="" ref="0x2ae83e6b8db8"/>
        <function-ref name="stop" scoped="" ref="0x2ae83e6b5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2ae83e6b5798" loc="47:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2ae83e6b5798"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ae83d913458"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ae83e6b5ae8"/>
        <function-ref name="getPayload" scoped="" ref="0x2ae83e6b5c70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ae83e6b5df8"/>
        <function-ref name="cancel" scoped="" ref="0x2ae83e6b4020"/>
        <function-ref name="sendDone" scoped="" ref="0x2ae83e6b41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2ae83e6b3020" loc="49:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2ae83e6b3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ae83e6b3370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ae83e6b34f8"/>
        <function-ref name="getPayload" scoped="" ref="0x2ae83e6b3680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ae83e6b3808"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ae83e6b3990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ae83e6b4928" loc="48:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2ae83e6b4928"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ae83d913458"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ae83e6b4c78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2ae83e6b1c80" loc="53:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2ae83e6b1c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ae83e6b0020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ae83e6b01a8"/>
        <function-ref name="led1On" scoped="" ref="0x2ae83e6b0330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ae83e6b04b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ae83e6b0640"/>
        <function-ref name="get" scoped="" ref="0x2ae83e6b07c8"/>
        <function-ref name="led1Off" scoped="" ref="0x2ae83e6b0950"/>
        <function-ref name="led2Off" scoped="" ref="0x2ae83e6af020"/>
        <function-ref name="set" scoped="" ref="0x2ae83e6b0ad8"/>
        <function-ref name="led0On" scoped="" ref="0x2ae83e6b0c60"/>
        <function-ref name="led2On" scoped="" ref="0x2ae83e6b0de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2ae83e6b1348" loc="51:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ae83e6b1348"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2ae83e6b1698"/>
        <function-ref name="noAck" scoped="" ref="0x2ae83e6b1820"/>
        <function-ref name="wasAcked" scoped="" ref="0x2ae83e6b19a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2ae83e6b3c30" loc="50:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2ae83e6b3c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ae83e6b2020"/>
        <function-ref name="source" scoped="" ref="0x2ae83e6b21a8"/>
        <function-ref name="address" scoped="" ref="0x2ae83e6b2330"/>
        <function-ref name="destination" scoped="" ref="0x2ae83e6b24b8"/>
        <function-ref name="setSource" scoped="" ref="0x2ae83e6b2640"/>
        <function-ref name="setDestination" scoped="" ref="0x2ae83e6b27c8"/>
        <function-ref name="type" scoped="" ref="0x2ae83e6b2950"/>
        <function-ref name="setType" scoped="" ref="0x2ae83e6b2ad8"/>
        <function-ref name="isForMe" scoped="" ref="0x2ae83e6b2c60"/>
        <function-ref name="setGroup" scoped="" ref="0x2ae83e6b2de8"/>
        <function-ref name="localGroup" scoped="" ref="0x2ae83e6b1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2ae83e6ed308" loc="54:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2ae83e6ed308"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ae83e6ed658"/>
        <function-ref name="getPayload" scoped="" ref="0x2ae83e6ed7e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ae83e6ed968"/>
        <function-ref name="cancel" scoped="" ref="0x2ae83e6edaf0"/>
        <function-ref name="sendDone" scoped="" ref="0x2ae83e6edc78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2ae83e6ec020" loc="55:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2ae83e6ec020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ae83e6ec370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2ae83e6ac460" loc="47:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2ae83e6ac460"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ae83d913458"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ae83e6ac7d0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ae83e6ac958"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ae83e6acae0"/>
        <function-ref name="cancel" scoped="" ref="0x2ae83e6acc68"/>
        <function-ref name="sendDone" scoped="" ref="0x2ae83e6acdf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2ae83e6f0d20" loc="50:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2ae83e6f0d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ae83e6ee0a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ae83e6ee228"/>
        <function-ref name="getPayload" scoped="" ref="0x2ae83e6ee3b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ae83e6ee538"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ae83e6ee6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ae83e6f1180" loc="48:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2ae83e6f1180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ae83d913458"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ae83e6f14f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2ae83e6ee908" loc="51:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ae83e6ee908"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2ae83e6eec58"/>
        <function-ref name="noAck" scoped="" ref="0x2ae83e6eede0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2ae83e6ed020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2ae83e6f1738" loc="49:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2ae83e6f1738"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ae83e6f1a88"/>
        <function-ref name="source" scoped="" ref="0x2ae83e6f1c10"/>
        <function-ref name="address" scoped="" ref="0x2ae83e6f1d98"/>
        <function-ref name="destination" scoped="" ref="0x2ae83e6f0020"/>
        <function-ref name="setSource" scoped="" ref="0x2ae83e6f01a8"/>
        <function-ref name="setDestination" scoped="" ref="0x2ae83e6f0330"/>
        <function-ref name="type" scoped="" ref="0x2ae83e6f04b8"/>
        <function-ref name="setType" scoped="" ref="0x2ae83e6f0640"/>
        <function-ref name="isForMe" scoped="" ref="0x2ae83e6f07c8"/>
        <function-ref name="setGroup" scoped="" ref="0x2ae83e6f0950"/>
        <function-ref name="localGroup" scoped="" ref="0x2ae83e6f0ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2ae83e6e8728" loc="50:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2ae83e6e8728"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ae83e6e8a78"/>
        <function-ref name="stopDone" scoped="" ref="0x2ae83e6e8c00"/>
        <function-ref name="start" scoped="" ref="0x2ae83e6e8d88"/>
        <function-ref name="stop" scoped="" ref="0x2ae83e6e7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2ae83e6e6208" loc="52:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2ae83e6e6208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2ae83d924020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ae83e6e6558"/>
        <function-ref name="getPayload" scoped="" ref="0x2ae83e6e66e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ae83e6e6868"/>
        <function-ref name="cancel" scoped="" ref="0x2ae83e6e69f0"/>
        <function-ref name="sendDone" scoped="" ref="0x2ae83e6e6b78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ae83e6e8110" loc="49:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ae83e6e8110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ae83e6e8460"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ae83e6e7760" loc="51:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2ae83e6e7760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2ae83d924020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ae83e6e7ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2ae83e6e48f8" loc="56:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2ae83e6e48f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ae83e6e4c48"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ae83e6e4dd0"/>
        <function-ref name="led1On" scoped="" ref="0x2ae83e6e3020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ae83e6e31a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ae83e6e3330"/>
        <function-ref name="get" scoped="" ref="0x2ae83e6e34b8"/>
        <function-ref name="led1Off" scoped="" ref="0x2ae83e6e3640"/>
        <function-ref name="led2Off" scoped="" ref="0x2ae83e6e3c60"/>
        <function-ref name="set" scoped="" ref="0x2ae83e6e37c8"/>
        <function-ref name="led0On" scoped="" ref="0x2ae83e6e3950"/>
        <function-ref name="led2On" scoped="" ref="0x2ae83e6e3ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x2ae83e6e4020" loc="55:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialPacketInfo" scoped="" ref="0x2ae83e6e4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2ae83d924020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2ae83e6e4370"/>
        <function-ref name="offset" scoped="" ref="0x2ae83e6e44f8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2ae83e6e4680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2ae83e72bcf8" loc="66:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2ae83e72bcf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ae83e7280a0"/>
        <function-ref name="stopDone" scoped="" ref="0x2ae83e728228"/>
        <function-ref name="start" scoped="" ref="0x2ae83e7283b0"/>
        <function-ref name="stop" scoped="" ref="0x2ae83e728538"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x2ae83e75f830" loc="332:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDoneTask" scoped="" ref="0x2ae83e75f830"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ae83e75fb80"/>
        <function-ref name="runTask" scoped="" ref="0x2ae83e75fd08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x2ae83e717398" loc="74:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x2ae83e717398"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ae83e7176e8"/>
        <function-ref name="stop" scoped="" ref="0x2ae83e717870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x2ae83e748d70" loc="191:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RunTx" scoped="" ref="0x2ae83e748d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ae83e7470f0"/>
        <function-ref name="runTask" scoped="" ref="0x2ae83e747278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ae83e72b6e0" loc="65:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ae83e72b6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ae83e72ba30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x2ae83e714e40" loc="75:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFlush" scoped="" ref="0x2ae83e714e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x2ae83e7161c0"/>
        <function-ref name="flush" scoped="" ref="0x2ae83e716348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x2ae83e761020" loc="322:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDoneTask" scoped="" ref="0x2ae83e761020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ae83e761370"/>
        <function-ref name="runTask" scoped="" ref="0x2ae83e7614f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x2ae83e719b38" loc="72:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x2ae83e719b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x2ae83e71e020"/>
        <function-ref name="resetSend" scoped="" ref="0x2ae83e71e1a8"/>
        <function-ref name="dataReceived" scoped="" ref="0x2ae83e71e330"/>
        <function-ref name="resetReceive" scoped="" ref="0x2ae83e71e4b8"/>
        <function-ref name="putData" scoped="" ref="0x2ae83e71e640"/>
        <function-ref name="putDone" scoped="" ref="0x2ae83e71e7c8"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x2ae83e71e950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2ae83e71ebc8" loc="73:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2ae83e71ebc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ae83e71d020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ae83e71d1a8"/>
        <function-ref name="led1On" scoped="" ref="0x2ae83e71d330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ae83e71d4b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ae83e71d640"/>
        <function-ref name="get" scoped="" ref="0x2ae83e71d7c8"/>
        <function-ref name="led1Off" scoped="" ref="0x2ae83e71d950"/>
        <function-ref name="led2Off" scoped="" ref="0x2ae83e717020"/>
        <function-ref name="set" scoped="" ref="0x2ae83e71dad8"/>
        <function-ref name="led0On" scoped="" ref="0x2ae83e71dc60"/>
        <function-ref name="led2On" scoped="" ref="0x2ae83e71dde8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x2ae83e75b918" loc="341:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x2ae83e75b918"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ae83e75bc68"/>
        <function-ref name="runTask" scoped="" ref="0x2ae83e75bdf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x2ae83e722898" loc="67:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x2ae83e722898"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x2ae83e722be8"/>
        <function-ref name="nextByte" scoped="" ref="0x2ae83e722d70"/>
        <function-ref name="startSend" scoped="" ref="0x2ae83e727020"/>
        <function-ref name="sendCompleted" scoped="" ref="0x2ae83e7271a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x2ae83e71fb48" loc="68:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2ae83e71fb48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x2ae83e726020"/>
        <function-ref name="byteReceived" scoped="" ref="0x2ae83e7261a8"/>
        <function-ref name="endPacket" scoped="" ref="0x2ae83e726330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x2ae83e822100" loc="275:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveTask" scoped="" ref="0x2ae83e822100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ae83e822450"/>
        <function-ref name="runTask" scoped="" ref="0x2ae83e8225d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2ae83e827020" loc="51:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2ae83e827020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2ae83d924020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ae83e827390"/>
        <function-ref name="getPayload" scoped="" ref="0x2ae83e827518"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ae83e8276a0"/>
        <function-ref name="cancel" scoped="" ref="0x2ae83e827828"/>
        <function-ref name="sendDone" scoped="" ref="0x2ae83e8279b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x2ae83e8228a0" loc="158:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalSendDone" scoped="" ref="0x2ae83e8228a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ae83e822bf0"/>
        <function-ref name="runTask" scoped="" ref="0x2ae83e822d78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ae83e828868" loc="50:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2ae83e828868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2ae83d924020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ae83e828bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x2ae83e827db8" loc="54:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketInfo" scoped="" ref="0x2ae83e827db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2ae83d924020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2ae83e825170"/>
        <function-ref name="offset" scoped="" ref="0x2ae83e8252f8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2ae83e825480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2ae83e824a50" loc="57:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2ae83e824a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ae83e824da0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ae83e823020"/>
        <function-ref name="led1On" scoped="" ref="0x2ae83e8231a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ae83e823330"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ae83e8234b8"/>
        <function-ref name="get" scoped="" ref="0x2ae83e823640"/>
        <function-ref name="led1Off" scoped="" ref="0x2ae83e8237c8"/>
        <function-ref name="led2On" scoped="" ref="0x2ae83e823de8"/>
        <function-ref name="set" scoped="" ref="0x2ae83e823ad8"/>
        <function-ref name="led2Off" scoped="" ref="0x2ae83e823950"/>
        <function-ref name="led0On" scoped="" ref="0x2ae83e823c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x2ae83e824020" loc="56:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x2ae83e824020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x2ae83e824370"/>
        <function-ref name="nextByte" scoped="" ref="0x2ae83e8244f8"/>
        <function-ref name="startSend" scoped="" ref="0x2ae83e824680"/>
        <function-ref name="sendCompleted" scoped="" ref="0x2ae83e824808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x2ae83e8256c8" loc="55:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2ae83e8256c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x2ae83e825a18"/>
        <function-ref name="byteReceived" scoped="" ref="0x2ae83e825ba0"/>
        <function-ref name="endPacket" scoped="" ref="0x2ae83e825d28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x2ae83e861448" loc="50:/opt/tinyos-2.1.2/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x2ae83e861448"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ae83e861798"/>
        <function-ref name="receivedByte" scoped="" ref="0x2ae83e861920"/>
        <function-ref name="receive" scoped="" ref="0x2ae83e861aa8"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2ae83e861c30"/>
        <function-ref name="receiveDone" scoped="" ref="0x2ae83e861db8"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2ae83e81c020"/>
        <function-ref name="sendDone" scoped="" ref="0x2ae83e81c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x2ae83e820b30" loc="48:/opt/tinyos-2.1.2/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x2ae83e820b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x2ae83e820e80"/>
        <function-ref name="resetSend" scoped="" ref="0x2ae83e81d030"/>
        <function-ref name="dataReceived" scoped="" ref="0x2ae83e81d1b8"/>
        <function-ref name="resetReceive" scoped="" ref="0x2ae83e81d340"/>
        <function-ref name="putData" scoped="" ref="0x2ae83e81d4c8"/>
        <function-ref name="putDone" scoped="" ref="0x2ae83e81d650"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x2ae83e81d7d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2ae83e81c420" loc="51:/opt/tinyos-2.1.2/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2ae83e81c420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ae83e81c770"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ae83e81c8f8"/>
        <function-ref name="led1On" scoped="" ref="0x2ae83e81ca80"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ae83e81cc08"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ae83e81cd90"/>
        <function-ref name="get" scoped="" ref="0x2ae83e81b020"/>
        <function-ref name="led1Off" scoped="" ref="0x2ae83e81b1a8"/>
        <function-ref name="led2Off" scoped="" ref="0x2ae83e81b7c8"/>
        <function-ref name="set" scoped="" ref="0x2ae83e81b330"/>
        <function-ref name="led0On" scoped="" ref="0x2ae83e81b4b8"/>
        <function-ref name="led2On" scoped="" ref="0x2ae83e81b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2ae83e841290" loc="42:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x2ae83e841290"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ae83e8415e0"/>
        <function-ref name="receive" scoped="" ref="0x2ae83e841768"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2ae83e8480c0" loc="41:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x2ae83e8480c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ae83e848410"/>
        <function-ref name="receivedByte" scoped="" ref="0x2ae83e848598"/>
        <function-ref name="receive" scoped="" ref="0x2ae83e848720"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2ae83e8488a8"/>
        <function-ref name="receiveDone" scoped="" ref="0x2ae83e848a30"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2ae83e848bb8"/>
        <function-ref name="sendDone" scoped="" ref="0x2ae83e848d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2ae83e81f8b0" loc="40:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2ae83e81f8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ae83e81fc00"/>
        <function-ref name="stop" scoped="" ref="0x2ae83e81fd88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2ae83e845af0" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x2ae83e845af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ae83e845e40"/>
        <function-ref name="receive" scoped="" ref="0x2ae83e892020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2ae83e892310" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x2ae83e892310"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ae83e892660"/>
        <function-ref name="receivedByte" scoped="" ref="0x2ae83e8927e8"/>
        <function-ref name="receive" scoped="" ref="0x2ae83e892970"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2ae83e892af8"/>
        <function-ref name="receiveDone" scoped="" ref="0x2ae83e892c80"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2ae83e892e08"/>
        <function-ref name="sendDone" scoped="" ref="0x2ae83e891020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2ae83e891598" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2ae83e891598"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ae83d6eb588"/>
            <typename><typedef-ref name="TMicro" ref="0x2ae83d6eb8e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ae83cd80608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ae83e8903a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ae83e890cb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ae83e890830"/>
        <function-ref name="overflow" scoped="" ref="0x2ae83e88e190"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2ae83e845338" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2ae83e845338"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ae83e845688"/>
        <function-ref name="stop" scoped="" ref="0x2ae83e845810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2ae83e88ce58" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x2ae83e88ce58"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ae83e89d1e8"/>
        <function-ref name="receive" scoped="" ref="0x2ae83e89d370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartTxControl" ref="0x2ae83e89c5f8" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartTxControl" scoped="" ref="0x2ae83e89c5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ae83e89c948"/>
        <function-ref name="stop" scoped="" ref="0x2ae83e89cad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ae83e88c120" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ae83e88c120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ae83e88c470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2ae83e89d5f8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x2ae83e89d5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ae83e89d948"/>
        <function-ref name="receivedByte" scoped="" ref="0x2ae83e89dad0"/>
        <function-ref name="receive" scoped="" ref="0x2ae83e89dc58"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2ae83e89dde0"/>
        <function-ref name="receiveDone" scoped="" ref="0x2ae83e89c020"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2ae83e89c1a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2ae83e89c330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2ae83e899c60" loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2ae83e899c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ae83d6eb588"/>
            <typename><typedef-ref name="TMicro" ref="0x2ae83d6eb8e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ae83cd80608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ae83e8989f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ae83e897330"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ae83e898e78"/>
        <function-ref name="overflow" scoped="" ref="0x2ae83e8977b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUart" ref="0x2ae83e89a5c0" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart" scoped="" ref="0x2ae83e89a5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2ae83e89a910"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2ae83e89aa98"/>
        <function-ref name="rxDone" scoped="" ref="0x2ae83e89ac20"/>
        <function-ref name="txDone" scoped="" ref="0x2ae83e89ada8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2ae83e899020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2ae83e8991a8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2ae83e899330"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2ae83e8994b8"/>
        <function-ref name="tx" scoped="" ref="0x2ae83e899640"/>
        <function-ref name="rx" scoped="" ref="0x2ae83e8997c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2ae83e88c6f8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2ae83e88c6f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ae83e88ca48"/>
        <function-ref name="stop" scoped="" ref="0x2ae83e88cbd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartRxControl" ref="0x2ae83e89cd98" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartRxControl" scoped="" ref="0x2ae83e89cd98"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ae83e89a170"/>
        <function-ref name="stop" scoped="" ref="0x2ae83e89a2f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x2ae83e8ce860" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x2ae83e8ce860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2ae83e8cebb0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2ae83e8ced38"/>
        <function-ref name="rxDone" scoped="" ref="0x2ae83e8cd020"/>
        <function-ref name="txDone" scoped="" ref="0x2ae83e8cd1a8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2ae83e8cd330"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2ae83e8cd4b8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2ae83e8cd640"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2ae83e8cd7c8"/>
        <function-ref name="tx" scoped="" ref="0x2ae83e8cd950"/>
        <function-ref name="rx" scoped="" ref="0x2ae83e8cdad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x2ae83e8cb020" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x2ae83e8cb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2ae83e8cb370"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2ae83e8cb4f8"/>
        <function-ref name="rxDone" scoped="" ref="0x2ae83e8cb680"/>
        <function-ref name="txDone" scoped="" ref="0x2ae83e8cb808"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2ae83e8cb990"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2ae83e8cbb18"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2ae83e8cbca0"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2ae83e8cbe28"/>
        <function-ref name="tx" scoped="" ref="0x2ae83e8ca020"/>
        <function-ref name="rx" scoped="" ref="0x2ae83e8ca1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x2ae83e8ce020" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x2ae83e8ce020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ae83e8ce370"/>
        <function-ref name="stop" scoped="" ref="0x2ae83e8ce4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x2ae83e8cde58" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x2ae83e8cde58"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ae83e8cc1e8"/>
        <function-ref name="stop" scoped="" ref="0x2ae83e8cc370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x2ae83e8cc6f0" loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x2ae83e8cc6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ae83e8cca40"/>
        <function-ref name="stop" scoped="" ref="0x2ae83e8ccbc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x2ae83e8cf700" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x2ae83e8cf700"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ae83e8cfa50"/>
        <function-ref name="stop" scoped="" ref="0x2ae83e8cfbd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0Init" ref="0x2ae83e8cae38" loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0Init" scoped="" ref="0x2ae83e8cae38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ae83e8c71c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x2ae83e8c66d8" loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x2ae83e8c66d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2ae83e8c6a28"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2ae83e8c6bb0"/>
        <function-ref name="rxDone" scoped="" ref="0x2ae83e8c6d38"/>
        <function-ref name="txDone" scoped="" ref="0x2ae83e8c4020"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2ae83e8c41a8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2ae83e8c4330"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2ae83e8c44b8"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2ae83e8c4640"/>
        <function-ref name="tx" scoped="" ref="0x2ae83e8c47c8"/>
        <function-ref name="rx" scoped="" ref="0x2ae83e8c4950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Init" ref="0x2ae83e8c4ca8" loc="85:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Init" scoped="" ref="0x2ae83e8c4ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ae83e8c3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x2ae83e8c2550" loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x2ae83e8c2550"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2ae83e8c28a0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2ae83e8c2a28"/>
        <function-ref name="rxDone" scoped="" ref="0x2ae83e8c2bb0"/>
        <function-ref name="txDone" scoped="" ref="0x2ae83e8c2d38"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2ae83e8c1020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2ae83e8c11a8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2ae83e8c1330"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2ae83e8c14b8"/>
        <function-ref name="tx" scoped="" ref="0x2ae83e8c1640"/>
        <function-ref name="rx" scoped="" ref="0x2ae83e8c17c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x2ae83e8c7e18" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x2ae83e8c7e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ae83e8c61a8"/>
        <function-ref name="stop" scoped="" ref="0x2ae83e8c6330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x2ae83e8c33e0" loc="86:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x2ae83e8c33e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ae83e8c3730"/>
        <function-ref name="stop" scoped="" ref="0x2ae83e8c38b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x2ae83e8c3c78" loc="87:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x2ae83e8c3c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ae83e8c2020"/>
        <function-ref name="stop" scoped="" ref="0x2ae83e8c21a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x2ae83e8c1ae8" loc="90:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2ae83e8c1ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2ae83e8c1e38"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2ae83e8c0020"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2ae83e8c01a8"/>
        <function-ref name="actualMicro" scoped="" ref="0x2ae83e8c0330"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2ae83e8c04b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x2ae83e8c07c8" loc="91:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2ae83e8c07c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2ae83e8c0b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x2ae83e8c7580" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x2ae83e8c7580"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ae83e8c78d0"/>
        <function-ref name="stop" scoped="" ref="0x2ae83e8c7a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2ae83e95d020" loc="24:/opt/tinyos-2.1.2/tos/platforms/mica/CounterMicro32C.nc">
      <component-ref qname="CounterMicro32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2ae83e95d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ae83d6eb588"/>
            <typename><typedef-ref name="TMicro" ref="0x2ae83d6eb8e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ae83cd80608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ae83e95dd70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ae83e95c6b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ae83e95c230"/>
        <function-ref name="overflow" scoped="" ref="0x2ae83e95cb40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2ae83e95bd30" loc="24:/opt/tinyos-2.1.2/tos/platforms/mica/CounterThree16C.nc">
      <component-ref qname="CounterThree16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2ae83e95bd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ae83d6eb588"/>
            <typename><typedef-ref name="TThree" ref="0x2ae83d722aa0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ae83cd7fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ae83e957ac0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ae83e9564a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ae83e956020"/>
        <function-ref name="overflow" scoped="" ref="0x2ae83e956930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2ae83e94eaa8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2ae83e94eaa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2ae83e94edf8"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x2ae83e94d020"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2ae83e94d1a8"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x2ae83e94d330"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2ae83e94d4b8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2ae83e94d640"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x2ae83e94d7c8"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x2ae83e94d950"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x2ae83e94dad8"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x2ae83e94dc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2ae83e94c190" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2ae83e94c190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ae83cd7fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2ae83e948310"/>
        <function-ref name="test" scoped="" ref="0x2ae83e949998"/>
        <function-ref name="get" scoped="" ref="0x2ae83e94cd10"/>
        <function-ref name="captured" scoped="" ref="0x2ae83e94a6d0"/>
        <function-ref name="reset" scoped="" ref="0x2ae83e94aba8"/>
        <function-ref name="isOn" scoped="" ref="0x2ae83e949e20"/>
        <function-ref name="set" scoped="" ref="0x2ae83e94a1f8"/>
        <function-ref name="start" scoped="" ref="0x2ae83e949088"/>
        <function-ref name="stop" scoped="" ref="0x2ae83e949510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2ae83e947020" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2ae83e947020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ae83cd7fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2ae83e9447a8"/>
        <function-ref name="fired" scoped="" ref="0x2ae83e945560"/>
        <function-ref name="get" scoped="" ref="0x2ae83e947ba0"/>
        <function-ref name="reset" scoped="" ref="0x2ae83e9459e8"/>
        <function-ref name="isOn" scoped="" ref="0x2ae83e944c30"/>
        <function-ref name="set" scoped="" ref="0x2ae83e945088"/>
        <function-ref name="start" scoped="" ref="0x2ae83e945e70"/>
        <function-ref name="stop" scoped="" ref="0x2ae83e944320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2ae83e9559a0" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2ae83e9559a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ae83cd7fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2ae83e94fb80"/>
        <function-ref name="test" scoped="" ref="0x2ae83e94f270"/>
        <function-ref name="get" scoped="" ref="0x2ae83e952560"/>
        <function-ref name="setScale" scoped="" ref="0x2ae83e94e088"/>
        <function-ref name="getScale" scoped="" ref="0x2ae83e94e560"/>
        <function-ref name="reset" scoped="" ref="0x2ae83e9514a8"/>
        <function-ref name="overflow" scoped="" ref="0x2ae83e951020"/>
        <function-ref name="isOn" scoped="" ref="0x2ae83e94f6f8"/>
        <function-ref name="set" scoped="" ref="0x2ae83e9529e8"/>
        <function-ref name="start" scoped="" ref="0x2ae83e951930"/>
        <function-ref name="stop" scoped="" ref="0x2ae83e951db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2ae83e93bc90" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2ae83e93bc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2ae83e93a020"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x2ae83e93a1a8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2ae83e93a330"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x2ae83e93a4b8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2ae83e93a640"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2ae83e93a7c8"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x2ae83e93a950"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x2ae83e93aad8"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x2ae83e93ac60"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x2ae83e93ade8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x2ae83e98bc48" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x2ae83e98bc48"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ae83cd7fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2ae83e9874a8"/>
        <function-ref name="fired" scoped="" ref="0x2ae83e9891d0"/>
        <function-ref name="get" scoped="" ref="0x2ae83e98a820"/>
        <function-ref name="reset" scoped="" ref="0x2ae83e989658"/>
        <function-ref name="isOn" scoped="" ref="0x2ae83e987930"/>
        <function-ref name="set" scoped="" ref="0x2ae83e98aca8"/>
        <function-ref name="start" scoped="" ref="0x2ae83e989ae0"/>
        <function-ref name="stop" scoped="" ref="0x2ae83e987020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2ae83e98f350" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2ae83e98f350"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ae83cd7fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2ae83e98b580"/>
        <function-ref name="test" scoped="" ref="0x2ae83e98dc20"/>
        <function-ref name="get" scoped="" ref="0x2ae83e98e020"/>
        <function-ref name="captured" scoped="" ref="0x2ae83e98e980"/>
        <function-ref name="reset" scoped="" ref="0x2ae83e98ee58"/>
        <function-ref name="isOn" scoped="" ref="0x2ae83e98b0f8"/>
        <function-ref name="set" scoped="" ref="0x2ae83e98e4a8"/>
        <function-ref name="start" scoped="" ref="0x2ae83e98d310"/>
        <function-ref name="stop" scoped="" ref="0x2ae83e98d798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x2ae83e986020" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x2ae83e986020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ae83cd7fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2ae83e9847a8"/>
        <function-ref name="fired" scoped="" ref="0x2ae83e985560"/>
        <function-ref name="get" scoped="" ref="0x2ae83e986ba0"/>
        <function-ref name="reset" scoped="" ref="0x2ae83e9859e8"/>
        <function-ref name="isOn" scoped="" ref="0x2ae83e984c30"/>
        <function-ref name="set" scoped="" ref="0x2ae83e985088"/>
        <function-ref name="start" scoped="" ref="0x2ae83e985e70"/>
        <function-ref name="stop" scoped="" ref="0x2ae83e984320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x2ae83e982360" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x2ae83e982360"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ae83cd7fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2ae83e980c20"/>
        <function-ref name="fired" scoped="" ref="0x2ae83e981980"/>
        <function-ref name="get" scoped="" ref="0x2ae83e981020"/>
        <function-ref name="reset" scoped="" ref="0x2ae83e981e08"/>
        <function-ref name="isOn" scoped="" ref="0x2ae83e97e0f8"/>
        <function-ref name="set" scoped="" ref="0x2ae83e9814a8"/>
        <function-ref name="start" scoped="" ref="0x2ae83e980310"/>
        <function-ref name="stop" scoped="" ref="0x2ae83e980798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2ae83e942ca0" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2ae83e942ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ae83cd7fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2ae83e93ddb8"/>
        <function-ref name="test" scoped="" ref="0x2ae83e93d4a8"/>
        <function-ref name="get" scoped="" ref="0x2ae83e93f858"/>
        <function-ref name="setScale" scoped="" ref="0x2ae83e93b270"/>
        <function-ref name="getScale" scoped="" ref="0x2ae83e93b748"/>
        <function-ref name="reset" scoped="" ref="0x2ae83e93e6c0"/>
        <function-ref name="overflow" scoped="" ref="0x2ae83e93e238"/>
        <function-ref name="isOn" scoped="" ref="0x2ae83e93d930"/>
        <function-ref name="set" scoped="" ref="0x2ae83e93fce0"/>
        <function-ref name="start" scoped="" ref="0x2ae83e93eb48"/>
        <function-ref name="stop" scoped="" ref="0x2ae83e93d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ae83ea00940" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ae83ea00940"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x2ae83d666388"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x2ae83d666388"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ae83ea00c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2ae83e9fe098" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2ae83e9fe098"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ae83cd7fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2ae83e9fb270"/>
        <function-ref name="test" scoped="" ref="0x2ae83e9fc930"/>
        <function-ref name="get" scoped="" ref="0x2ae83e9fec18"/>
        <function-ref name="setScale" scoped="" ref="0x2ae83e9fb6f8"/>
        <function-ref name="getScale" scoped="" ref="0x2ae83e9fbbd0"/>
        <function-ref name="reset" scoped="" ref="0x2ae83e9fda58"/>
        <function-ref name="overflow" scoped="" ref="0x2ae83e9fd5d0"/>
        <function-ref name="isOn" scoped="" ref="0x2ae83e9fcdb8"/>
        <function-ref name="set" scoped="" ref="0x2ae83e9fd0f8"/>
        <function-ref name="start" scoped="" ref="0x2ae83e9fc020"/>
        <function-ref name="stop" scoped="" ref="0x2ae83e9fc4a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2ae83ea02950" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2ae83ea02950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ae83d6eb588"/>
            <typename><typedef-ref name="TThree" ref="0x2ae83d722aa0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ae83cd7fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ae83e9f7730"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ae83e9f5088"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ae83e9f7bb8"/>
        <function-ref name="overflow" scoped="" ref="0x2ae83e9f5510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2ae83e9f5a70" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2ae83e9f5a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ae83cd7fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2ae83e9f1b80"/>
        <function-ref name="test" scoped="" ref="0x2ae83e9f1270"/>
        <function-ref name="get" scoped="" ref="0x2ae83e9f4658"/>
        <function-ref name="setScale" scoped="" ref="0x2ae83e9f0088"/>
        <function-ref name="getScale" scoped="" ref="0x2ae83e9f0560"/>
        <function-ref name="reset" scoped="" ref="0x2ae83e9f34a8"/>
        <function-ref name="overflow" scoped="" ref="0x2ae83e9f3020"/>
        <function-ref name="isOn" scoped="" ref="0x2ae83e9f16f8"/>
        <function-ref name="set" scoped="" ref="0x2ae83e9f4ae0"/>
        <function-ref name="start" scoped="" ref="0x2ae83e9f3930"/>
        <function-ref name="stop" scoped="" ref="0x2ae83e9f3db8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x2ae83e9ea7f8" loc="63:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x2ae83e9ea7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ae83d6eb588"/>
            <typename><typedef-ref name="TThree" ref="0x2ae83d722aa0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ae83cd7fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ae83e9e8578"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ae83e9e7020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ae83e9e8a00"/>
        <function-ref name="overflow" scoped="" ref="0x2ae83e9e74a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2ae83e9ec610" loc="62:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2ae83e9ec610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ae83d6eb588"/>
            <typename><typedef-ref name="TMicro" ref="0x2ae83d6eb8e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ae83cd80608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ae83e9eb3a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ae83e9ebcb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ae83e9eb830"/>
        <function-ref name="overflow" scoped="" ref="0x2ae83e9ea190"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x2ae83ea352b8" loc="47:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Info" scoped="" ref="0x2ae83ea352b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2ae83ea35608"/>
        <function-ref name="offset" scoped="" ref="0x2ae83ea35790"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2ae83ea35918"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Init.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2ae83d7688a8" loc="62:/opt/tinyos-2.1.2/tos/interfaces/Init.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ae83d6721a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x2ae83d766580" loc="60:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x2ae83d76d810" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ae83cd7fb98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ae83cd80608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x2ae83d76d5a0" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ae83cd80608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x2ae83d76f020" loc="31:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ae83cd7fb98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x2ae83d76fa18" loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ae83cd80608"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ae83cd80608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2ae83d76f7a8" loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ae83cd80608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x2ae83d76e4d0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ae83cd80608"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ae83cd80608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2ae83d76e260" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ae83cd80608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x2ae83d76ed18" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x2ae83d786dc0" loc="44:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x2ae83d7854c8" loc="45:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ae83d65f9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x2ae83d786070" loc="42:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x2ae83d784290" loc="47:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ae83d65f9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2ae83d786710" loc="43:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ae83d65f9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x2ae83d785b80" loc="46:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2ae83d787328" loc="40:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x2ae83d787998" loc="41:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2ae83d661968" loc="57:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x2ae83d66d878" loc="72:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x2ae83d66d0d8" loc="65:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ae83d65f9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x2ae83d66f608" loc="67:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ae83d6721a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x2ae83d66fdf8" loc="75:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x2ae83d727ca0" loc="76:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/opt/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x2ae83d74a328" loc="62:/opt/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x2ae83d6cc940"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x2ae83d740e60" loc="52:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x2ae83d92b290" loc="113:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ae83d6721a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2ae83d92b020" loc="113:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ae83d6721a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x2ae83d929690" loc="138:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ae83d6721a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2ae83d929420" loc="138:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ae83d6721a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2ae83d92c530" loc="104:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ae83d6721a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2ae83d92ba78" loc="130:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ae83d6721a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x2ae83d975a00" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
              <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ae83d975100" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x2ae83d975428" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ae83d975738" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x2ae83d99dc60" loc="177:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2ae83d913808"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2ae83d99d9f0" loc="177:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x2ae83d991d18" loc="88:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2ae83d913bc0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2ae83d991aa8" loc="88:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x2ae83d97d290" loc="68:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2ae83d913bc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x2ae83d97dce8" loc="78:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2ae83d913bc0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2ae83d97da78" loc="78:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x2ae83d98e5d8" loc="121:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2ae83d913bc0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2ae83d98e020" loc="121:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2ae83d98e358" loc="121:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2ae83d913bc0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x2ae83d9920b8" loc="103:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2ae83d913bc0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2ae83d990a98" loc="103:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2ae83d990dd0" loc="103:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2ae83d913bc0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x2ae83d98a8c8" loc="147:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2ae83d913458"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2ae83d98a658" loc="147:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x2ae83d989b70" loc="162:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2ae83d913458"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2ae83d9895f0" loc="162:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x2ae83d9898f0" loc="162:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2ae83d913458"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x2ae83d98d788" loc="136:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ae83d65f9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2ae83d98d518" loc="136:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x2ae83d9880b8" loc="187:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2ae83d913808"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2ae83d99ca80" loc="187:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x2ae83d99cdb0" loc="187:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2ae83d913808"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x2ae83d988e20" loc="195:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2ae83d913808"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2ae83d987838" loc="65:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ae83d9875c8" loc="65:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x2ae83d986830" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ae83d9865c0" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2ae83d983948" loc="126:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="109:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ae83d983380" loc="126:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ae83d983690" loc="126:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2ae83d982ab8" loc="106:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="96:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x2ae83d984bd0" loc="94:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ae83d984640" loc="94:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ae83d984950" loc="94:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x2ae83d9a5428" loc="61:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x2ae83d9a5b60" loc="67:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x2ae83d9a4328" loc="72:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x2ae83d9a31d8" loc="83:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="79:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x2ae83d9a2810" loc="100:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="96:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2ae83d9a0020" loc="117:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="103:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x2ae83d9a4a40" loc="77:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2ae83d9a0b20" loc="134:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="120:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x2ae83d9a08b0" loc="134:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x2ae83d9a7cd8" loc="56:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x2ae83d9a3948" loc="89:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="86:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x2ae83d9a20d8" loc="94:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="91:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
      <function command="" provided="0" name="send" ref="0x2ae83d9692f0" loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="60:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ae83d6721a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2ae83d913bc0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2ae83d96a990" loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2ae83d913bc0"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2ae83d96acf0" loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ae83d969060" loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2ae83d97b628" loc="135:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="126:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ae83d97b060" loc="135:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ae83d97b370" loc="135:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2ae83d97a828" loc="123:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="113:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2ae83d9675b8" loc="96:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ae83d6721a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ae83d967348" loc="96:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2ae83d97ca00" loc="110:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="98:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ae83d6721a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ae83d97c458" loc="110:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2ae83d97c780" loc="110:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ae83d6721a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x2ae83da35068" loc="35:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ae83da35068"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2ae83da35298" loc="35:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ae83da35298"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x2ae83da31020" loc="63:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ae83da35298"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ae83da32d60" loc="63:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x2ae83da2f108" loc="70:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ae83da31e38" loc="70:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x2ae83da35db8" loc="49:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ae83d65f9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ae83da35b48" loc="49:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2ae83da2e348" loc="78:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ae83da35298"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ae83da2fd30" loc="78:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x2ae83da2e0c8" loc="78:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ae83da35298"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x2ae83da3cd88" loc="65:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ae83cd7fb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ae83da3c7a0" loc="65:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x2ae83da3cb08" loc="65:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ae83cd7fb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x2ae83da3a020" loc="71:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ae83cd7fb98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ae83da3bc48" loc="71:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x2ae83da3c020" loc="57:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ae83cd7fb98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x2ae83da3d5c0" loc="52:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ae83cd7fb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x2ae83da3d350" loc="52:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ae83cd7fb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x2ae83da386d8" loc="59:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ae83d6721a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ae83da38468" loc="59:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x2ae83da37818" loc="71:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ae83d6721a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ae83da375a8" loc="71:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x2ae83da348c8" loc="85:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ae83d65f9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ae83da34658" loc="85:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x2ae83da63d88" loc="95:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ae83da63b18" loc="95:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x2ae83da650a8" loc="81:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ae83da66dd0" loc="81:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x2ae83da67838" loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ae83cd7fb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x2ae83da675c8" loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ae83cd7fb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x2ae83da6cd68" loc="60:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ae83cd7fb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x2ae83da6caf8" loc="60:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ae83cd7fb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x2ae83da66290" loc="73:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ae83d65f9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x2ae83da66020" loc="73:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ae83d65f9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x2ae83da63020" loc="88:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ae83da65c28" loc="88:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x2ae83da702a0" loc="59:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2ae83d913bc0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x2ae83da7ab58" loc="59:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2ae83d913bc0"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2ae83da70020" loc="59:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x2ae83da572a0" loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2ae83da58cc0" loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x2ae83da57020" loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x2ae83da6d5f0" loc="77:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2ae83da6d020" loc="77:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x2ae83da6d370" loc="77:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x2ae83da57d00" loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x2ae83cd7e908"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2ae83da57a90" loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x2ae83da545e0" loc="75:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2ae83da54370" loc="75:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x2ae83da58538" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2ae83da582c8" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x2ae83da567d8" loc="72:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2ae83da56568" loc="72:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x2ae83da75cd8" loc="65:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ae83cd7fb98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ae83da75a68" loc="65:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x2ae83da78020" loc="46:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ae83cd7fb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ae83da619b8" loc="46:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x2ae83da61d20" loc="46:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ae83cd7fb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x2ae83da77d80" loc="59:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ae83cd7fb98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ae83da77b10" loc="59:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x2ae83da77348" loc="53:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ae83cd7fb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ae83da78d20" loc="53:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x2ae83da770c8" loc="53:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ae83cd7fb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x2ae83da73c10" loc="71:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ae83d65f9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ae83da739a0" loc="71:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x2ae83da59df8" loc="47:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ae83d65f9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ae83da59b88" loc="47:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2ae83da85e20" loc="75:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ae83d6721a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ae83da85890" loc="75:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ae83da85ba0" loc="75:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2ae83da912d8" loc="125:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="115:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ae83da93c90" loc="125:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ae83da91020" loc="125:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2ae83da93488" loc="112:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="102:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2ae83da7c0a8" loc="89:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="77:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ae83d6721a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ae83da7de08" loc="89:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2ae83da945c8" loc="100:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="91:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ae83d6721a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ae83da94020" loc="100:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2ae83da94348" loc="100:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ae83d6721a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
      <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x2ae83da81020" loc="120:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="104:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ae83d6721a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x2ae83da83020" loc="97:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ae83d6721a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x2ae83da84700" loc="88:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ae83d6721a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x2ae83da837a8" loc="102:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="99:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x2ae83da81a08" loc="128:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="122:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ae83d65f9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2ae83daa6118" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ae83d6721a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ae83d65f9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2ae83daabb38" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x2ae83daabe50" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ae83d65f9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2ae83daa5328" loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ae83d6721a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x2ae83daa2958" loc="84:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ae83d6721a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x2ae83daa4b90" loc="84:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x2ae83daa23b8" loc="84:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ae83daa26c8" loc="84:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2ae83daa43f8" loc="73:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ae83d6721a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2ae83daa5e00" loc="73:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2ae83daa4178" loc="73:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ae83d6721a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x2ae83daa6b28" loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ae83d6721a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ae83d65f9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x2ae83daa68b8" loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ae83d65f9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x2ae83dabaa28" loc="52:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ae83cd7fb98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x2ae83daba290" loc="46:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ae83cd80608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
      <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2ae83da97948" loc="95:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ae83d6721a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2ae83daa9110" loc="105:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
        <documentation loc="97:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ae83d6721a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x2ae83dab4a50" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ae83dab47a8" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x2ae83dab4020" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x2ae83d93a598"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x2ae83d939e58"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ae83dab6c38" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x2ae83dab3cb0" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x2ae83d937938"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x2ae83d935178"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ae83dab39c8" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x2ae83da959a0" loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ae83d6721a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x2ae83daac868" loc="97:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ae83d6721a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x2ae83daac110" loc="90:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ae83d6721a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x2ae83da96258" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ae83d6721a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x2ae83da951d8" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ae83d6721a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x2ae83daad1d8" loc="76:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x2ae83daad988" loc="83:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ae83d6721a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x2ae83da96a50" loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x2ae83dac9178" loc="71:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
        <documentation loc="68:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x2ae83daaf798" loc="56:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x2ae83daca9b0" loc="66:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ae83d65f9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x2ae83daca740" loc="66:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x2ae83daca020" loc="61:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ae83d65f9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x2ae83dab1508" loc="45:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
        <documentation loc="40:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ae83d6721a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x2ae83dab1298" loc="45:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x2ae83daaf020" loc="51:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x2ae83dab1cc0" loc="51:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x2ae83db1a680" loc="106:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ae83d65f9b8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ae83d65f9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x2ae83db1a0c8" loc="106:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ae83d65f9b8"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x2ae83db1a400" loc="106:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ae83d65f9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x2ae83db1b178" loc="93:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ae83d65f9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x2ae83db1c840" loc="87:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ae83d65f9b8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ae83d65f9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x2ae83db1c200" loc="87:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ae83d65f9b8"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x2ae83db1c5c0" loc="87:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ae83d65f9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x2ae83db050a8" loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ae83d6721a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2ae83db06e00" loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ae83d6721a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x2ae83db1b980" loc="98:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ae83d65f9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x2ae83db03990" loc="72:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ae83cd7fb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x2ae83db03720" loc="72:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ae83cd7fb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x2ae83db04108" loc="61:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x2ae83db05e40" loc="61:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x2ae83db18828" loc="117:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ae83d65f9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x2ae83db1da30" loc="78:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ae83cd7fb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x2ae83db1d7c0" loc="78:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ae83cd7fb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x2ae83db18070" loc="112:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ae83d65f9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x2ae83db04828" loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x2ae83da51340"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x2ae83da51a68"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x2ae83db03020" loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ae83cd7fb98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x2ae83db066d0" loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ae83d6721a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x2ae83db05790" loc="60:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x2ae83db1d110" loc="77:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ae83cd7fb98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x2ae83db142a0" loc="49:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2ae83db142a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x2ae83db14ad8" loc="55:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ae83d6721a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x2ae83db137c8" loc="63:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ae83d6721a8"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2ae83db142a0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x2ae83db13248" loc="63:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ae83d6721a8"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x2ae83db13548" loc="63:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2ae83db142a0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x2ae83db3e290" loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2ae83d92d838"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x2ae83cd7fb98"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ae83db3e020" loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x2ae83cd7fb98"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2ae83db3ece8" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2ae83d92d838"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ae83cd7fb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ae83db3ea78" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ae83cd7fb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:/opt/tinyos-2.1.2/tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:/opt/tinyos-2.1.2/tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x2ae83db234d0" loc="48:/opt/tinyos-2.1.2/tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x2ae83da51340"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x2ae83da51a68"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2ae83db25668" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ae83db25668"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2ae83db25898" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ae83db25898"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2ae83db39178" loc="109:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ae83db25898"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2ae83db1f328" loc="78:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x2ae83db3a810" loc="103:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ae83db25898"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ae83db25898"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2ae83db3a270" loc="103:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ae83db25898"/></type-var>
          </variable>
          <variable name="dt" ref="0x2ae83db3a590" loc="103:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ae83db25898"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2ae83db1fa98" loc="88:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ae83d65f9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x2ae83db398f8" loc="116:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ae83db25898"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2ae83db20378" loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ae83db25898"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2ae83db20108" loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ae83db25898"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2ae83db20b48" loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x2ae83db47020" loc="50:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2ae83d913bc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x2ae83db47e70" loc="60:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x2ae83db47780" loc="55:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2ae83d913808"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x2ae83db49730" loc="45:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2ae83d913808"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2ae83d913bc0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x2ae83db49178" loc="45:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2ae83d913808"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x2ae83db494b0" loc="45:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2ae83d913bc0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x2ae83db550d8" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2ae83d92d838"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x2ae83db445e0" loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2ae83d92d838"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x2ae83db456b0" loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2ae83db44020" loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2ae83db44350" loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2ae83db43c60" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2ae83d92d838"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x2ae83db44e30" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2ae83db436a0" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2ae83db439d0" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x2ae83db2e770" loc="68:/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x2ae83db2e020" loc="61:/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ae83d6721a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x2ae83db2f868" loc="54:/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ae83d6721a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x2ae83db2f020" loc="53:/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ae83d6721a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x2ae83dbf5378" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ae83d725928"/>
            <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x2ae83d725d30"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlCapture" ref="0x2ae83dbf8020" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ae83d710478"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x2ae83d710880"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2ae83dbf9cf8" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ae83d710478"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x2ae83d710880"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x2ae83dbf71d8" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ae83d71b578"/>
            <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x2ae83d71b980"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlCompare" ref="0x2ae83dbfeab0" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control registers: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ae83d70cda8"/>
            <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x2ae83d70b228"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x2ae83dbf7b98" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ae83d71b578"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x2ae83d71b980"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x2ae83dbf7928" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ae83d71b578"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x2ae83d71b980"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x2ae83dbf5d38" loc="59:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ae83d725928"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x2ae83d725d30"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x2ae83dbf5ac8" loc="59:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ae83d725928"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x2ae83d725d30"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlClock" ref="0x2ae83dbfbad8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ae83d70e890"/>
            <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x2ae83d70ec98"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlCapture" ref="0x2ae83dbfb328" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ae83d710478"/>
            <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x2ae83d710880"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlCompare" ref="0x2ae83dbf9570" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ae83d70cda8"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x2ae83d70b228"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2ae83dbf9300" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ae83d70cda8"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x2ae83d70b228"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlClock" ref="0x2ae83dbf89f0" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ae83d70e890"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x2ae83d70ec98"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2ae83dbf8780" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ae83d70e890"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x2ae83d70ec98"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x2ae83dbfcb60" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ae83dbfcb60"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x2ae83dc0d648" loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="84:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ae83d65f9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x2ae83dc0d3d8" loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ae83d65f9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2ae83dc0e568" loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ae83d65f9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2ae83dc12438" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ae83dbfcb60"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x2ae83dc11748" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ae83dbfcb60"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2ae83dc114d8" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ae83dbfcb60"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2ae83dc0f020" loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2ae83dc0ecb8" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ae83d65f9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2ae83dc12d70" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ae83dbfcb60"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2ae83dc12b00" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ae83dbfcb60"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2ae83dc0f718" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2ae83dc0fe00" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x2ae83dc0a820" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ae83dc0a820"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x2ae83dc04e20" loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ae83d65f9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2ae83dc051d8" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2ae83dc07110" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ae83dc0a820"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2ae83dc058e0" loc="62:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2ae83dc035c0" loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ae83d65f9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2ae83dc07a58" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ae83dc0a820"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2ae83dc077e8" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ae83dc0a820"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2ae83dc04020" loc="65:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2ae83dc04708" loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x2ae83dbe8458" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2ae83dbe8458"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x2ae83dbe3900" loc="98:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2ae83dbe5a40" loc="87:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ae83d65f9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2ae83dbe8cf8" loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2ae83dbe8458"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x2ae83dc02290" loc="104:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x2ae83dc02020" loc="104:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x2ae83dc02a10" loc="110:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2ae83dbe6500" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2ae83dbe7da8" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2ae83dbe31d8" loc="93:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ae83d65f9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2ae83dbe7688" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2ae83dbe8458"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2ae83dbe7418" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2ae83dbe8458"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2ae83dbe6bf8" loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2ae83dbe5328" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControl" ref="0x2ae83dc157c8" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ae83d6f9a08"/>
            <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2ae83d6f9e10"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x2ae83dc13c10" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ae83d706100"/>
            <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2ae83d706508"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x2ae83dc14a38" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ae83d6fe980"/>
            <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2ae83d6fed88"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x2ae83dc13470" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ae83d6fe980"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2ae83d6fed88"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x2ae83dc13200" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ae83d6fe980"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2ae83d6fed88"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x2ae83dc315f8" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ae83d706100"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2ae83d706508"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x2ae83dc31388" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ae83d706100"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2ae83d706508"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x2ae83dc14290" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ae83d6f9a08"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2ae83d6f9e10"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2ae83dc14020" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ae83d6f9a08"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2ae83d6f9e10"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="15:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="controlBusy" ref="0x2ae83dc29020" loc="38:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; @return TRUE if TCCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareBusy" ref="0x2ae83dc297e0" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; @return TRUE if OCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer0Asynchronous" ref="0x2ae83dc2a7f0" loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="29:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 0 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x2ae83dc27020" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; @return TRUE if TCNT0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x2ae83dc2b550" loc="21:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="17:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer0 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ae83d700118"/>
            <typename><typedef-ref name="Atm128Assr_t" ref="0x2ae83d700520"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x2ae83dc2a020" loc="27:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="23:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer0 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ae83d700118"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x2ae83d700520"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2ae83dc2bc90" loc="27:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ae83d700118"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x2ae83d700520"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2ae83dd983f8" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ae83dd983f8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2ae83dd98628" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ae83dd98628"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2ae83dd97020" loc="64:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ae83dd98628"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2ae83dd95070" loc="76:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2ae83dd97838" loc="71:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ae83d65f9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2ae83dd95760" loc="82:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x2ae83de34a40" loc="54:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ae83d6721a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x2ae83de33ae0" loc="66:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x2ae83de333a8" loc="61:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ae83cd7fb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x2ae83de33138" loc="61:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ae83cd7fb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x2ae83de34258" loc="53:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ae83d6721a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Interrupt" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; </short>
        <long>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; @author Joe Polastre&#10; @author Martin Turon&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2ae83de664e0" loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Clears the ATmega128 Interrupt Pending Flag for a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2ae83de65dd0" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x2ae83de3ddb8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Disables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x2ae83de65618" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ae83d65f9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x2ae83de653a8" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ae83d65f9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x2ae83de3d6c0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Enables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x2ae83de66c20" loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port&#10;&#10; </short>
          <long> &#10; Gets the current value of the input voltage of a port&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ae83d65f9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128InterruptSig" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).</short>
        <long>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @see HplAtm128Interrupt&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x2ae83de724e0" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
          <short>&#10; Signalled when an interrupt occurs on a pin&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x2ae83ded48e8" loc="24:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x2ae83ded3110" loc="31:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x2ae83ded38e0" loc="39:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ae83d6721a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x2ae83df0d998" loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ae83d6721a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ae83df0d3e8" loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2ae83df0d718" loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x2ae83df08948" loc="91:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ae83d6721a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ae83df08060" loc="91:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2ae83df08390" loc="91:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2ae83df086b8" loc="91:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ae83d6721a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2ae83df0a348" loc="82:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2ae83d92d838"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ae83df0bd20" loc="82:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2ae83df0a0c8" loc="82:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x2ae83df0f678" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2ae83d92d838"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ae83df0f0c8" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2ae83df0f3f8" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x2ae83df0b030" loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ae83d6721a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ae83df0c720" loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2ae83df0ca50" loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2ae83df0cd78" loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ae83d6721a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2ae83df1a2b0" loc="70:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ae83d6721a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ae83cd7fb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x2ae83df1b840" loc="70:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x2ae83df1bba0" loc="70:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ae83df1a020" loc="70:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ae83cd7fb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2ae83df18648" loc="82:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ae83cd7fb98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ae83d6721a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x2ae83df179b0" loc="82:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x2ae83df17d10" loc="82:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ae83df18060" loc="82:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ae83cd7fb98"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2ae83df183a8" loc="83:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ae83d6721a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x2ae83df1c108" loc="45:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
        <documentation loc="40:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x2ae83df1fe68" loc="45:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x2ae83df9e020" loc="62:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ae83dfa2c50" loc="62:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x2ae83df9d338" loc="74:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ae83df9d0c8" loc="74:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x2ae83df9e820" loc="68:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2ae83df9dd40" loc="81:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ae83df9dad0" loc="81:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x2ae83dfb8020" loc="86:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="85:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x2ae83dfdfa60" loc="126:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ae83d65f9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x2ae83dfb3538" loc="117:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ae83d65f9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x2ae83dfde458" loc="128:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ae83d65f9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x2ae83dfde1e8" loc="128:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ae83d65f9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x2ae83dfba880" loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x2ae83dfe1108" loc="122:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ae83d65f9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x2ae83dfb2e18" loc="122:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ae83d65f9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x2ae83dfb6d50" loc="113:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ae83d65f9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x2ae83dfb6ae0" loc="113:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ae83d65f9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x2ae83dfb7020" loc="97:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="93:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x2ae83dfdab98" loc="141:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ae83d65f9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x2ae83dfda928" loc="141:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ae83d65f9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x2ae83dfb44d0" loc="114:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ae83d65f9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0x2ae83dfdd4b0" loc="131:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x2ae83dfdd240" loc="131:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x2ae83dfdc360" loc="136:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ae83d65f9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x2ae83dfdf338" loc="125:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ae83d65f9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x2ae83dfdf0c8" loc="125:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ae83d65f9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x2ae83dfda258" loc="140:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ae83d65f9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x2ae83dfb2020" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ae83d65f9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x2ae83dfb3c18" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ae83d65f9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2ae83dfb7978" loc="103:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="99:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ae83dfb7708" loc="103:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x2ae83dfb4de0" loc="116:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ae83d65f9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x2ae83dfb4b70" loc="116:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ae83d65f9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x2ae83dfe1918" loc="123:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ae83d65f9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x2ae83dfdeb60" loc="129:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ae83d65f9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0x2ae83dfddba0" loc="132:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x2ae83dfdcaa8" loc="138:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ae83d65f9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x2ae83dfb2738" loc="120:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ae83d65f9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x2ae83dfb8738" loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x2ae83dfb6338" loc="109:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="105:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ae83dfb60c8" loc="109:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x2ae83dfd79f0" loc="90:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ae83d65f9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x2ae83dfd3258" loc="98:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2ae83e03e748" loc="95:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ae83d6721a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2ae83e03d020" loc="105:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ae83d6721a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x2ae83e0827d0" loc="53:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x2ae83e0800d8" loc="61:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x2ae83e07d020" loc="65:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x2ae83e07e6f8" loc="59:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x2ae83e075c80" loc="79:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ae83d6721a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2ae83e07b020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2ae83e075a10" loc="79:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2ae83e07b020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x2ae83e079e10" loc="53:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ae83d65f9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x2ae83e0768f0" loc="62:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ae83d65f9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2ae83e07b020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2ae83e076680" loc="62:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2ae83e07b020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x2ae83e0751d8" loc="70:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x2ae83e07b020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x2ae83e1a18c8" loc="43:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ae83d65f9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x2ae83e200400" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x2ae83e201a68" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x2ae83e200180" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x2ae83e201328" loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x2ae83e1ccb30" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ae83cd80608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x2ae83e1cc8c0" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ae83cd80608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x2ae83e1dcae8" loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ae83e1dc878" loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x2ae83e1e1b50" loc="50:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ae83d65f9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ae83e1e18e0" loc="50:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2ae83e1da938" loc="72:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ae83e1da6c8" loc="72:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2ae83e1dba20" loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ae83e1db7b0" loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2ae83e335a58" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ae83e335a58"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2ae83e332328" loc="61:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ae83cd80608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2ae83e38ddb0" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ae83e38ddb0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2ae83e383918" loc="136:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="132:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ae83cd80608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2ae83e387258" loc="83:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x2ae83e385020" loc="114:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="100:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ae83cd80608"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ae83cd80608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2ae83e386910" loc="114:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ae83cd80608"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2ae83e386c28" loc="114:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ae83cd80608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x2ae83e3861d8" loc="98:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="94:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ae83d65f9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x2ae83e3c0878" loc="151:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="146:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ae83cd80608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x2ae83e3c0070" loc="144:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="138:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ae83cd80608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2ae83e3879d0" loc="92:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="86:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ae83d65f9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x2ae83e38a8f0" loc="64:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ae83cd80608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2ae83e38a680" loc="64:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ae83cd80608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x2ae83e383020" loc="129:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="116:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ae83cd80608"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ae83cd80608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2ae83e385950" loc="129:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ae83cd80608"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2ae83e385c68" loc="129:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ae83cd80608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x2ae83e389378" loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ae83cd80608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2ae83e389108" loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ae83cd80608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2ae83e389b20" loc="78:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x2ae83e4ec9b8" loc="53:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2ae83e4ec9b8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x2ae83e4e94c8" loc="64:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ae83d6721a8"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2ae83e4ec9b8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x2ae83e4e9258" loc="64:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2ae83e4ec9b8"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x2ae83e72c640" loc="31:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ae83e72c060" loc="31:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x2ae83e72c3c0" loc="31:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x2ae83e6e5948" loc="15:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x2ae83e6e2760" loc="23:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ae83e6e2198" loc="23:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ae83d96dc58"/>
                <typename><typedef-ref name="message_t" ref="0x2ae83d96a228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x2ae83e6e24e0" loc="23:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:/opt/tinyos-2.1.2/tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x2ae83e714b60" loc="54:/opt/tinyos-2.1.2/tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x2ae83e714450" loc="49:/opt/tinyos-2.1.2/tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x2ae83e71c1d8" loc="56:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ae83d6721a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x2ae83e71b528" loc="72:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x2ae83e719020" loc="94:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ae83e71ad60" loc="94:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x2ae83e71bd40" loc="79:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x2ae83e71ccc8" loc="65:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ae83d6721a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ae83e71ca58" loc="65:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x2ae83e719818" loc="100:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x2ae83e71a5b8" loc="85:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x2ae83e723020" loc="71:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ae83d6721a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x2ae83e7238d8" loc="81:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x2ae83e7256c8" loc="62:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ae83d6721a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x2ae83e725458" loc="62:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x2ae83e722430" loc="91:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ae83d6721a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2ae83e7221c0" loc="91:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ae83d6721a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x2ae83e720020" loc="62:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ae83d6721a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x2ae83e720bc8" loc="69:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ae83e720958" loc="69:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x2ae83e71f640" loc="80:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ae83d6721a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x2ae83e71f3d0" loc="80:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ae83d6721a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2ae83e81a9b8" loc="48:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ae83d6721a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ae83cd7fb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2ae83e81a418" loc="48:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ae83e81a738" loc="48:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ae83cd7fb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x2ae83e8664a8" loc="79:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2ae83e866238" loc="79:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x2ae83e8642a0" loc="90:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="81:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ae83d6721a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ae83cd7fb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2ae83e866c20" loc="90:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ae83e864020" loc="90:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ae83cd7fb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x2ae83e8671d8" loc="65:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ae83d6721a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x2ae83e863a38" loc="99:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="92:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ae83cd7fb98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ae83d6721a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2ae83e863160" loc="99:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ae83e863480" loc="99:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ae83cd7fb98"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2ae83e8637a8" loc="99:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ae83d6721a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x2ae83e867a50" loc="72:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ae83d6721a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2ae83e8192b0" loc="57:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ae83cd7fb98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ae83d6721a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2ae83e869880" loc="57:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ae83e869ba0" loc="57:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ae83cd7fb98"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2ae83e819020" loc="57:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ae83d6721a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2ae83e846bb0" loc="46:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ae83d6721a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2ae83e846940" loc="46:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x2ae83e8439b0" loc="56:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ae83d6721a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2ae83e8433f8" loc="56:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x2ae83e843730" loc="56:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Uart" loc="38:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x2ae83e882578" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ae83d65f9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x2ae83e884738" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ae83d6721a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rxDone" ref="0x2ae83e880c08" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ae83e880998" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x2ae83e881c08" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x2ae83e8877f8" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ae83d6721a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x2ae83e884020" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ae83d6721a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x2ae83e884e58" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ae83d6721a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxEmpty" ref="0x2ae83e882c58" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ae83d65f9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x2ae83e881578" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ae83e881308" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x2ae83e880328" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ae83cd7f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
