<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="51:SenseAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b3bc3e1a598"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b3bc3e11900"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b3bc3e11900"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b3bc3e46e20"/></to>
    </wire>
    <wire loc="52:SenseAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b3bc3e2b330"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b3bc3e3a5f8"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b3bc3e3a5f8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b3bc3ff4e00"/></to>
    </wire>
    <wire loc="53:SenseAppC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b3bc3e2d4f8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b3bc4021e28"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b3bc4021e28"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b3bc402e6a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:SenseAppC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x2b3bc3e344e8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2b3bc41ec0a0"/></to>
    </wire>
    <wire loc="24:/opt/tinyos-2.1.2/tos/sensorboards/mts300/PhotoC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x2b3bc41ec0a0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2b3bc41e7538"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:SenseAppC.nc">
      <from><interface-ref name="Mts300Sounder" scoped="" ref="0x2b3bc3e29760"/></from>
      <to><interface-ref name="Mts300Sounder" scoped="" ref="0x2b3bc44ee148"/></to>
    </wire>
    <wire loc="9:/opt/tinyos-2.1.2/tos/sensorboards/mts300/SounderC.nc">
      <from><interface-ref name="Mts300Sounder" scoped="" ref="0x2b3bc44ee148"/></from>
      <to><interface-ref name="Mts300Sounder" scoped="" ref="0x2b3bc44eda78"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b3bc3e49d18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b3bc49ee3a0"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b3bc3e49d18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b3bc498dd10"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b3bc3e49d18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b3bc494f020"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b3bc3e49d18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b3bc4917d10"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b3bc3e49d18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b3bc403b0c0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2b3bc3feb490"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2b3bc3d21be8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2b3bc3d21be8"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2b3bc3ddec00"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b3bc3febe68"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b3bc3e48b90"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b3bc3e48b90"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b3bc3e4a4f0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b3bc3fea560"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2b3bc3e49d18"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b3bc3e449a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b3bc43fcd40"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b3bc3e4db98"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b3bc3fcd7e8"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x2b3bc3e57398"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b3bc3fcd1b8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2b3bc3e4ab90"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b3bc40272d8"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2b3bc3e4ab90"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b3bc3e4ca08"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b3bc3e4ca08"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b3bc3e5d428"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b3bc3e52108"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2b3bc3e449a0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x2b3bc3e645f8"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x2b3bc3e681a0"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x2b3bc3e681a0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b3bc3ee6430"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b3bc3e5c7f8"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2b3bc3e52108"/></to>
    </wire>
    <wire loc="191:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x2b3bc3e97c78"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bc3f7a970"/></to>
    </wire>
    <wire loc="165:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x2b3bc3e817e0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b3bc3f17020"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b3bc3f17020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bc466c710"/></to>
    </wire>
    <wire loc="176:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x2b3bc3e957e0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b3bc3f2ad60"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b3bc3f2ad60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bc46f0710"/></to>
    </wire>
    <wire loc="185:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x2b3bc3e9c4d0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b3bc3f3f5b8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b3bc3f3f5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bc4751710"/></to>
    </wire>
    <wire loc="143:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x2b3bc3e664d0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b3bc3ef6740"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b3bc3ef6740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bc454c710"/></to>
    </wire>
    <wire loc="183:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x2b3bc3e8e1a0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b3bc3f2f2a8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b3bc3f2f2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bc4757710"/></to>
    </wire>
    <wire loc="146:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x2b3bc3e747e0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b3bc3f00930"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b3bc3f00930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bc45a56a8"/></to>
    </wire>
    <wire loc="157:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x2b3bc3e79968"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b3bc3f01740"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b3bc3f01740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bc4617710"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x2b3bc3e8dc78"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b3bc3f13430"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b3bc3f13430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bc4693710"/></to>
    </wire>
    <wire loc="179:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x2b3bc3e92c78"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b3bc3f26120"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b3bc3f26120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bc46e7710"/></to>
    </wire>
    <wire loc="138:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x2b3bc3e6dc78"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b3bc3eea020"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b3bc3eea020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bc455c6a8"/></to>
    </wire>
    <wire loc="149:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x2b3bc3e71c78"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b3bc3efdd60"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b3bc3efdd60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bc45c8710"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x2b3bc3e76e00"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b3bc3f10bd8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b3bc3f10bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bc463c710"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x2b3bc3e891a0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b3bc3f228c8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b3bc3f228c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bc468a710"/></to>
    </wire>
    <wire loc="188:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x2b3bc3e99968"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b3bc3f3ca50"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b3bc3f3ca50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bc4748710"/></to>
    </wire>
    <wire loc="194:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x2b3bc3ea27e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bc3f93020"/></to>
    </wire>
    <wire loc="174:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x2b3bc3e874d0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b3bc3f2ca50"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b3bc3f2ca50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bc46f6710"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b3bc3ee6430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bc4553710"/></to>
    </wire>
    <wire loc="152:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x2b3bc3e7d348"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b3bc3ef9120"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b3bc3ef9120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bc45bf710"/></to>
    </wire>
    <wire loc="192:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x2b3bc3ea54d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bc3f8aab0"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x2b3bc3e7b658"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b3bc3f03500"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b3bc3f03500"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bc461d6a8"/></to>
    </wire>
    <wire loc="166:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x2b3bc3e80968"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b3bc3f16120"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b3bc3f16120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bc4699710"/></to>
    </wire>
    <wire loc="177:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x2b3bc3e94968"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b3bc3f29e18"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b3bc3f29e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bc46ed710"/></to>
    </wire>
    <wire loc="186:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x2b3bc3e9b658"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b3bc3f3e740"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b3bc3f3e740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bc474e710"/></to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x2b3bc3e75658"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b3bc3ef58c8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b3bc3ef58c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bc4573710"/></to>
    </wire>
    <wire loc="147:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x2b3bc3e73968"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b3bc3effa50"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b3bc3effa50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bc45a2710"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x2b3bc3e78af0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b3bc3f128c8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b3bc3f128c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bc4614710"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x2b3bc3e8ce00"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b3bc3f245b8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b3bc3f245b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bc4690710"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x2b3bc3e91e00"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b3bc3f252a8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b3bc3f252a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bc46e4710"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x2b3bc3e6ce00"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b3bc3ee8120"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b3bc3ee8120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bc4559710"/></to>
    </wire>
    <wire loc="150:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x2b3bc3e70e00"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b3bc3efce18"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b3bc3efce18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bc45c5710"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x2b3bc3e84020"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b3bc3f0fd60"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b3bc3f0fd60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bc4639710"/></to>
    </wire>
    <wire loc="189:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x2b3bc3e98af0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b3bc3f3bbd8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b3bc3f3bbd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bc4777710"/></to>
    </wire>
    <wire loc="164:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x2b3bc3e82348"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b3bc3f19e40"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b3bc3f19e40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bc466f6a8"/></to>
    </wire>
    <wire loc="175:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x2b3bc3e86658"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b3bc3f2bbd8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b3bc3f2bbd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bc46f3710"/></to>
    </wire>
    <wire loc="184:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x2b3bc3e9d348"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b3bc3f2e430"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b3bc3f2e430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bc4754710"/></to>
    </wire>
    <wire loc="195:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x2b3bc3ea1968"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bc3f8f180"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x2b3bc3e67348"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b3bc3ef75b8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b3bc3ef75b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bc4550710"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x2b3bc3e7c4d0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b3bc3ef82a8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b3bc3ef82a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bc45bb710"/></to>
    </wire>
    <wire loc="182:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x2b3bc3e8f020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b3bc3f301e8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b3bc3f301e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bc475a6a8"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x2b3bc3e7a7e0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b3bc3f025b8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b3bc3f025b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bc461a710"/></to>
    </wire>
    <wire loc="167:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x2b3bc3e7eaf0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b3bc3f152a8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b3bc3f152a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bc4696710"/></to>
    </wire>
    <wire loc="178:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x2b3bc3e93af0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b3bc3f27020"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b3bc3f27020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bc46ea710"/></to>
    </wire>
    <wire loc="187:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x2b3bc3e9a7e0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b3bc3f3d8c8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b3bc3f3d8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bc474b710"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x2b3bc3e51ab0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b3bc3eecdc0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b3bc3eecdc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bc4530520"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x2b3bc3e72af0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b3bc3efebd8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b3bc3efebd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bc45cb710"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x2b3bc3e77c78"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b3bc3f11a50"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b3bc3f11a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bc4611710"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x2b3bc3e8a020"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b3bc3f23740"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b3bc3f23740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bc468d710"/></to>
    </wire>
    <wire loc="193:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x2b3bc3ea3658"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bc3f85c38"/></to>
    </wire>
    <wire loc="173:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x2b3bc3e88348"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b3bc3f1c930"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b3bc3f1c930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bc46f96a8"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x2b3bc3e831a0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b3bc3f0de18"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b3bc3f0de18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bc4635710"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x2b3bc3e69020"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b3bc3ee72a8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b3bc3ee72a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bc4556710"/></to>
    </wire>
    <wire loc="151:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x2b3bc3e6e100"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b3bc3efa020"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b3bc3efa020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3bc45c2710"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x2b3bc3d22728"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b3bc3dddb08"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x2b3bc3dda020"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x2b3bc3d2bdc8"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x2b3bc3dfe7b8"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x2b3bc40e8268"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b3bc40272d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b3bc3ff4838"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2b3bc4006540"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x2b3bc3ff2d70"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2b3bc3ff2d70"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x2b3bc3e6ce00"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2b3bc40057d0"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x2b3bc4013020"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2b3bc4013020"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x2b3bc3e6dc78"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2b3bc4004958"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x2b3bc40121b0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2b3bc40121b0"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x2b3bc3e51ab0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2b3bc402e6a0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b3bc403bdb8"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2b3bc403bdb8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b3bc41bfaf8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b3bc403b0c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b3bc40348a8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b3bc4047298"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b3bc41cb440"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b3bc40348a8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b3bc41411f0"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x2b3bc41b9e80"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b3bc4163ab0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b3bc417ac70"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x2b3bc40421c8"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x2b3bc40421c8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b3bc4141998"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b3bc41de648"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x2b3bc404e3b8"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x2b3bc404e3b8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b3bc413da90"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b3bc413da90"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b3bc481d608"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b3bc41411f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b3bc4821c70"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b3bc4141998"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b3bc4820478"/></to>
    </wire>
    <wire loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b3bc481a710"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b3bc40d3de8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b3bc40d3de8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b3bc40da0f8"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b3bc4856708"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b3bc40cb020"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b3bc40cb020"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b3bc40ed160"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b3bc48556c0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b3bc40ca020"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b3bc40ca020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b3bc40ec190"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x2b3bc48518c0"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x2b3bc40de228"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x2b3bc40de228"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x2b3bc40e8968"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x2b3bc4176cf0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b3bc3d22728"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x2b3bc41ce020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b3bc3d22728"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="10:/opt/tinyos-2.1.2/tos/sensorboards/mts300/ArbitratedPhotoDeviceP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x2b3bc41e7538"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2b3bc44f9d58"/></to>
    </wire>
    <wire loc="11:/opt/tinyos-2.1.2/tos/sensorboards/mts300/ArbitratedPhotoDeviceP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x2b3bc44f65e8"/></from>
      <to><interface-ref name="ReadPhoto" scoped="" ref="0x2b3bc41f83f0"/></to>
    </wire>
    <wire loc="30:/opt/tinyos-2.1.2/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ReadPhoto" scoped="" ref="0x2b3bc41f83f0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2b3bc43af928"/></to>
    </wire>
    <wire loc="12:/opt/tinyos-2.1.2/tos/sensorboards/mts300/ArbitratedPhotoDeviceP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b3bc44f5ca0"/></from>
      <to><interface-ref name="PhotoResource" scoped="" ref="0x2b3bc41fabe8"/></to>
    </wire>
    <wire loc="23:/opt/tinyos-2.1.2/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="PhotoResource" scoped="" ref="0x2b3bc41fabe8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b3bc4340140"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.2/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ReadTemp" scoped="" ref="0x2b3bc41f51c8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2b3bc43c5af0"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b3bc4340140"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b3bc494d630"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.1.2/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="TempResource" scoped="" ref="0x2b3bc41f9020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b3bc435c2c8"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b3bc435c2c8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b3bc49894b0"/></to>
    </wire>
    <wire loc="24:/opt/tinyos-2.1.2/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b3bc438fd50"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b3bc433e5b8"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b3bc433e5b8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b3bc494bac8"/></to>
    </wire>
    <wire loc="25:/opt/tinyos-2.1.2/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b3bc438e940"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b3bc435f268"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b3bc435f268"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b3bc494a700"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.2/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b3bc4355d50"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b3bc43b0bc0"/></to>
    </wire>
    <wire loc="27:/opt/tinyos-2.1.2/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="PhotoTempResource" scoped="" ref="0x2b3bc43ad020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b3bc4345020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="28:/opt/tinyos-2.1.2/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b3bc43adce0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b3bc43db0a0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b3bc43db0a0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b3bc402e6a0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="29:/opt/tinyos-2.1.2/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="Power" scoped="" ref="0x2b3bc43a8d40"/></from>
      <to><interface-ref name="Int1" scoped="" ref="0x2b3bc4205020"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x2b3bc4205020"/></from>
      <to><interface-ref name="PortE5" scoped="" ref="0x2b3bc3e93af0"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.2/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ActualRead" scoped="" ref="0x2b3bc43c9020"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2b3bc44e1358"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x2b3bc44e1358"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2b3bc43cec90"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="34:/opt/tinyos-2.1.2/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b3bc438a800"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b3bc435b760"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b3bc435b760"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b3bc4988940"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2.1.2/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b3bc43893f0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b3bc435a3f0"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b3bc435a3f0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b3bc4987578"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b3bc438c6d8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b3bc43c6e70"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="PhotoTempResource" scoped="" ref="0x2b3bc43c21c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b3bc4345020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="38:/opt/tinyos-2.1.2/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b3bc43c2e80"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b3bc43db0a0"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-2.1.2/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="Power" scoped="" ref="0x2b3bc43bc020"/></from>
      <to><interface-ref name="Int2" scoped="" ref="0x2b3bc4204190"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x2b3bc4204190"/></from>
      <to><interface-ref name="PortE6" scoped="" ref="0x2b3bc3e92c78"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.2/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ActualRead" scoped="" ref="0x2b3bc43bb228"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2b3bc44e1358"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b3bc44e0a28"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b3bc42d86b8"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="PhotoTempAdc" scoped="" ref="0x2b3bc42ba140"/></from>
      <to><interface-ref name="Adc1" scoped="" ref="0x2b3bc4215690"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc1" scoped="" ref="0x2b3bc4215690"/></from>
      <to><interface-ref name="Adc1" scoped="" ref="0x2b3bc420e918"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int1_Interrupt" scoped="" ref="0x2b3bc42006d0"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x2b3bc42b4100"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc0" scoped="" ref="0x2b3bc4215020"/></from>
      <to><interface-ref name="Adc0" scoped="" ref="0x2b3bc420e2a8"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW3" scoped="" ref="0x2b3bc420c638"/></from>
      <to><interface-ref name="PortC3" scoped="" ref="0x2b3bc3e78af0"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW6" scoped="" ref="0x2b3bc4209ad0"/></from>
      <to><interface-ref name="PortC6" scoped="" ref="0x2b3bc3e84020"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc3" scoped="" ref="0x2b3bc42133c0"/></from>
      <to><interface-ref name="Adc3" scoped="" ref="0x2b3bc420d690"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc5" scoped="" ref="0x2b3bc42120f0"/></from>
      <to><interface-ref name="Adc5" scoped="" ref="0x2b3bc422a3c0"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="USART1_TXD" scoped="" ref="0x2b3bc4217020"/></from>
      <to><interface-ref name="PortD3" scoped="" ref="0x2b3bc3e7eaf0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW1" scoped="" ref="0x2b3bc41f0328"/></from>
      <to><interface-ref name="PortC1" scoped="" ref="0x2b3bc3e7a7e0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW4" scoped="" ref="0x2b3bc420b7c0"/></from>
      <to><interface-ref name="PortC4" scoped="" ref="0x2b3bc3e77c78"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int3_Interrupt" scoped="" ref="0x2b3bc421a020"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x2b3bc42ad100"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="USART1_RXD" scoped="" ref="0x2b3bc4219e28"/></from>
      <to><interface-ref name="PortD2" scoped="" ref="0x2b3bc3e80968"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW7" scoped="" ref="0x2b3bc4208c58"/></from>
      <to><interface-ref name="PortC7" scoped="" ref="0x2b3bc3e831a0"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int0_Interrupt" scoped="" ref="0x2b3bc421b9c8"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x2b3bc42a59a0"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc6" scoped="" ref="0x2b3bc4212960"/></from>
      <to><interface-ref name="Adc6" scoped="" ref="0x2b3bc422aa30"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW2" scoped="" ref="0x2b3bc41ef4b0"/></from>
      <to><interface-ref name="PortC2" scoped="" ref="0x2b3bc3e79968"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW5" scoped="" ref="0x2b3bc420a948"/></from>
      <to><interface-ref name="PortC5" scoped="" ref="0x2b3bc3e76e00"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc2" scoped="" ref="0x2b3bc4215d00"/></from>
      <to><interface-ref name="Adc2" scoped="" ref="0x2b3bc420d020"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc4" scoped="" ref="0x2b3bc4213a30"/></from>
      <to><interface-ref name="Adc4" scoped="" ref="0x2b3bc420dd00"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x2b3bc4207df0"/></from>
      <to><interface-ref name="PortE4" scoped="" ref="0x2b3bc3e94968"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int2_Interrupt" scoped="" ref="0x2b3bc41ff3c0"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x2b3bc42b19a0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="USART1_CLK" scoped="" ref="0x2b3bc421ab58"/></from>
      <to><interface-ref name="PortD5" scoped="" ref="0x2b3bc3e8ce00"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc7" scoped="" ref="0x2b3bc4211020"/></from>
      <to><interface-ref name="Adc7" scoped="" ref="0x2b3bc42290f0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW0" scoped="" ref="0x2b3bc41f1120"/></from>
      <to><interface-ref name="PortC0" scoped="" ref="0x2b3bc3e7b658"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x2b3bc4203338"/></from>
      <to><interface-ref name="PortE7" scoped="" ref="0x2b3bc3e91e00"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x2b3bc42a4480"/></from>
      <to><interface-ref name="Int4" scoped="" ref="0x2b3bc4231390"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int4" scoped="" ref="0x2b3bc4231390"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2b3bc427fcd8"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x2b3bc42b4bb0"/></from>
      <to><interface-ref name="Int5" scoped="" ref="0x2b3bc4230390"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int5" scoped="" ref="0x2b3bc4230390"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2b3bc427b9d8"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x2b3bc42b0480"/></from>
      <to><interface-ref name="Int6" scoped="" ref="0x2b3bc422f390"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int6" scoped="" ref="0x2b3bc422f390"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2b3bc4277970"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x2b3bc42adbb0"/></from>
      <to><interface-ref name="Int7" scoped="" ref="0x2b3bc422e390"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int7" scoped="" ref="0x2b3bc422e390"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2b3bc42926a8"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x2b3bc4238390"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2b3bc426b7a8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x2b3bc4237390"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2b3bc42673e0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x2b3bc42333c8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2b3bc4263a70"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x2b3bc4232390"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2b3bc4283020"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2b3bc426f908"/></from>
      <to><interface-ref name="IntSig0" scoped="" ref="0x2b3bc42470c8"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2b3bc426a5f8"/></from>
      <to><interface-ref name="IntSig1" scoped="" ref="0x2b3bc4247800"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2b3bc42862e8"/></from>
      <to><interface-ref name="IntSig2" scoped="" ref="0x2b3bc4246020"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2b3bc4283de0"/></from>
      <to><interface-ref name="IntSig3" scoped="" ref="0x2b3bc4246758"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2b3bc427eb10"/></from>
      <to><interface-ref name="IntSig4" scoped="" ref="0x2b3bc4244020"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2b3bc427a908"/></from>
      <to><interface-ref name="IntSig5" scoped="" ref="0x2b3bc4244758"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2b3bc4295780"/></from>
      <to><interface-ref name="IntSig6" scoped="" ref="0x2b3bc4243020"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2b3bc42915f8"/></from>
      <to><interface-ref name="IntSig7" scoped="" ref="0x2b3bc4243758"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b3bc4345d18"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b3bc4913200"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b3bc43444a8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b3bc4913940"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b3bc4345020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b3bc49144b0"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b3bc43430e0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b3bc4912578"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b3bc4912e18"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b3bc4343960"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2b3bc49115d0"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x2b3bc4916328"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2b3bc490e5f8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b3bc3d22728"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b3bc4340e38"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b3bc494b388"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b3bc4949020"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b3bc435fae8"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2b3bc49497a0"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x2b3bc494f5f8"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2b3bc4947908"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b3bc3d22728"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b3bc435b020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b3bc4988200"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b3bc4987e18"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b3bc435ac70"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2b3bc49865d0"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x2b3bc498c328"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2b3bc49845f8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b3bc3d22728"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b3bc49cad58"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b3bc4355d50"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b3bc49c97b8"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b3bc438f7b8"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b3bc49c9d50"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b3bc438fd50"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b3bc49c8940"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b3bc438e940"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x2b3bc49c7120"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b3bc3d22728"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="startTask" scoped="" ref="0x2b3bc49c78c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b3bc3d22728"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b3bc49b3020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b3bc438c6d8"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b3bc49b3a50"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b3bc438a268"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b3bc49b2020"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b3bc438a800"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b3bc49b2bd8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b3bc43893f0"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x2b3bc49b1470"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b3bc3d22728"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="startTask" scoped="" ref="0x2b3bc49b1c10"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b3bc3d22728"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="32:/opt/tinyos-2.1.2/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <from><interface-ref name="stopDone" scoped="" ref="0x2b3bc43c85f8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b3bc3d22728"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="32:/opt/tinyos-2.1.2/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <from><interface-ref name="stopDone" scoped="" ref="0x2b3bc43ba7d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b3bc3d22728"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b3bc43ec670"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b3bc44e0a28"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b3bc43e84c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b3bc43e3020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b3bc43e2890"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b3bc44df3f0"/></to>
    </wire>
    <wire loc="30:/opt/tinyos-2.1.2/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x2b3bc43cec90"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2b3bc44b2a28"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.2/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="ReadNow" scoped="" ref="0x2b3bc43e9a00"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x2b3bc4489880"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b3bc44e9b28"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b3bc43e84c0"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.1.2/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b3bc44aee78"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b3bc43ec670"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2.1.2/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x2b3bc44ea348"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2b3bc448bc68"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2b3bc44ae020"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2b3bc44010d0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2b3bc44010d0"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2b3bc43f8488"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x2b3bc43fd9b0"/></from>
      <to><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x2b3bc43f8de0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b3bc43e3020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b3bc4487d88"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b3bc4487d88"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b3bc4a299c0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b3bc44836d8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b3bc43e2890"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x2b3bc440d940"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x2b3bc4428020"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x2b3bc4428020"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x2b3bc44481e8"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b3bc43f4d30"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b3bc3e4db98"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x2b3bc4480478"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x2b3bc43f6c10"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b3bc4494268"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b3bc4484268"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b3bc4484268"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b3bc4a27020"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x2b3bc4446640"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2b3bc3dff240"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b3bc4485af8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b3bc4a28820"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b3bc4484e20"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b3bc4a27bd8"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b3bc4a26570"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b3bc44836d8"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2b3bc4a26cf0"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x2b3bc49ee978"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2b3bc4a24da0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b3bc3d22728"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x2b3bc4a32e38"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x2b3bc4480478"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b3bc4a30590"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b3bc4480b98"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b3bc4a30b28"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b3bc4494268"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b3bc4a2e710"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b3bc4494e20"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcP.nc">
      <from><interface-ref name="acquiredData" scoped="" ref="0x2b3bc449dbf8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b3bc3d22728"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="10:/opt/tinyos-2.1.2/tos/sensorboards/mts300/SounderC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b3bc4514240"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b3bc44ecb88"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b3bc44ecb88"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b3bc402e6a0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="11:/opt/tinyos-2.1.2/tos/sensorboards/mts300/SounderC.nc">
      <from><interface-ref name="SounderPin" scoped="" ref="0x2b3bc450f500"/></from>
      <to><interface-ref name="PW2" scoped="" ref="0x2b3bc41ef4b0"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="SenseC" loc="48:SenseC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.6 $&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MainC" loc="56:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="38:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="41:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:59">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:58">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:57">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:56">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:53">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="22:/opt/tinyos-2.1.2/tos/platforms/mica/MeasureClockC.nc" safe="">
      <documentation loc="14:/opt/tinyos-2.1.2/tos/platforms/mica/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/opt/tinyos-2.1.2/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/McuSleepC.nc" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.11 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @date   October 26, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/opt/tinyos-2.1.2/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SenseAppC.TimerMilliC" loc="44(SenseAppC.TimerMilliC):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b3bc3da0608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b3bc3da0960"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b3bc405c3b0"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer0AsyncC" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncP" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
        <short>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 0 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b3bc3da0608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b3bc3da0960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b3bc3da0608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b3bc3da0960"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b3bc3da0608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b3bc3da0960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SenseAppC.PhotoC" loc="18(SenseAppC.PhotoC):/opt/tinyos-2.1.2/tos/sensorboards/mts300/PhotoC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.6 $&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PhotoC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ArbitratedPhotoDeviceP" loc="1:/opt/tinyos-2.1.2/tos/sensorboards/mts300/ArbitratedPhotoDeviceP.nc">
      <configuration/>
    </component>
    <component qname="PhotoTempDeviceC" loc="3:/opt/tinyos-2.1.2/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.6 $&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MicaBusC" loc="18:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
        <short>&#10; A simplistic beginning to providing a standard interface to the&#10; mica-family 51-pin bus.</short>
        <long>&#10; A simplistic beginning to providing a standard interface to the&#10; mica-family 51-pin bus. Just provides the PW0-PW7 and Int0-3 digital&#10; I/O pins and returns the ADC channel number for the ADC pins.&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MicaBusP" loc="16:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusP.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusP.nc">
        <short>&#10; Internal component of the simplistic mica bus interface.</short>
        <long>&#10; Internal component of the simplistic mica bus interface.&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
        <short>&#10; Component providing access to all external interrupt pins on ATmega128.</short>
        <long>&#10; Component providing access to all external interrupt pins on ATmega128.&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128InterruptSigP" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10; Exposes just the interrupt vector routine for &#10; easy linking to generic components.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin0" loc="39(HplAtm128InterruptC.IntPin0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin1" loc="39(HplAtm128InterruptC.IntPin1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin2" loc="39(HplAtm128InterruptC.IntPin2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin3" loc="39(HplAtm128InterruptC.IntPin3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin4" loc="39(HplAtm128InterruptC.IntPin4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin5" loc="39(HplAtm128InterruptC.IntPin5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin6" loc="39(HplAtm128InterruptC.IntPin6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin7" loc="39(HplAtm128InterruptC.IntPin7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MicaBusC.Atm128GpioInterrupt0C" loc="6(MicaBusC.Atm128GpioInterrupt0C):/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="MicaBusC.Atm128GpioInterrupt1C" loc="6(MicaBusC.Atm128GpioInterrupt1C):/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="MicaBusC.Atm128GpioInterrupt2C" loc="6(MicaBusC.Atm128GpioInterrupt2C):/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="MicaBusC.Atm128GpioInterrupt3C" loc="6(MicaBusC.Atm128GpioInterrupt3C):/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempP" loc="14:/opt/tinyos-2.1.2/tos/sensorboards/mts300/PhotoTempP.nc">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/sensorboards/mts300/PhotoTempP.nc">
        <short>&#10; MTS300 photo and temp sensor ADC configuration.</short>
        <long>&#10; MTS300 photo and temp sensor ADC configuration.&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.SharingArbiter" loc="89(PhotoTempDeviceC.SharingArbiter):/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:mts300.phototemp">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PhotoTempDeviceC.SharingArbiter.Queue" loc="42(PhotoTempDeviceC.SharingArbiter.Queue):/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.SharingArbiter.Arbiter" loc="52(PhotoTempDeviceC.SharingArbiter.Arbiter):/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.PhotoArbiter" loc="89(PhotoTempDeviceC.PhotoArbiter):/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:mts300.photo">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PhotoTempDeviceC.PhotoArbiter.Queue" loc="42(PhotoTempDeviceC.PhotoArbiter.Queue):/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.PhotoArbiter.Arbiter" loc="52(PhotoTempDeviceC.PhotoArbiter.Arbiter):/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.TempArbiter" loc="89(PhotoTempDeviceC.TempArbiter):/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:mts300.temp">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PhotoTempDeviceC.TempArbiter.Queue" loc="42(PhotoTempDeviceC.TempArbiter.Queue):/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
      <instance number="2">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.TempArbiter.Arbiter" loc="52(PhotoTempDeviceC.TempArbiter.Arbiter):/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.PhotoPower" loc="67(PhotoTempDeviceC.PhotoPower):/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SplitControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PhotoTempDeviceC.PhotoPower.PowerManager" loc="58(PhotoTempDeviceC.PhotoPower.PowerManager):/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.TempPower" loc="67(PhotoTempDeviceC.TempPower):/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SplitControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PhotoTempDeviceC.TempPower.PowerManager" loc="58(PhotoTempDeviceC.TempPower.PowerManager):/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.PhotoControl" loc="1(PhotoTempDeviceC.PhotoControl):/opt/tinyos-2.1.2/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <instance number="0">
        <component-ref qname="PhotoTempControlP"/>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.TempControl" loc="1(PhotoTempDeviceC.TempControl):/opt/tinyos-2.1.2/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <instance number="1">
        <component-ref qname="PhotoTempControlP"/>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.WarmupTimer" loc="44(PhotoTempDeviceC.WarmupTimer):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PhotoTempDeviceC.Adc" loc="21(PhotoTempDeviceC.Adc):/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcP" loc="16:/opt/tinyos-2.1.2/tos/chips/atm128/adc/WireAdcP.nc">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/chips/atm128/adc/WireAdcP.nc">
        <short>&#10; Support component for AdcReadClientC and AdcReadNowClientC.</short>
        <long>&#10; Support component for AdcReadClientC and AdcReadNowClientC.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcC" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <documentation loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
        <short>&#10; HAL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HAL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcP" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcP.nc" safe="">
      <documentation loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcP.nc">
        <short>&#10; Internal component of the Atmega128 A/D HAL.</short>
        <long>&#10; Internal component of the Atmega128 A/D HAL.&#10;&#10; @author Jason Hill&#10; @author David Gay&#10; @author Philip Levis&#10; @author Phil Buonadonna&#10; @author Hu Siquan &#60;husq@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128AdcC" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128AdcC.nc">
        <short>&#10; HPL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128AdcP" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128AdcP.nc" safe="">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128AdcP.nc">
        <short>&#10; HPL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter" loc="89(Atm128AdcC.AdcArbiter):/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:atm128adc.resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Queue" loc="42(Atm128AdcC.AdcArbiter.Queue):/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
      <instance number="3">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Arbiter" loc="52(Atm128AdcC.AdcArbiter.Arbiter):/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.PM" loc="67(Atm128AdcC.PM):/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.PM.PowerManager" loc="58(Atm128AdcC.PM.PowerManager):/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="AdcP" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcP.nc" safe="">
      <documentation loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcP.nc">
        <short>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.</short>
        <long>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.&#10; @author David Gay&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="WireAdcP.ArbitrateRead" loc="23(WireAdcP.ArbitrateRead):/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b3bc3433b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ArbitratedPhotoDeviceP.ArbitrateRead" loc="23(ArbitratedPhotoDeviceP.ArbitrateRead):/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b3bc3433b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SounderC" loc="1:/opt/tinyos-2.1.2/tos/sensorboards/mts300/SounderC.nc">
      <configuration/>
    </component>
    <component qname="SounderP" loc="1:/opt/tinyos-2.1.2/tos/sensorboards/mts300/SounderP.nc">
      <module/>
    </component>
    <component qname="SounderC.TimerMilliC" loc="44(SounderC.TimerMilliC):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b3bc3e9ed98" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b3bc3eab108" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b3bc3eab450" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b3bc3eb0608" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b3bc3eb0970" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b3bc3eb0cd8" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2b3bc3ebd060" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b3bc3f44020" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b3bc3f44388" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b3bc3f446f0" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2b3bc3f44a20" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="23:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2b3bc405c3b0" loc="23:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b3bc405c3b0"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2b3bc405c6a0" loc="23:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncP" loc="23:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2b3bc4069978" loc="23:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b3bc4069978"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2b3bc4069c68" loc="23:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b3bc4045c60" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b3bc4045c60"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b3bc4171110" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b3bc4171110"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x2b3bc4171420" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b3bc41ca0a8" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b3bc41ca0a8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="PhotoC" loc="18:/opt/tinyos-2.1.2/tos/sensorboards/mts300/PhotoC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.6 $&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128InterruptPinP" loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="ctrl_addr" ref="0x2b3bc422b7e0" loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
          </type-int>
        </constant>
        <constant name="edge0bit" ref="0x2b3bc422bb48" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
          </type-int>
        </constant>
        <constant name="edge1bit" ref="0x2b3bc4262020" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2b3bc4262350" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioInterruptC" loc="6:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc" abstract="" safe="">
      <documentation loc="3:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="RoundRobinArbiterC" loc="89:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc" abstract="">
      <documentation loc="69:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x2b3bc42bb9d8" loc="89:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
          <component-ref qname="RoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="42:/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x2b3bc42e3dd0" loc="42:/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x2b3bc4308c48" loc="52:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SplitControlPowerManagerC" loc="67:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PowerManagerP" loc="58:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc" abstract="">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="PhotoTempControlP" loc="1:/opt/tinyos-2.1.2/tos/sensorboards/mts300/PhotoTempControlP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AdcReadClientC" loc="21:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc" abstract="">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ArbitratedReadC" loc="23:/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc" abstract="" safe="">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="width_t" ref="0x2b3bc44b49c0" loc="23:/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
          <component-ref qname="ArbitratedReadC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="width_t" scoped="" ref="0x2b3bc44b49c0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="Boot" ref="0x2b3bc3e1a598" loc="51:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b3bc3e1a598"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b3bc3e1a8e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mts300Sounder" ref="0x2b3bc3e29760" loc="53:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mts300Sounder" scoped="" ref="0x2b3bc3e29760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mts300Sounder"/>
      </instance>
      <interface-functions>
        <function-ref name="beep" scoped="" ref="0x2b3bc3e29ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Read" ref="0x2b3bc3e344e8" loc="55:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2b3bc3e344e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b3bc3433b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bc3e37088"/>
        <function-ref name="readDone" scoped="" ref="0x2b3bc3e374d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b3bc3e2b330" loc="52:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b3bc3e2b330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b3bc3e2b680"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b3bc3e2b808"/>
        <function-ref name="led1On" scoped="" ref="0x2b3bc3e2b990"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b3bc3e2bb18"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b3bc3e2bca0"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3e2be28"/>
        <function-ref name="led1Off" scoped="" ref="0x2b3bc3e1c020"/>
        <function-ref name="led2Off" scoped="" ref="0x2b3bc3e1c640"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3e1c1a8"/>
        <function-ref name="led0On" scoped="" ref="0x2b3bc3e1c330"/>
        <function-ref name="led2On" scoped="" ref="0x2b3bc3e1c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b3bc3e2d4f8" loc="54:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b3bc3e2d4f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b3bc3da0608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b3bc3da0960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b3bc3e39768"/>
        <function-ref name="fired" scoped="" ref="0x2b3bc3e1be18"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b3bc3e2ab78"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b3bc3e2a728"/>
        <function-ref name="getdt" scoped="" ref="0x2b3bc3e38088"/>
        <function-ref name="gett0" scoped="" ref="0x2b3bc3e39bb8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b3bc3e2a2d8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b3bc3e1b088"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b3bc3e39198"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b3bc3e1b528"/>
        <function-ref name="stop" scoped="" ref="0x2b3bc3e1b9c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x2b3bc3e49d18" loc="58:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b3bc3e49d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b3bc3e480a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2b3bc3e11900" loc="57:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b3bc3e11900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b3bc3e11c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b3bc3e449a0" loc="52:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b3bc3e449a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b3bc3e44cf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b3bc3e48b90" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b3bc3e48b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b3bc3e45020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2b3bc3e4db98" loc="50:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b3bc3e4db98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b3bc3e44020"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b3bc3e441a8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b3bc3e44330"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b3bc3e444b8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b3bc3e44640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x2b3bc3e4ab90" loc="45:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x2b3bc3e4ab90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b3bc3e57020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b3bc3e4a4f0" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b3bc3e4a4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b3bc3e4a840"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x2b3bc3e57398" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x2b3bc3e57398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b3bc3e576e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b3bc3e52108" loc="41:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b3bc3e52108"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b3bc3e52458"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b3bc3e4ca08" loc="40:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b3bc3e4ca08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b3bc3e4cd58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b3bc3e5c7f8" loc="45:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b3bc3e5c7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b3bc3e5cb48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x2b3bc3e645f8" loc="44:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x2b3bc3e645f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3e64948"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3e64ad0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3e64c58"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3e64de0"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3e5c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3e5c1a8"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3e5c330"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3e5c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b3bc3e5d428" loc="43:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b3bc3e5d428"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b3bc3e5d778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x2b3bc3e97c78" loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x2b3bc3e97c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3e965e8"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3e96770"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3e968f8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3e96a80"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3e96c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3e96d90"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3ea5020"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3ea51a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x2b3bc3e817e0" loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x2b3bc3e817e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3e81b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3e81cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3e81e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3e80020"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3e801a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3e80330"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3e804b8"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3e80640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x2b3bc3e957e0" loc="85:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x2b3bc3e957e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3e95b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3e95cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3e95e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3e94020"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3e941a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3e94330"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3e944b8"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3e94640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x2b3bc3e9c4d0" loc="94:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x2b3bc3e9c4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3e9c820"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3e9c9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3e9cb30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3e9ccb8"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3e9ce40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3e9b020"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3e9b1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3e9b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x2b3bc3e664d0" loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x2b3bc3e664d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3e66820"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3e669a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3e66b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3e66cb8"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3e66e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3e75020"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3e751a8"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3e75330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x2b3bc3e8e1a0" loc="92:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x2b3bc3e8e1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3e8e4f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3e8e678"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3e8e800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3e8e988"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3e8eb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3e8ec98"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3e8ee20"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3e9d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x2b3bc3e747e0" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x2b3bc3e747e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3e74b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3e74cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3e74e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3e73020"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3e731a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3e73330"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3e734b8"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3e73640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x2b3bc3e79968" loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x2b3bc3e79968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3e79cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3e79e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3e78020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3e781a8"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3e78330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3e784b8"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3e78640"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3e787c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x2b3bc3e8dc78" loc="77:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x2b3bc3e8dc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3e8c020"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3e8c1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3e8c330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3e8c4b8"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3e8c640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3e8c7c8"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3e8c950"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3e8cad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x2b3bc3e92c78" loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x2b3bc3e92c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3e91020"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3e911a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3e91330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3e914b8"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3e91640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3e917c8"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3e91950"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3e91ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x2b3bc3e6dc78" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x2b3bc3e6dc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3e6c020"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3e6c1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3e6c330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3e6c4b8"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3e6c640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3e6c7c8"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3e6c950"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3e6cad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x2b3bc3e71c78" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x2b3bc3e71c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3e70020"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3e701a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3e70330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3e704b8"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3e70640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3e707c8"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3e70950"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3e70ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x2b3bc3e76e00" loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x2b3bc3e76e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3e851a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3e85330"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3e854b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3e85640"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3e857c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3e85950"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3e85ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3e85c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x2b3bc3e891a0" loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x2b3bc3e891a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3e894f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3e89678"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3e89800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3e89988"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3e89b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3e89c98"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3e89e20"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3e88020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x2b3bc3e99968" loc="97:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x2b3bc3e99968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3e99cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3e99e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3e98020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3e981a8"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3e98330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3e984b8"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3e98640"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3e987c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x2b3bc3ea27e0" loc="103:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x2b3bc3ea27e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3ea2b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3ea2cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3ea2e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3ea1020"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3ea11a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3ea1330"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3ea14b8"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3ea1640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x2b3bc3e874d0" loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x2b3bc3e874d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3e87820"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3e879a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3e87b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3e87cb8"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3e87e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3e86020"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3e861a8"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3e86330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x2b3bc3e681a0" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x2b3bc3e681a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3e684f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3e68678"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3e68800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3e68988"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3e68b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3e68c98"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3e68e20"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3e67020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x2b3bc3e7d348" loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x2b3bc3e7d348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3e7d698"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3e7d820"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3e7d9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3e7db30"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3e7dcb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3e7de40"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3e7c020"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3e7c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x2b3bc3ea54d0" loc="101:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x2b3bc3ea54d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3ea5820"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3ea59a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3ea5b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3ea5cb8"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3ea5e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3ea3020"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3ea31a8"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3ea3330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x2b3bc3e7b658" loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x2b3bc3e7b658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3e7b9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3e7bb30"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3e7bcb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3e7be40"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3e7a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3e7a1a8"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3e7a330"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3e7a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x2b3bc3e80968" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x2b3bc3e80968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3e80cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3e80e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3e7e020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3e7e1a8"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3e7e330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3e7e4b8"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3e7e640"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3e7e7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x2b3bc3e94968" loc="86:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x2b3bc3e94968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3e94cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3e94e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3e93020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3e931a8"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3e93330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3e934b8"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3e93640"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3e937c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x2b3bc3e9b658" loc="95:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x2b3bc3e9b658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3e9b9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3e9bb30"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3e9bcb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3e9be40"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3e9a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3e9a1a8"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3e9a330"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3e9a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x2b3bc3e75658" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x2b3bc3e75658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3e759a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3e75b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3e75cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3e75e40"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3e74020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3e741a8"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3e74330"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3e744b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x2b3bc3e73968" loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x2b3bc3e73968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3e73cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3e73e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3e72020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3e721a8"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3e72330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3e724b8"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3e72640"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3e727c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x2b3bc3e78af0" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x2b3bc3e78af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3e78e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3e77020"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3e771a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3e77330"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3e774b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3e77640"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3e777c8"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3e77950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x2b3bc3e8ce00" loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x2b3bc3e8ce00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3e8b1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3e8b330"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3e8b4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3e8b640"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3e8b7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3e8b950"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3e8bad8"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3e8bc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x2b3bc3e91e00" loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x2b3bc3e91e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3e901a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3e90330"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3e904b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3e90640"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3e907c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3e90950"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3e90ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3e90c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x2b3bc3e6ce00" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x2b3bc3e6ce00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3e6b1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3e6b330"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3e6b4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3e6b640"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3e6b7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3e6b950"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3e6bad8"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3e6bc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x2b3bc3e70e00" loc="59:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x2b3bc3e70e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3e6f2e8"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3e6f470"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3e6f5f8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3e6f780"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3e6f908"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3e6fa90"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3e6fc18"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3e6fda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x2b3bc3e84020" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x2b3bc3e84020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3e84370"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3e844f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3e84680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3e84808"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3e84990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3e84b18"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3e84ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3e84e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x2b3bc3e98af0" loc="98:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x2b3bc3e98af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3e98e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3e97020"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3e971a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3e97330"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3e974b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3e97640"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3e977c8"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3e97950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x2b3bc3e82348" loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x2b3bc3e82348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3e82898"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3e82a20"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3e82ba8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3e82d30"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3e81020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3e811a8"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3e81330"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3e814b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x2b3bc3e86658" loc="84:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x2b3bc3e86658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3e869a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3e86b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3e86cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3e86e40"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3e95020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3e951a8"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3e95330"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3e954b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x2b3bc3e9d348" loc="93:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x2b3bc3e9d348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3e9d698"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3e9d820"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3e9d9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3e9db30"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3e9dcb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3e9de40"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3e9c020"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3e9c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x2b3bc3ea1968" loc="104:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x2b3bc3ea1968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3ea1cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3ea1e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3ea0020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3ea01a8"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3ea0330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3ea04b8"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3ea0640"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3ea07c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x2b3bc3e67348" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x2b3bc3e67348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3e67698"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3e67820"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3e679a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3e67b30"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3e67cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3e67e40"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3e66020"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3e661a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x2b3bc3e7c4d0" loc="62:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x2b3bc3e7c4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3e7c820"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3e7c9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3e7cb30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3e7ccb8"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3e7ce40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3e7b020"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3e7b1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3e7b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x2b3bc3e8f020" loc="91:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x2b3bc3e8f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3e8f370"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3e8f4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3e8f680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3e8f808"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3e8f990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3e8fb18"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3e8fca0"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3e8fe28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x2b3bc3e7a7e0" loc="65:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x2b3bc3e7a7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3e7ab30"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3e7acb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3e7ae40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3e79020"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3e791a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3e79330"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3e794b8"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3e79640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x2b3bc3e7eaf0" loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x2b3bc3e7eaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3e7ee40"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3e8d020"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3e8d1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3e8d330"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3e8d4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3e8d640"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3e8d7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3e8d950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x2b3bc3e93af0" loc="87:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x2b3bc3e93af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3e93e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3e92020"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3e921a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3e92330"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3e924b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3e92640"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3e927c8"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3e92950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x2b3bc3e9a7e0" loc="96:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x2b3bc3e9a7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3e9ab30"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3e9acb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3e9ae40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3e99020"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3e991a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3e99330"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3e994b8"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3e99640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x2b3bc3e51ab0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x2b3bc3e51ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3e51e00"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3e6d020"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3e6d1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3e6d330"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3e6d4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3e6d640"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3e6d7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3e6d950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x2b3bc3e72af0" loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x2b3bc3e72af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3e72e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3e71020"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3e711a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3e71330"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3e714b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3e71640"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3e717c8"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3e71950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x2b3bc3e77c78" loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x2b3bc3e77c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3e76020"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3e761a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3e76330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3e764b8"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3e76640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3e767c8"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3e76950"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3e76ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x2b3bc3e8a020" loc="79:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x2b3bc3e8a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3e8a370"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3e8a4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3e8a680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3e8a808"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3e8a990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3e8ab18"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3e8aca0"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3e8ae28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x2b3bc3ea3658" loc="102:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x2b3bc3ea3658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3ea39a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3ea3b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3ea3cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3ea3e40"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3ea2020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3ea21a8"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3ea2330"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3ea24b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x2b3bc3e88348" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x2b3bc3e88348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3e88698"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3e88820"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3e889a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3e88b30"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3e88cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3e88e40"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3e87020"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3e871a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x2b3bc3e831a0" loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x2b3bc3e831a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3e834f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3e83678"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3e83800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3e83988"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3e83b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3e83c98"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3e83e20"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3e82020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x2b3bc3e69020" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x2b3bc3e69020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3e69370"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3e694f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3e69680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3e69808"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3e69990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3e69b18"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3e69ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3e69e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x2b3bc3e6e100" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x2b3bc3e6e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3e6e450"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3e6e5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3e6e760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3e6e8e8"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3e6ea70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3e6ebf8"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3e6ed80"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3e7d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b3bc3ee8120" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b3bc3ee8120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3ee8470"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3ee85f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3ee8780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3ee8908"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3ee8a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3ee8c18"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3ee8da0"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3ee7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b3bc3ef75b8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b3bc3ef75b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3ef7908"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3ef7a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3ef7c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3ef7da0"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3ef6020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3ef61a8"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3ef6330"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3ef64b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b3bc3eecdc0" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b3bc3eecdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3eeb170"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3eeb2f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3eeb480"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3eeb608"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3eeb790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3eeb918"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3eebaa0"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3eebc28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b3bc3ee72a8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b3bc3ee72a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3ee75f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3ee7780"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3ee7908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3ee7a90"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3ee7c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3ee7da0"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3ee6020"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3ee61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b3bc3ef6740" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b3bc3ef6740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3ef6a90"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3ef6c18"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3ef6da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3ef5020"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3ef51a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3ef5330"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3ef54b8"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3ef5640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b3bc3eea020" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b3bc3eea020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3eea370"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3eea4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3eea680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3eea808"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3eea990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3eeab18"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3eeaca0"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3eeae28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b3bc3ee6430" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b3bc3ee6430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3ee6780"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3ee6908"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3ee6a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3ee6c18"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3ee6da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3ef7020"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3ef71a8"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3ef7330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b3bc3ef58c8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b3bc3ef58c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3ef5c18"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3ef5da0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3ef4020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3ef41a8"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3ef4330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3ef44b8"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3ef4640"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3ef47c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bc4530520" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3bc4530520"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc4530870"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc45309f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc4530b80"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc4530d08"/>
        <function-ref name="get" scoped="" ref="0x2b3bc455e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc455e1a8"/>
        <function-ref name="set" scoped="" ref="0x2b3bc455e330"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc455e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bc455c6a8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3bc455c6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc455c9f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc455cb80"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc455cd08"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc455b020"/>
        <function-ref name="get" scoped="" ref="0x2b3bc455b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc455b330"/>
        <function-ref name="set" scoped="" ref="0x2b3bc455b4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc455b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bc4559710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3bc4559710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc4559a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc4559be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc4559d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc4558020"/>
        <function-ref name="get" scoped="" ref="0x2b3bc45581a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc4558330"/>
        <function-ref name="set" scoped="" ref="0x2b3bc45584b8"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc4558640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bc4556710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3bc4556710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc4556a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc4556be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc4556d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc4555020"/>
        <function-ref name="get" scoped="" ref="0x2b3bc45551a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc4555330"/>
        <function-ref name="set" scoped="" ref="0x2b3bc45554b8"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc4555640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bc4553710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3bc4553710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc4553a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc4553be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc4553d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc4552020"/>
        <function-ref name="get" scoped="" ref="0x2b3bc45521a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc4552330"/>
        <function-ref name="set" scoped="" ref="0x2b3bc45524b8"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc4552640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bc4550710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3bc4550710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc4550a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc4550be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc4550d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc454e020"/>
        <function-ref name="get" scoped="" ref="0x2b3bc454e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc454e330"/>
        <function-ref name="set" scoped="" ref="0x2b3bc454e4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc454e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bc454c710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3bc454c710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc454ca60"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc454cbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc454cd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc454b020"/>
        <function-ref name="get" scoped="" ref="0x2b3bc454b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc454b330"/>
        <function-ref name="set" scoped="" ref="0x2b3bc454b4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc454b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bc4573710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3bc4573710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc4573a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc4573be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc4573d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc4572020"/>
        <function-ref name="get" scoped="" ref="0x2b3bc45721a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc4572330"/>
        <function-ref name="set" scoped="" ref="0x2b3bc45724b8"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc4572640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b3bc3efebd8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b3bc3efebd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3efd020"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3efd1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3efd330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3efd4b8"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3efd640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3efd7c8"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3efd950"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3efdad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b3bc3efa020" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b3bc3efa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3efa370"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3efa4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3efa680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3efa808"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3efa990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3efab18"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3efaca0"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3efae28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b3bc3f00930" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b3bc3f00930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3f00c80"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3f00e08"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3eff020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3eff1a8"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3eff330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3eff4b8"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3eff640"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3eff7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b3bc3efdd60" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b3bc3efdd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3efc0d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3efc260"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3efc3e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3efc570"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3efc6f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3efc880"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3efca08"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3efcb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b3bc3ef9120" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b3bc3ef9120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3ef9470"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3ef95f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3ef9780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3ef9908"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3ef9a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3ef9c18"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3ef9da0"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3ef8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b3bc3effa50" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b3bc3effa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3effda0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3efe020"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3efe1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3efe330"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3efe4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3efe640"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3efe7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3efe950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b3bc3efce18" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b3bc3efce18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3efb1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3efb330"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3efb4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3efb640"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3efb7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3efb950"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3efbad8"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3efbc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b3bc3ef82a8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b3bc3ef82a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3ef85f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3ef8780"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3ef8908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3ef8a90"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3ef8c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3ef8da0"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3f09020"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3f091a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bc45a56a8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3bc45a56a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc45a59f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc45a5b80"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc45a5d08"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc45a4020"/>
        <function-ref name="get" scoped="" ref="0x2b3bc45a41a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc45a4330"/>
        <function-ref name="set" scoped="" ref="0x2b3bc45a44b8"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc45a4640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bc45a2710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3bc45a2710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc45a2a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc45a2be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc45a2d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc45a1020"/>
        <function-ref name="get" scoped="" ref="0x2b3bc45a11a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc45a1330"/>
        <function-ref name="set" scoped="" ref="0x2b3bc45a14b8"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc45a1640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bc45cb710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3bc45cb710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc45cba60"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc45cbbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc45cbd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc45ca020"/>
        <function-ref name="get" scoped="" ref="0x2b3bc45ca1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc45ca330"/>
        <function-ref name="set" scoped="" ref="0x2b3bc45ca4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc45ca640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bc45c8710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3bc45c8710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc45c8a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc45c8be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc45c8d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc45c7020"/>
        <function-ref name="get" scoped="" ref="0x2b3bc45c71a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc45c7330"/>
        <function-ref name="set" scoped="" ref="0x2b3bc45c74b8"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc45c7640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bc45c5710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3bc45c5710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc45c5a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc45c5be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc45c5d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc45c4020"/>
        <function-ref name="get" scoped="" ref="0x2b3bc45c41a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc45c4330"/>
        <function-ref name="set" scoped="" ref="0x2b3bc45c44b8"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc45c4640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bc45c2710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3bc45c2710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc45c2a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc45c2be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc45c2d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc45c1020"/>
        <function-ref name="get" scoped="" ref="0x2b3bc45c11a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc45c1330"/>
        <function-ref name="set" scoped="" ref="0x2b3bc45c14b8"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc45c1640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bc45bf710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3bc45bf710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc45bfa60"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc45bfbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc45bfd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc45bd020"/>
        <function-ref name="get" scoped="" ref="0x2b3bc45bd1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc45bd330"/>
        <function-ref name="set" scoped="" ref="0x2b3bc45bd4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc45bd640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bc45bb710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3bc45bb710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc45bba60"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc45bbbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc45bbd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc45ba020"/>
        <function-ref name="get" scoped="" ref="0x2b3bc45ba1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc45ba330"/>
        <function-ref name="set" scoped="" ref="0x2b3bc45ba4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc45ba640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b3bc3f01740" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b3bc3f01740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3f01a90"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3f01c18"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3f01da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3f12020"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3f121a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3f12330"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3f124b8"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3f12640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b3bc3f10bd8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b3bc3f10bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3f0f020"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3f0f1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3f0f330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3f0f4b8"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3f0f640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3f0f7c8"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3f0f950"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3f0fad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b3bc3f03500" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b3bc3f03500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3f03850"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3f039d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3f03b60"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3f03ce8"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3f03e70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3f02020"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3f021a8"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3f02330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b3bc3f128c8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b3bc3f128c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3f12c18"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3f12da0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3f11020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3f111a8"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3f11330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3f114b8"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3f11640"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3f117c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b3bc3f0fd60" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b3bc3f0fd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3f0d0d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3f0d260"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3f0d3e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3f0d570"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3f0d6f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3f0d880"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3f0da08"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3f0db90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b3bc3f025b8" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b3bc3f025b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3f02908"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3f02a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3f02c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3f02da0"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3f01020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3f011a8"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3f01330"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3f014b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b3bc3f11a50" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b3bc3f11a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3f11da0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3f10020"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3f101a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3f10330"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3f104b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3f10640"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3f107c8"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3f10950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b3bc3f0de18" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b3bc3f0de18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3f0c1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3f0c330"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3f0c4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3f0c640"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3f0c7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3f0c950"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3f0cad8"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3f0cc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bc461d6a8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3bc461d6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc461d9f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc461db80"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc461dd08"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc461c020"/>
        <function-ref name="get" scoped="" ref="0x2b3bc461c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc461c330"/>
        <function-ref name="set" scoped="" ref="0x2b3bc461c4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc461c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bc461a710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3bc461a710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc461aa60"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc461abe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc461ad70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc4619020"/>
        <function-ref name="get" scoped="" ref="0x2b3bc46191a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc4619330"/>
        <function-ref name="set" scoped="" ref="0x2b3bc46194b8"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc4619640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bc4617710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3bc4617710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc4617a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc4617be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc4617d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc4616020"/>
        <function-ref name="get" scoped="" ref="0x2b3bc46161a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc4616330"/>
        <function-ref name="set" scoped="" ref="0x2b3bc46164b8"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc4616640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bc4614710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3bc4614710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc4614a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc4614be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc4614d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc4613020"/>
        <function-ref name="get" scoped="" ref="0x2b3bc46131a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc4613330"/>
        <function-ref name="set" scoped="" ref="0x2b3bc46134b8"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc4613640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bc4611710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3bc4611710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc4611a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc4611be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc4611d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc4610020"/>
        <function-ref name="get" scoped="" ref="0x2b3bc46101a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc4610330"/>
        <function-ref name="set" scoped="" ref="0x2b3bc46104b8"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc4610640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bc463c710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3bc463c710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc463ca60"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc463cbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc463cd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc463b020"/>
        <function-ref name="get" scoped="" ref="0x2b3bc463b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc463b330"/>
        <function-ref name="set" scoped="" ref="0x2b3bc463b4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc463b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bc4639710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3bc4639710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc4639a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc4639be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc4639d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc4637020"/>
        <function-ref name="get" scoped="" ref="0x2b3bc46371a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc4637330"/>
        <function-ref name="set" scoped="" ref="0x2b3bc46374b8"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc4637640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bc4635710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3bc4635710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc4635a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc4635be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc4635d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc4634020"/>
        <function-ref name="get" scoped="" ref="0x2b3bc46341a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc4634330"/>
        <function-ref name="set" scoped="" ref="0x2b3bc46344b8"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc4634640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b3bc3f16120" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b3bc3f16120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3f16470"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3f165f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3f16780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3f16908"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3f16a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3f16c18"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3f16da0"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3f15020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b3bc3f245b8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b3bc3f245b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3f24908"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3f24a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3f24c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3f24da0"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3f23020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3f231a8"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3f23330"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3f234b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b3bc3f19e40" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b3bc3f19e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3f181c0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3f18348"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3f184d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3f18658"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3f187e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3f18968"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3f18af0"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3f18c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b3bc3f152a8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b3bc3f152a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3f155f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3f15780"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3f15908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3f15a90"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3f15c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3f15da0"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3f13020"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3f131a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b3bc3f23740" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b3bc3f23740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3f23a90"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3f23c18"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3f23da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3f22020"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3f221a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3f22330"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3f224b8"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3f22640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b3bc3f17020" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b3bc3f17020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3f17370"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3f174f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3f17680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3f17808"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3f17990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3f17b18"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3f17ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3f17e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b3bc3f13430" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b3bc3f13430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3f13780"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3f13908"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3f13a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3f13c18"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3f13da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3f24020"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3f241a8"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3f24330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b3bc3f228c8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b3bc3f228c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3f22c18"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3f22da0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3f21020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3f211a8"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3f21330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3f214b8"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3f21640"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3f217c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bc466f6a8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3bc466f6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc466f9f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc466fb80"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc466fd08"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc466e020"/>
        <function-ref name="get" scoped="" ref="0x2b3bc466e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc466e330"/>
        <function-ref name="set" scoped="" ref="0x2b3bc466e4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc466e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bc466c710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3bc466c710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc466ca60"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc466cbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc466cd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc466b020"/>
        <function-ref name="get" scoped="" ref="0x2b3bc466b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc466b330"/>
        <function-ref name="set" scoped="" ref="0x2b3bc466b4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc466b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bc4699710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3bc4699710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc4699a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc4699be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc4699d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc4698020"/>
        <function-ref name="get" scoped="" ref="0x2b3bc46981a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc4698330"/>
        <function-ref name="set" scoped="" ref="0x2b3bc46984b8"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc4698640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bc4696710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3bc4696710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc4696a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc4696be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc4696d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc4695020"/>
        <function-ref name="get" scoped="" ref="0x2b3bc46951a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc4695330"/>
        <function-ref name="set" scoped="" ref="0x2b3bc46954b8"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc4695640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bc4693710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3bc4693710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc4693a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc4693be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc4693d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc4692020"/>
        <function-ref name="get" scoped="" ref="0x2b3bc46921a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc4692330"/>
        <function-ref name="set" scoped="" ref="0x2b3bc46924b8"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc4692640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bc4690710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3bc4690710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc4690a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc4690be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc4690d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc468f020"/>
        <function-ref name="get" scoped="" ref="0x2b3bc468f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc468f330"/>
        <function-ref name="set" scoped="" ref="0x2b3bc468f4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc468f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bc468d710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3bc468d710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc468da60"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc468dbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc468dd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc468c020"/>
        <function-ref name="get" scoped="" ref="0x2b3bc468c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc468c330"/>
        <function-ref name="set" scoped="" ref="0x2b3bc468c4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc468c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bc468a710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3bc468a710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc468aa60"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc468abe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc468ad70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc4688020"/>
        <function-ref name="get" scoped="" ref="0x2b3bc46881a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc4688330"/>
        <function-ref name="set" scoped="" ref="0x2b3bc46884b8"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc4688640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b3bc3f2bbd8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b3bc3f2bbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3f2a020"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3f2a1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3f2a330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3f2a4b8"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3f2a640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3f2a7c8"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3f2a950"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3f2aad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b3bc3f27020" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b3bc3f27020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3f27370"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3f274f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3f27680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3f27808"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3f27990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3f27b18"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3f27ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3f27e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b3bc3f1c930" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b3bc3f1c930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3f1cc80"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3f1ce08"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3f2c020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3f2c1a8"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3f2c330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3f2c4b8"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3f2c640"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3f2c7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b3bc3f2ad60" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b3bc3f2ad60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3f290d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3f29260"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3f293e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3f29570"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3f296f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3f29880"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3f29a08"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3f29b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b3bc3f26120" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b3bc3f26120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3f26470"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3f265f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3f26780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3f26908"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3f26a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3f26c18"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3f26da0"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3f25020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b3bc3f2ca50" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b3bc3f2ca50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3f2cda0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3f2b020"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3f2b1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3f2b330"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3f2b4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3f2b640"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3f2b7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3f2b950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b3bc3f29e18" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b3bc3f29e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3f281a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3f28330"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3f284b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3f28640"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3f287c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3f28950"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3f28ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3f28c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b3bc3f252a8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b3bc3f252a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3f255f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3f25780"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3f25908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3f25a90"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3f25c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3f25da0"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3f36020"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3f361a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bc46f96a8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3bc46f96a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc46f99f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc46f9b80"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc46f9d08"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc46f8020"/>
        <function-ref name="get" scoped="" ref="0x2b3bc46f81a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc46f8330"/>
        <function-ref name="set" scoped="" ref="0x2b3bc46f84b8"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc46f8640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bc46f6710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3bc46f6710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc46f6a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc46f6be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc46f6d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc46f5020"/>
        <function-ref name="get" scoped="" ref="0x2b3bc46f51a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc46f5330"/>
        <function-ref name="set" scoped="" ref="0x2b3bc46f54b8"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc46f5640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bc46f3710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3bc46f3710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc46f3a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc46f3be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc46f3d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc46f2020"/>
        <function-ref name="get" scoped="" ref="0x2b3bc46f21a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc46f2330"/>
        <function-ref name="set" scoped="" ref="0x2b3bc46f24b8"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc46f2640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bc46f0710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3bc46f0710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc46f0a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc46f0be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc46f0d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc46ef020"/>
        <function-ref name="get" scoped="" ref="0x2b3bc46ef1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc46ef330"/>
        <function-ref name="set" scoped="" ref="0x2b3bc46ef4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc46ef640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bc46ed710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3bc46ed710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc46eda60"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc46edbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc46edd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc46ec020"/>
        <function-ref name="get" scoped="" ref="0x2b3bc46ec1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc46ec330"/>
        <function-ref name="set" scoped="" ref="0x2b3bc46ec4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc46ec640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bc46ea710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3bc46ea710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc46eaa60"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc46eabe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc46ead70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc46e9020"/>
        <function-ref name="get" scoped="" ref="0x2b3bc46e91a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc46e9330"/>
        <function-ref name="set" scoped="" ref="0x2b3bc46e94b8"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc46e9640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bc46e7710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3bc46e7710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc46e7a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc46e7be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc46e7d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc46e6020"/>
        <function-ref name="get" scoped="" ref="0x2b3bc46e61a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc46e6330"/>
        <function-ref name="set" scoped="" ref="0x2b3bc46e64b8"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc46e6640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bc46e4710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3bc46e4710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc46e4a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc46e4be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc46e4d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc4714020"/>
        <function-ref name="get" scoped="" ref="0x2b3bc47141a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc4714330"/>
        <function-ref name="set" scoped="" ref="0x2b3bc47144b8"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc4714640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b3bc3f2e430" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b3bc3f2e430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3f2e780"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3f2e908"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3f2ea90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3f2ec18"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3f2eda0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3f3f020"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3f3f1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3f3f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b3bc3f3d8c8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b3bc3f3d8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3f3dc18"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3f3dda0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3f3c020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3f3c1a8"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3f3c330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3f3c4b8"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3f3c640"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3f3c7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b3bc3f301e8" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b3bc3f301e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3f30538"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3f306c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3f30848"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3f309d0"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3f30b58"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3f30ce0"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3f30e68"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3f2f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b3bc3f3f5b8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b3bc3f3f5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3f3f908"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3f3fa90"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3f3fc18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3f3fda0"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3f3e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3f3e1a8"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3f3e330"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3f3e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b3bc3f3ca50" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b3bc3f3ca50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3f3cda0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3f3b020"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3f3b1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3f3b330"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3f3b4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3f3b640"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3f3b7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3f3b950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b3bc3f2f2a8" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b3bc3f2f2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3f2f5f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3f2f780"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3f2f908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3f2fa90"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3f2fc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3f2fda0"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3f2e020"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3f2e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b3bc3f3e740" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b3bc3f3e740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3f3ea90"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3f3ec18"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3f3eda0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3f3d020"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3f3d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3f3d330"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3f3d4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3f3d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b3bc3f3bbd8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b3bc3f3bbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3f3a020"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3f3a1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3f3a330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3f3a4b8"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3f3a640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3f3a7c8"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3f3a950"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3f3aad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bc475a6a8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3bc475a6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc475a9f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc475ab80"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc475ad08"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc4759020"/>
        <function-ref name="get" scoped="" ref="0x2b3bc47591a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc4759330"/>
        <function-ref name="set" scoped="" ref="0x2b3bc47594b8"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc4759640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bc4757710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3bc4757710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc4757a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc4757be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc4757d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc4756020"/>
        <function-ref name="get" scoped="" ref="0x2b3bc47561a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc4756330"/>
        <function-ref name="set" scoped="" ref="0x2b3bc47564b8"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc4756640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bc4754710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3bc4754710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc4754a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc4754be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc4754d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc4753020"/>
        <function-ref name="get" scoped="" ref="0x2b3bc47531a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc4753330"/>
        <function-ref name="set" scoped="" ref="0x2b3bc47534b8"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc4753640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bc4751710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3bc4751710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc4751a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc4751be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc4751d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc4750020"/>
        <function-ref name="get" scoped="" ref="0x2b3bc47501a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc4750330"/>
        <function-ref name="set" scoped="" ref="0x2b3bc47504b8"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc4750640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bc474e710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3bc474e710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc474ea60"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc474ebe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc474ed70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc474d020"/>
        <function-ref name="get" scoped="" ref="0x2b3bc474d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc474d330"/>
        <function-ref name="set" scoped="" ref="0x2b3bc474d4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc474d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bc474b710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3bc474b710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc474ba60"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc474bbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc474bd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc474a020"/>
        <function-ref name="get" scoped="" ref="0x2b3bc474a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc474a330"/>
        <function-ref name="set" scoped="" ref="0x2b3bc474a4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc474a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bc4748710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3bc4748710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc4748a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc4748be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc4748d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc4747020"/>
        <function-ref name="get" scoped="" ref="0x2b3bc47471a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc4747330"/>
        <function-ref name="set" scoped="" ref="0x2b3bc47474b8"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc4747640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bc4777710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3bc4777710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc4777a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc4777be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc4777d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc4776020"/>
        <function-ref name="get" scoped="" ref="0x2b3bc47761a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc4776330"/>
        <function-ref name="set" scoped="" ref="0x2b3bc47764b8"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc4776640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bc3f45ac0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3bc3f45ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3f45e10"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3f53020"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3f531a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3f53330"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3f534b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3f53640"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3f537c8"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3f53950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bc3f62db8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3bc3f62db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3f61170"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3f612f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3f61480"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3f61608"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3f61790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3f61918"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3f61aa0"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3f61c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bc3f5c3e0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3bc3f5c3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3f5c730"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3f5c8b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3f5ca40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3f5cbc8"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3f5cd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3f5b020"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3f5b1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3f5b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bc3f6a7e8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3bc3f6a7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3f6ab38"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3f6acc0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3f6ae48"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3f69020"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3f691a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3f69330"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3f694b8"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3f69640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bc3f66c38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3bc3f66c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3f65020"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3f651a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3f65330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3f654b8"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3f65640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3f657c8"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3f65950"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3f65ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bc3f74020" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3bc3f74020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3f74370"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3f744f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3f74680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3f74808"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3f74990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3f74b18"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3f74ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3f74e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bc3f6f480" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3bc3f6f480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3f6f7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3f6f958"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3f6fae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3f6fc68"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3f6fdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3f6e020"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3f6e1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3f6e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bc3f7f7e8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3bc3f7f7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3f7fb38"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3f7fcc0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3f7fe48"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3f7e020"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3f7e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3f7e330"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3f7e4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3f7e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bc3f7a970" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3bc3f7a970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3f7acc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3f7ae48"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3f79020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3f791a8"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3f79330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3f794b8"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3f79640"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3f797c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bc3f8aab0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3bc3f8aab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3f8ae00"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3f88020"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3f881a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3f88330"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3f884b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3f88640"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3f887c8"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3f88950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bc3f85c38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3bc3f85c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3f84020"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3f841a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3f84330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3f844b8"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3f84640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3f847c8"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3f84950"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3f84ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bc3f93020" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3bc3f93020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3f93370"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3f934f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3f93680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3f93808"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3f93990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3f93b18"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3f93ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3f93e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3bc3f8f180" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3bc3f8f180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc3f8f4d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc3f8f658"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc3f8f7e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc3f8f968"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3f8faf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc3f8fc78"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3f8fe00"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc3f8d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b3bc3fcd1b8" loc="27:/opt/tinyos-2.1.2/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b3bc3fcd1b8"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2b3bc3d1a6f0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2b3bc3d1a6f0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b3bc3fcd508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2b3bc3fcd7e8" loc="28:/opt/tinyos-2.1.2/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b3bc3fcd7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b3bc3fcdb38"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b3bc3fcdcc0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b3bc3fcde48"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b3bc3fcc020"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b3bc3fcc1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x2b3bc3fea560" loc="60:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b3bc3fea560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b3bc3fea8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2b3bc3e46e20" loc="57:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b3bc3e46e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b3bc3feb1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x2b3bc3febe68" loc="59:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b3bc3febe68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b3bc3fea1e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x2b3bc3feb490" loc="58:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b3bc3feb490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b3bc3feb7e0"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b3bc3feb968"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b3bc3febaf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2b3bc3d22728" loc="48:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2b3bc3d22728"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b3bc3d22a78"/>
        <function-ref name="runTask" scoped="" ref="0x2b3bc3d22c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2b3bc3d21be8" loc="47:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b3bc3d21be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b3bc3d19020"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b3bc3d191a8"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b3bc3d19330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2b3bc3dddb08" loc="56:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2b3bc3dddb08"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b3bc3ddde58"/>
        <function-ref name="runTask" scoped="" ref="0x2b3bc3ddb020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x2b3bc3dda020" loc="57:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2b3bc3dda020"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2b3bc3dda370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2b3bc3ddec00" loc="55:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b3bc3ddec00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b3bc3ddd020"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b3bc3ddd1a8"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b3bc3ddd330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x2b3bc3dfe7b8" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b3bc3dfe7b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b3bc3dfeb08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x2b3bc3d2bdc8" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2b3bc3d2bdc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2b3bc3df4170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x2b3bc3dff240" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2b3bc3dff240"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b3bc3dff590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2b3bc3e3a5f8" loc="46:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b3bc3e3a5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b3bc3e3a948"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b3bc3e3aad0"/>
        <function-ref name="led1On" scoped="" ref="0x2b3bc3e3ac58"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b3bc3e3ade0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b3bc3ff5020"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3ff51a8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b3bc3ff5330"/>
        <function-ref name="led2Off" scoped="" ref="0x2b3bc3ff5950"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3ff54b8"/>
        <function-ref name="led0On" scoped="" ref="0x2b3bc3ff5640"/>
        <function-ref name="led2On" scoped="" ref="0x2b3bc3ff57c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x2b3bc4006540" loc="50:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x2b3bc4006540"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc4006890"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc4006a18"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc4006ba0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc4006d28"/>
        <function-ref name="get" scoped="" ref="0x2b3bc4005020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc40051a8"/>
        <function-ref name="set" scoped="" ref="0x2b3bc4005330"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc40054b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b3bc3ff4838" loc="46:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b3bc3ff4838"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b3bc3ff4b88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x2b3bc40057d0" loc="51:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x2b3bc40057d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc4005b20"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc4005ca8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc4005e30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc4004020"/>
        <function-ref name="get" scoped="" ref="0x2b3bc40041a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc4004330"/>
        <function-ref name="set" scoped="" ref="0x2b3bc40044b8"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc4004640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2b3bc3ff4e00" loc="47:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b3bc3ff4e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b3bc3ff11a8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b3bc3ff1330"/>
        <function-ref name="led1On" scoped="" ref="0x2b3bc3ff14b8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b3bc3ff1640"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b3bc3ff17c8"/>
        <function-ref name="get" scoped="" ref="0x2b3bc3ff1950"/>
        <function-ref name="led1Off" scoped="" ref="0x2b3bc3ff1ad8"/>
        <function-ref name="led2Off" scoped="" ref="0x2b3bc40061a8"/>
        <function-ref name="set" scoped="" ref="0x2b3bc3ff1c60"/>
        <function-ref name="led0On" scoped="" ref="0x2b3bc3ff1de8"/>
        <function-ref name="led2On" scoped="" ref="0x2b3bc4006020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x2b3bc4004958" loc="52:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x2b3bc4004958"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc4004ca8"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc4004e30"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc4003020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc40031a8"/>
        <function-ref name="get" scoped="" ref="0x2b3bc4003330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc40034b8"/>
        <function-ref name="set" scoped="" ref="0x2b3bc4003640"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc40037c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x2b3bc3ff2d70" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x2b3bc3ff2d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc40140f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc4014278"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc4014400"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc4014588"/>
        <function-ref name="get" scoped="" ref="0x2b3bc4014710"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc4014898"/>
        <function-ref name="set" scoped="" ref="0x2b3bc4014a20"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc4014ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x2b3bc4013020" loc="45:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x2b3bc4013020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc4013370"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc40134f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc4013680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc4013808"/>
        <function-ref name="get" scoped="" ref="0x2b3bc4013990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc4013b18"/>
        <function-ref name="set" scoped="" ref="0x2b3bc4013ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc4013e28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x2b3bc40272d8" loc="47:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b3bc40272d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b3bc4027628"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x2b3bc40121b0" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x2b3bc40121b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc4012500"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc4012688"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc4012810"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc4012998"/>
        <function-ref name="get" scoped="" ref="0x2b3bc4012b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc4012ca8"/>
        <function-ref name="set" scoped="" ref="0x2b3bc4012e30"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc4027020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b3bc4021e28" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="SenseAppC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b3bc4021e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b3bc3da0608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b3bc3da0960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b3bc41d30c0"/>
        <function-ref name="fired" scoped="" ref="0x2b3bc41d6798"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b3bc41d54d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b3bc41d5088"/>
        <function-ref name="getdt" scoped="" ref="0x2b3bc41d3960"/>
        <function-ref name="gett0" scoped="" ref="0x2b3bc41d3510"/>
        <function-ref name="isRunning" scoped="" ref="0x2b3bc41d6be8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b3bc41d79e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b3bc41d5aa8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b3bc41d7e80"/>
        <function-ref name="stop" scoped="" ref="0x2b3bc41d6348"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2b3bc402e6a0" loc="49:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2b3bc402e6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b3bc3da0608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b3bc3da0960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b3bc402aa18"/>
        <function-ref name="fired" scoped="" ref="0x2b3bc402c158"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b3bc402ce48"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b3bc402c9f8"/>
        <function-ref name="getdt" scoped="" ref="0x2b3bc40292e8"/>
        <function-ref name="gett0" scoped="" ref="0x2b3bc402ae68"/>
        <function-ref name="isRunning" scoped="" ref="0x2b3bc402c5a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b3bc402d370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b3bc402a448"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b3bc402d810"/>
        <function-ref name="stop" scoped="" ref="0x2b3bc402dcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2b3bc403bdb8" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2b3bc403bdb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b3bc3da0608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b3bc3da0960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b3bc4036088"/>
        <function-ref name="fired" scoped="" ref="0x2b3bc4039708"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b3bc4038470"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b3bc4038020"/>
        <function-ref name="getdt" scoped="" ref="0x2b3bc4036928"/>
        <function-ref name="gett0" scoped="" ref="0x2b3bc40364d8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b3bc4039b58"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b3bc403a930"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b3bc4038a40"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b3bc403add0"/>
        <function-ref name="stop" scoped="" ref="0x2b3bc40392b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b3bc4047298" loc="47:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b3bc4047298"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b3bc3da0608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b3bc3da0960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b3bc4047e18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b3bc403b0c0" loc="45:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b3bc403b0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b3bc403b410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x2b3bc404e3b8" loc="29:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x2b3bc404e3b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b3bc3da0608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b3bc3da0960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b3bc3434608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b3bc404d130"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b3bc404da40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b3bc404d5b8"/>
        <function-ref name="overflow" scoped="" ref="0x2b3bc4049020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b3bc40348a8" loc="27:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b3bc40348a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b3bc4034bf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x2b3bc40421c8" loc="28:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x2b3bc40421c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b3bc3da0608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b3bc3da0960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b3bc3434608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b3bc4050918"/>
        <function-ref name="fired" scoped="" ref="0x2b3bc4041980"/>
        <function-ref name="startAt" scoped="" ref="0x2b3bc4050310"/>
        <function-ref name="isRunning" scoped="" ref="0x2b3bc4041e08"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b3bc4050da0"/>
        <function-ref name="start" scoped="" ref="0x2b3bc4041020"/>
        <function-ref name="stop" scoped="" ref="0x2b3bc40414f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b3bc4141998" loc="26:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b3bc4141998"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b3bc3da0608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b3bc3da0960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b3bc3434608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b3bc413d020"/>
        <function-ref name="fired" scoped="" ref="0x2b3bc413e0c0"/>
        <function-ref name="startAt" scoped="" ref="0x2b3bc413e9d0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b3bc413e548"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b3bc413d4a8"/>
        <function-ref name="start" scoped="" ref="0x2b3bc4140730"/>
        <function-ref name="stop" scoped="" ref="0x2b3bc4140c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b3bc41411f0" loc="25:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b3bc41411f0"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x2b3bc3d1a388"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x2b3bc3d1a388"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b3bc4141540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b3bc413da90" loc="27:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b3bc413da90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b3bc3da0608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b3bc3da0960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b3bc3434608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b3bc413c828"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b3bc4154190"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b3bc413ccb0"/>
        <function-ref name="overflow" scoped="" ref="0x2b3bc4154618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x2b3bc4856708" loc="31:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b3bc4856708"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2b3bc4856a58"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b3bc4856be0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b3bc4856d68"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b3bc4855020"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b3bc48551a8"/>
        <function-ref name="setControl" scoped="" ref="0x2b3bc4855330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b3bc4820478" loc="26:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b3bc4820478"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b3bc3da0608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b3bc3da0960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b3bc3434608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b3bc481eb18"/>
        <function-ref name="fired" scoped="" ref="0x2b3bc481fb80"/>
        <function-ref name="startAt" scoped="" ref="0x2b3bc481e510"/>
        <function-ref name="isRunning" scoped="" ref="0x2b3bc481e088"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b3bc481d020"/>
        <function-ref name="start" scoped="" ref="0x2b3bc481f220"/>
        <function-ref name="stop" scoped="" ref="0x2b3bc481f6f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b3bc4821c70" loc="25:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b3bc4821c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b3bc4820020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b3bc481d608" loc="27:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b3bc481d608"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b3bc3da0608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b3bc3da0960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b3bc3434608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b3bc481b3a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b3bc481bcb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b3bc481b830"/>
        <function-ref name="overflow" scoped="" ref="0x2b3bc481a190"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x2b3bc48518c0" loc="33:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2b3bc48518c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x2b3bc4851c10"/>
        <function-ref name="compareBusy" scoped="" ref="0x2b3bc4851d98"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x2b3bc4850020"/>
        <function-ref name="countBusy" scoped="" ref="0x2b3bc48501a8"/>
        <function-ref name="getAssr" scoped="" ref="0x2b3bc4850330"/>
        <function-ref name="setAssr" scoped="" ref="0x2b3bc48504b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x2b3bc48556c0" loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b3bc48556c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b3bc4851020"/>
        <function-ref name="fired" scoped="" ref="0x2b3bc4854d08"/>
        <function-ref name="get" scoped="" ref="0x2b3bc48543a8"/>
        <function-ref name="reset" scoped="" ref="0x2b3bc48521f8"/>
        <function-ref name="isOn" scoped="" ref="0x2b3bc48514a8"/>
        <function-ref name="set" scoped="" ref="0x2b3bc4854830"/>
        <function-ref name="start" scoped="" ref="0x2b3bc4852680"/>
        <function-ref name="stop" scoped="" ref="0x2b3bc4852b08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b3bc481a710" loc="30:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b3bc481a710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b3bc4816930"/>
        <function-ref name="test" scoped="" ref="0x2b3bc4816020"/>
        <function-ref name="get" scoped="" ref="0x2b3bc48193a8"/>
        <function-ref name="setScale" scoped="" ref="0x2b3bc4816db8"/>
        <function-ref name="getScale" scoped="" ref="0x2b3bc48562f0"/>
        <function-ref name="reset" scoped="" ref="0x2b3bc48181f8"/>
        <function-ref name="overflow" scoped="" ref="0x2b3bc4819d08"/>
        <function-ref name="isOn" scoped="" ref="0x2b3bc48164a8"/>
        <function-ref name="set" scoped="" ref="0x2b3bc4819830"/>
        <function-ref name="start" scoped="" ref="0x2b3bc4818680"/>
        <function-ref name="stop" scoped="" ref="0x2b3bc4818b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b3bc40cb020" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b3bc40cb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2b3bc40cb370"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b3bc40cb4f8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b3bc40cb680"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b3bc40cb808"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b3bc40cb990"/>
        <function-ref name="setControl" scoped="" ref="0x2b3bc40cbb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x2b3bc40de228" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2b3bc40de228"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x2b3bc40de578"/>
        <function-ref name="compareBusy" scoped="" ref="0x2b3bc40de700"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x2b3bc40de888"/>
        <function-ref name="countBusy" scoped="" ref="0x2b3bc40dea10"/>
        <function-ref name="getAssr" scoped="" ref="0x2b3bc40deb98"/>
        <function-ref name="setAssr" scoped="" ref="0x2b3bc40ded20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b3bc40ca020" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b3bc40ca020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b3bc40df7a8"/>
        <function-ref name="fired" scoped="" ref="0x2b3bc40e1560"/>
        <function-ref name="get" scoped="" ref="0x2b3bc40caba0"/>
        <function-ref name="reset" scoped="" ref="0x2b3bc40e19e8"/>
        <function-ref name="isOn" scoped="" ref="0x2b3bc40dfc30"/>
        <function-ref name="set" scoped="" ref="0x2b3bc40e1088"/>
        <function-ref name="start" scoped="" ref="0x2b3bc40e1e70"/>
        <function-ref name="stop" scoped="" ref="0x2b3bc40df320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b3bc40d3de8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b3bc40d3de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b3bc40cc0f8"/>
        <function-ref name="test" scoped="" ref="0x2b3bc40ce798"/>
        <function-ref name="get" scoped="" ref="0x2b3bc40d0a18"/>
        <function-ref name="setScale" scoped="" ref="0x2b3bc40cc580"/>
        <function-ref name="getScale" scoped="" ref="0x2b3bc40cca58"/>
        <function-ref name="reset" scoped="" ref="0x2b3bc40cf980"/>
        <function-ref name="overflow" scoped="" ref="0x2b3bc40cf4f8"/>
        <function-ref name="isOn" scoped="" ref="0x2b3bc40cec20"/>
        <function-ref name="set" scoped="" ref="0x2b3bc40cf020"/>
        <function-ref name="start" scoped="" ref="0x2b3bc40cfe08"/>
        <function-ref name="stop" scoped="" ref="0x2b3bc40ce310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b3bc40ed160" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b3bc40ed160"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2b3bc40ed4b0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b3bc40ed638"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b3bc40ed7c0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b3bc40ed948"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b3bc40edad0"/>
        <function-ref name="setControl" scoped="" ref="0x2b3bc40edc58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x2b3bc40e8268" loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b3bc40e8268"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b3bc40e85b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x2b3bc40e8968" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2b3bc40e8968"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x2b3bc40e8cb8"/>
        <function-ref name="compareBusy" scoped="" ref="0x2b3bc40e8e40"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x2b3bc40e7020"/>
        <function-ref name="countBusy" scoped="" ref="0x2b3bc40e71a8"/>
        <function-ref name="getAssr" scoped="" ref="0x2b3bc40e7330"/>
        <function-ref name="setAssr" scoped="" ref="0x2b3bc40e74b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b3bc40ec190" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b3bc40ec190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b3bc40e9930"/>
        <function-ref name="fired" scoped="" ref="0x2b3bc40ea6d0"/>
        <function-ref name="get" scoped="" ref="0x2b3bc40ecd10"/>
        <function-ref name="reset" scoped="" ref="0x2b3bc40eab58"/>
        <function-ref name="isOn" scoped="" ref="0x2b3bc40e9db8"/>
        <function-ref name="set" scoped="" ref="0x2b3bc40ea1f8"/>
        <function-ref name="start" scoped="" ref="0x2b3bc40e9020"/>
        <function-ref name="stop" scoped="" ref="0x2b3bc40e94a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b3bc40da0f8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b3bc40da0f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b3bc40d6270"/>
        <function-ref name="test" scoped="" ref="0x2b3bc40d7930"/>
        <function-ref name="get" scoped="" ref="0x2b3bc40dac78"/>
        <function-ref name="setScale" scoped="" ref="0x2b3bc40d66f8"/>
        <function-ref name="getScale" scoped="" ref="0x2b3bc40d6bd0"/>
        <function-ref name="reset" scoped="" ref="0x2b3bc40d9a90"/>
        <function-ref name="overflow" scoped="" ref="0x2b3bc40d9608"/>
        <function-ref name="isOn" scoped="" ref="0x2b3bc40d7db8"/>
        <function-ref name="set" scoped="" ref="0x2b3bc40d9130"/>
        <function-ref name="start" scoped="" ref="0x2b3bc40d7020"/>
        <function-ref name="stop" scoped="" ref="0x2b3bc40d74a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x2b3bc4176cf0" loc="74:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x2b3bc4176cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b3bc41750a0"/>
        <function-ref name="runTask" scoped="" ref="0x2b3bc4175228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2b3bc417ac70" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b3bc417ac70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b3bc3da0608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b3bc3da0960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b3bc3434608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b3bc4176410"/>
        <function-ref name="fired" scoped="" ref="0x2b3bc41774a8"/>
        <function-ref name="startAt" scoped="" ref="0x2b3bc4177db8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b3bc4177930"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b3bc4176898"/>
        <function-ref name="start" scoped="" ref="0x2b3bc41789f0"/>
        <function-ref name="stop" scoped="" ref="0x2b3bc4177020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b3bc4163ab0" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b3bc4163ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b3bc3da0608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b3bc3da0960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b3bc417bd60"/>
        <function-ref name="fired" scoped="" ref="0x2b3bc417c470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b3bc417b1c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b3bc417cd10"/>
        <function-ref name="getdt" scoped="" ref="0x2b3bc417a648"/>
        <function-ref name="gett0" scoped="" ref="0x2b3bc417a1f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b3bc417c8c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b3bc417e620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b3bc417b790"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b3bc417eac0"/>
        <function-ref name="stop" scoped="" ref="0x2b3bc417c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x2b3bc41ce020" loc="71:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x2b3bc41ce020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b3bc41ce370"/>
        <function-ref name="runTask" scoped="" ref="0x2b3bc41ce4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x2b3bc41b9e80" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x2b3bc41b9e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b3bc3da0608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b3bc3da0960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b3bc41d0238"/>
        <function-ref name="fired" scoped="" ref="0x2b3bc41d2910"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b3bc41d1648"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b3bc41d11f8"/>
        <function-ref name="getdt" scoped="" ref="0x2b3bc41d0ad8"/>
        <function-ref name="gett0" scoped="" ref="0x2b3bc41d0688"/>
        <function-ref name="isRunning" scoped="" ref="0x2b3bc41d2d60"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b3bc41b89f0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b3bc41d1c18"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b3bc41d2020"/>
        <function-ref name="stop" scoped="" ref="0x2b3bc41d24c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b3bc41bfaf8" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b3bc41bfaf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b3bc3da0608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b3bc3da0960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b3bc41b9020"/>
        <function-ref name="fired" scoped="" ref="0x2b3bc41bc530"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b3bc41bb2d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b3bc41bce10"/>
        <function-ref name="getdt" scoped="" ref="0x2b3bc41b9900"/>
        <function-ref name="gett0" scoped="" ref="0x2b3bc41b9490"/>
        <function-ref name="isRunning" scoped="" ref="0x2b3bc41bc9a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b3bc41be6f0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b3bc41bb8c8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b3bc41bebb0"/>
        <function-ref name="stop" scoped="" ref="0x2b3bc41bc0c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b3bc41cb440" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b3bc41cb440"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b3bc3da0608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b3bc3da0960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b3bc41de020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b3bc41de648" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b3bc41de648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b3bc3da0608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b3bc3da0960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b3bc3434608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b3bc41dd3f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b3bc41ddd00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b3bc41dd878"/>
        <function-ref name="overflow" scoped="" ref="0x2b3bc41dc1f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2b3bc41ec0a0" loc="19:/opt/tinyos-2.1.2/tos/sensorboards/mts300/PhotoC.nc">
      <component-ref qname="SenseAppC.PhotoC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2b3bc41ec0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b3bc3433b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bc41ecbe8"/>
        <function-ref name="readDone" scoped="" ref="0x2b3bc44f1088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2b3bc41e7538" loc="3:/opt/tinyos-2.1.2/tos/sensorboards/mts300/ArbitratedPhotoDeviceP.nc">
      <component-ref qname="ArbitratedPhotoDeviceP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2b3bc41e7538"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b3bc3433b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bc41e60c0"/>
        <function-ref name="readDone" scoped="" ref="0x2b3bc41e6510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadTemp" ref="0x2b3bc41f51c8" loc="8:/opt/tinyos-2.1.2/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <component-ref qname="PhotoTempDeviceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadTemp" scoped="" ref="0x2b3bc41f51c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b3bc3433b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bc41f5d10"/>
        <function-ref name="readDone" scoped="" ref="0x2b3bc41f41c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PhotoResource" ref="0x2b3bc41fabe8" loc="5:/opt/tinyos-2.1.2/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <component-ref qname="PhotoTempDeviceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PhotoResource" scoped="" ref="0x2b3bc41fabe8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b3bc41e1020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b3bc41e11a8"/>
        <function-ref name="request" scoped="" ref="0x2b3bc41e1330"/>
        <function-ref name="granted" scoped="" ref="0x2b3bc41e14b8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b3bc41e1640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TempResource" ref="0x2b3bc41f9020" loc="6:/opt/tinyos-2.1.2/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <component-ref qname="PhotoTempDeviceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TempResource" scoped="" ref="0x2b3bc41f9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b3bc41f9370"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b3bc41f94f8"/>
        <function-ref name="request" scoped="" ref="0x2b3bc41f9680"/>
        <function-ref name="granted" scoped="" ref="0x2b3bc41f9808"/>
        <function-ref name="isOwner" scoped="" ref="0x2b3bc41f9990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadPhoto" ref="0x2b3bc41f83f0" loc="7:/opt/tinyos-2.1.2/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <component-ref qname="PhotoTempDeviceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadPhoto" scoped="" ref="0x2b3bc41f83f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b3bc3433b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bc41f7020"/>
        <function-ref name="readDone" scoped="" ref="0x2b3bc41f7470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1_Interrupt" ref="0x2b3bc42006d0" loc="36:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1_Interrupt" scoped="" ref="0x2b3bc42006d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b3bc4200a20"/>
        <function-ref name="disable" scoped="" ref="0x2b3bc4200ba8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b3bc4200d30"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b3bc41ff020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc0" ref="0x2b3bc4215020" loc="45:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc0" scoped="" ref="0x2b3bc4215020"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2b3bc4215370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW3" ref="0x2b3bc420c638" loc="23:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW3" scoped="" ref="0x2b3bc420c638"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc420c988"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc420cb10"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc420cc98"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc420ce20"/>
        <function-ref name="get" scoped="" ref="0x2b3bc420b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc420b1a8"/>
        <function-ref name="set" scoped="" ref="0x2b3bc420b330"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc420b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW6" ref="0x2b3bc4209ad0" loc="26:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW6" scoped="" ref="0x2b3bc4209ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc4209e20"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc4208020"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc42081a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc4208330"/>
        <function-ref name="get" scoped="" ref="0x2b3bc42084b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc4208640"/>
        <function-ref name="set" scoped="" ref="0x2b3bc42087c8"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc4208950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc3" ref="0x2b3bc42133c0" loc="48:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc3" scoped="" ref="0x2b3bc42133c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2b3bc4213710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc5" ref="0x2b3bc42120f0" loc="50:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc5" scoped="" ref="0x2b3bc42120f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2b3bc4212640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x2b3bc4205020" loc="30:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x2b3bc4205020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc4205370"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc42054f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc4205680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc4205808"/>
        <function-ref name="get" scoped="" ref="0x2b3bc4205990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc4205b18"/>
        <function-ref name="set" scoped="" ref="0x2b3bc4205ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc4205e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="USART1_TXD" ref="0x2b3bc4217020" loc="42:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="USART1_TXD" scoped="" ref="0x2b3bc4217020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc4217370"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc42174f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc4217680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc4217808"/>
        <function-ref name="get" scoped="" ref="0x2b3bc4217990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc4217b18"/>
        <function-ref name="set" scoped="" ref="0x2b3bc4217ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc4217e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW1" ref="0x2b3bc41f0328" loc="21:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW1" scoped="" ref="0x2b3bc41f0328"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc41f0678"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc41f0800"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc41f0988"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc41f0b10"/>
        <function-ref name="get" scoped="" ref="0x2b3bc41f0c98"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc41f0e20"/>
        <function-ref name="set" scoped="" ref="0x2b3bc41ef020"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc41ef1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW4" ref="0x2b3bc420b7c0" loc="24:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW4" scoped="" ref="0x2b3bc420b7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc420bb10"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc420bc98"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc420be20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc420a020"/>
        <function-ref name="get" scoped="" ref="0x2b3bc420a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc420a330"/>
        <function-ref name="set" scoped="" ref="0x2b3bc420a4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc420a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3_Interrupt" ref="0x2b3bc421a020" loc="38:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3_Interrupt" scoped="" ref="0x2b3bc421a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b3bc421a370"/>
        <function-ref name="disable" scoped="" ref="0x2b3bc421a4f8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b3bc421a680"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b3bc421a808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc1" ref="0x2b3bc4215690" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc1" scoped="" ref="0x2b3bc4215690"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2b3bc42159e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="USART1_RXD" ref="0x2b3bc4219e28" loc="41:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="USART1_RXD" scoped="" ref="0x2b3bc4219e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc42181a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc4218330"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc42184b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc4218640"/>
        <function-ref name="get" scoped="" ref="0x2b3bc42187c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc4218950"/>
        <function-ref name="set" scoped="" ref="0x2b3bc4218ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc4218c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW7" ref="0x2b3bc4208c58" loc="27:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW7" scoped="" ref="0x2b3bc4208c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc4207020"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc42071a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc4207330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc42074b8"/>
        <function-ref name="get" scoped="" ref="0x2b3bc4207640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc42077c8"/>
        <function-ref name="set" scoped="" ref="0x2b3bc4207950"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc4207ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0_Interrupt" ref="0x2b3bc421b9c8" loc="35:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0_Interrupt" scoped="" ref="0x2b3bc421b9c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b3bc421be18"/>
        <function-ref name="disable" scoped="" ref="0x2b3bc4200020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b3bc42001a8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b3bc4200330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc6" ref="0x2b3bc4212960" loc="51:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc6" scoped="" ref="0x2b3bc4212960"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2b3bc4212cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x2b3bc4204190" loc="31:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x2b3bc4204190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc42044e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc4204668"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc42047f0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc4204978"/>
        <function-ref name="get" scoped="" ref="0x2b3bc4204b00"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc4204c88"/>
        <function-ref name="set" scoped="" ref="0x2b3bc4204e10"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc4203020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW2" ref="0x2b3bc41ef4b0" loc="22:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW2" scoped="" ref="0x2b3bc41ef4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc41ef800"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc41ef988"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc41efb10"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc41efc98"/>
        <function-ref name="get" scoped="" ref="0x2b3bc41efe20"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc420c020"/>
        <function-ref name="set" scoped="" ref="0x2b3bc420c1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc420c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW5" ref="0x2b3bc420a948" loc="25:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW5" scoped="" ref="0x2b3bc420a948"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc420ac98"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc420ae20"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc4209020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc42091a8"/>
        <function-ref name="get" scoped="" ref="0x2b3bc4209330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc42094b8"/>
        <function-ref name="set" scoped="" ref="0x2b3bc4209640"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc42097c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc2" ref="0x2b3bc4215d00" loc="47:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc2" scoped="" ref="0x2b3bc4215d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2b3bc42130a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc4" ref="0x2b3bc4213a30" loc="49:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc4" scoped="" ref="0x2b3bc4213a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2b3bc4213d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x2b3bc4207df0" loc="29:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x2b3bc4207df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc4206170"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc42062f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc4206480"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc4206608"/>
        <function-ref name="get" scoped="" ref="0x2b3bc4206790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc4206918"/>
        <function-ref name="set" scoped="" ref="0x2b3bc4206aa0"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc4206c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2_Interrupt" ref="0x2b3bc41ff3c0" loc="37:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2_Interrupt" scoped="" ref="0x2b3bc41ff3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b3bc41ff710"/>
        <function-ref name="disable" scoped="" ref="0x2b3bc41ff898"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b3bc41ffa20"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b3bc41ffba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="USART1_CLK" ref="0x2b3bc421ab58" loc="40:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="USART1_CLK" scoped="" ref="0x2b3bc421ab58"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc4219020"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc42191a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc4219330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc42194b8"/>
        <function-ref name="get" scoped="" ref="0x2b3bc4219640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc42197c8"/>
        <function-ref name="set" scoped="" ref="0x2b3bc4219950"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc4219ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc7" ref="0x2b3bc4211020" loc="52:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc7" scoped="" ref="0x2b3bc4211020"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2b3bc4211370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW0" ref="0x2b3bc41f1120" loc="20:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW0" scoped="" ref="0x2b3bc41f1120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc41f1470"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc41f15f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc41f1780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc41f1908"/>
        <function-ref name="get" scoped="" ref="0x2b3bc41f1a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc41f1c18"/>
        <function-ref name="set" scoped="" ref="0x2b3bc41f1da0"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc41f0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x2b3bc4203338" loc="32:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x2b3bc4203338"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc4203688"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc4203810"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc4203998"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc4203b20"/>
        <function-ref name="get" scoped="" ref="0x2b3bc4203ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc4203e30"/>
        <function-ref name="set" scoped="" ref="0x2b3bc4202020"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc42021a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc0" ref="0x2b3bc420e2a8" loc="18:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc0" scoped="" ref="0x2b3bc420e2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2b3bc420e5f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc3" ref="0x2b3bc420d690" loc="21:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc3" scoped="" ref="0x2b3bc420d690"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2b3bc420d9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc5" ref="0x2b3bc422a3c0" loc="23:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc5" scoped="" ref="0x2b3bc422a3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2b3bc422a710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc1" ref="0x2b3bc420e918" loc="19:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc1" scoped="" ref="0x2b3bc420e918"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2b3bc420ec68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc6" ref="0x2b3bc422aa30" loc="24:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc6" scoped="" ref="0x2b3bc422aa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2b3bc422ad80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc2" ref="0x2b3bc420d020" loc="20:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc2" scoped="" ref="0x2b3bc420d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2b3bc420d370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc4" ref="0x2b3bc420dd00" loc="22:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc4" scoped="" ref="0x2b3bc420dd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2b3bc422a0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc7" ref="0x2b3bc42290f0" loc="25:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc7" scoped="" ref="0x2b3bc42290f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2b3bc4229440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int6" ref="0x2b3bc422f390" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int6" scoped="" ref="0x2b3bc422f390"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bc422f6e0"/>
        <function-ref name="fired" scoped="" ref="0x2b3bc422f868"/>
        <function-ref name="disable" scoped="" ref="0x2b3bc422f9f0"/>
        <function-ref name="edge" scoped="" ref="0x2b3bc422fb78"/>
        <function-ref name="enable" scoped="" ref="0x2b3bc422fd00"/>
        <function-ref name="getValue" scoped="" ref="0x2b3bc422e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x2b3bc4238390" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x2b3bc4238390"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bc42386e0"/>
        <function-ref name="fired" scoped="" ref="0x2b3bc4238868"/>
        <function-ref name="disable" scoped="" ref="0x2b3bc42389f0"/>
        <function-ref name="edge" scoped="" ref="0x2b3bc4238b78"/>
        <function-ref name="enable" scoped="" ref="0x2b3bc4238d00"/>
        <function-ref name="getValue" scoped="" ref="0x2b3bc4237020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int4" ref="0x2b3bc4231390" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int4" scoped="" ref="0x2b3bc4231390"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bc42316e0"/>
        <function-ref name="fired" scoped="" ref="0x2b3bc4231868"/>
        <function-ref name="disable" scoped="" ref="0x2b3bc42319f0"/>
        <function-ref name="edge" scoped="" ref="0x2b3bc4231b78"/>
        <function-ref name="enable" scoped="" ref="0x2b3bc4231d00"/>
        <function-ref name="getValue" scoped="" ref="0x2b3bc4230020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int7" ref="0x2b3bc422e390" loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int7" scoped="" ref="0x2b3bc422e390"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bc422e6e0"/>
        <function-ref name="fired" scoped="" ref="0x2b3bc422e868"/>
        <function-ref name="disable" scoped="" ref="0x2b3bc422e9f0"/>
        <function-ref name="edge" scoped="" ref="0x2b3bc422eb78"/>
        <function-ref name="enable" scoped="" ref="0x2b3bc422ed00"/>
        <function-ref name="getValue" scoped="" ref="0x2b3bc422d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x2b3bc4237390" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x2b3bc4237390"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bc42376e0"/>
        <function-ref name="fired" scoped="" ref="0x2b3bc4237868"/>
        <function-ref name="disable" scoped="" ref="0x2b3bc42379f0"/>
        <function-ref name="edge" scoped="" ref="0x2b3bc4237b78"/>
        <function-ref name="enable" scoped="" ref="0x2b3bc4237d00"/>
        <function-ref name="getValue" scoped="" ref="0x2b3bc4232020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int5" ref="0x2b3bc4230390" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int5" scoped="" ref="0x2b3bc4230390"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bc42306e0"/>
        <function-ref name="fired" scoped="" ref="0x2b3bc4230868"/>
        <function-ref name="disable" scoped="" ref="0x2b3bc42309f0"/>
        <function-ref name="edge" scoped="" ref="0x2b3bc4230b78"/>
        <function-ref name="enable" scoped="" ref="0x2b3bc4230d00"/>
        <function-ref name="getValue" scoped="" ref="0x2b3bc422f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x2b3bc42333c8" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x2b3bc42333c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bc4233718"/>
        <function-ref name="fired" scoped="" ref="0x2b3bc42338a0"/>
        <function-ref name="disable" scoped="" ref="0x2b3bc4233a28"/>
        <function-ref name="edge" scoped="" ref="0x2b3bc4233bb0"/>
        <function-ref name="enable" scoped="" ref="0x2b3bc4233d38"/>
        <function-ref name="getValue" scoped="" ref="0x2b3bc4238020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x2b3bc4232390" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x2b3bc4232390"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bc42326e0"/>
        <function-ref name="fired" scoped="" ref="0x2b3bc4232868"/>
        <function-ref name="disable" scoped="" ref="0x2b3bc42329f0"/>
        <function-ref name="edge" scoped="" ref="0x2b3bc4232b78"/>
        <function-ref name="enable" scoped="" ref="0x2b3bc4232d00"/>
        <function-ref name="getValue" scoped="" ref="0x2b3bc4231020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig6" ref="0x2b3bc4243020" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig6" scoped="" ref="0x2b3bc4243020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b3bc4243370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig1" ref="0x2b3bc4247800" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig1" scoped="" ref="0x2b3bc4247800"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b3bc4247b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig4" ref="0x2b3bc4244020" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig4" scoped="" ref="0x2b3bc4244020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b3bc4244370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig7" ref="0x2b3bc4243758" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig7" scoped="" ref="0x2b3bc4243758"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b3bc4243aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig2" ref="0x2b3bc4246020" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig2" scoped="" ref="0x2b3bc4246020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b3bc4246370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig5" ref="0x2b3bc4244758" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig5" scoped="" ref="0x2b3bc4244758"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b3bc4244aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig0" ref="0x2b3bc42470c8" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig0" scoped="" ref="0x2b3bc42470c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b3bc4247418"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig3" ref="0x2b3bc4246758" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig3" scoped="" ref="0x2b3bc4246758"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b3bc4246aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2b3bc4263a70" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2b3bc4263a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bc4263dc0"/>
        <function-ref name="fired" scoped="" ref="0x2b3bc426f020"/>
        <function-ref name="disable" scoped="" ref="0x2b3bc426f1a8"/>
        <function-ref name="edge" scoped="" ref="0x2b3bc426f330"/>
        <function-ref name="enable" scoped="" ref="0x2b3bc426f4b8"/>
        <function-ref name="getValue" scoped="" ref="0x2b3bc426f640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2b3bc426f908" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2b3bc426f908"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b3bc426fc58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2b3bc426b7a8" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2b3bc426b7a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bc426baf8"/>
        <function-ref name="fired" scoped="" ref="0x2b3bc426bc80"/>
        <function-ref name="disable" scoped="" ref="0x2b3bc426be08"/>
        <function-ref name="edge" scoped="" ref="0x2b3bc426a020"/>
        <function-ref name="enable" scoped="" ref="0x2b3bc426a1a8"/>
        <function-ref name="getValue" scoped="" ref="0x2b3bc426a330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2b3bc426a5f8" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2b3bc426a5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b3bc426a948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2b3bc42673e0" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2b3bc42673e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bc4267730"/>
        <function-ref name="fired" scoped="" ref="0x2b3bc42678b8"/>
        <function-ref name="disable" scoped="" ref="0x2b3bc4267a40"/>
        <function-ref name="edge" scoped="" ref="0x2b3bc4267bc8"/>
        <function-ref name="enable" scoped="" ref="0x2b3bc4267d50"/>
        <function-ref name="getValue" scoped="" ref="0x2b3bc4286020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2b3bc42862e8" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2b3bc42862e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b3bc4286638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2b3bc4283020" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2b3bc4283020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bc4283370"/>
        <function-ref name="fired" scoped="" ref="0x2b3bc42834f8"/>
        <function-ref name="disable" scoped="" ref="0x2b3bc4283680"/>
        <function-ref name="edge" scoped="" ref="0x2b3bc4283808"/>
        <function-ref name="enable" scoped="" ref="0x2b3bc4283990"/>
        <function-ref name="getValue" scoped="" ref="0x2b3bc4283b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2b3bc4283de0" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2b3bc4283de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b3bc4282170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2b3bc427fcd8" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2b3bc427fcd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bc427e0a0"/>
        <function-ref name="fired" scoped="" ref="0x2b3bc427e228"/>
        <function-ref name="disable" scoped="" ref="0x2b3bc427e3b0"/>
        <function-ref name="edge" scoped="" ref="0x2b3bc427e538"/>
        <function-ref name="enable" scoped="" ref="0x2b3bc427e6c0"/>
        <function-ref name="getValue" scoped="" ref="0x2b3bc427e848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2b3bc427eb10" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2b3bc427eb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b3bc427ee60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2b3bc427b9d8" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2b3bc427b9d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bc427bd28"/>
        <function-ref name="fired" scoped="" ref="0x2b3bc427a020"/>
        <function-ref name="disable" scoped="" ref="0x2b3bc427a1a8"/>
        <function-ref name="edge" scoped="" ref="0x2b3bc427a330"/>
        <function-ref name="enable" scoped="" ref="0x2b3bc427a4b8"/>
        <function-ref name="getValue" scoped="" ref="0x2b3bc427a640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2b3bc427a908" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2b3bc427a908"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b3bc427ac58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2b3bc4277970" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2b3bc4277970"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bc4277cc0"/>
        <function-ref name="fired" scoped="" ref="0x2b3bc4277e48"/>
        <function-ref name="disable" scoped="" ref="0x2b3bc4295020"/>
        <function-ref name="edge" scoped="" ref="0x2b3bc42951a8"/>
        <function-ref name="enable" scoped="" ref="0x2b3bc4295330"/>
        <function-ref name="getValue" scoped="" ref="0x2b3bc42954b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2b3bc4295780" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2b3bc4295780"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b3bc4295ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2b3bc42926a8" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2b3bc42926a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bc42929f8"/>
        <function-ref name="fired" scoped="" ref="0x2b3bc4292b80"/>
        <function-ref name="disable" scoped="" ref="0x2b3bc4292d08"/>
        <function-ref name="edge" scoped="" ref="0x2b3bc4291020"/>
        <function-ref name="enable" scoped="" ref="0x2b3bc42911a8"/>
        <function-ref name="getValue" scoped="" ref="0x2b3bc4291330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2b3bc42915f8" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2b3bc42915f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b3bc4291948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x2b3bc42a4480" loc="9:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x2b3bc42a4480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bc42a47d0"/>
        <function-ref name="fired" scoped="" ref="0x2b3bc42a4958"/>
        <function-ref name="disable" scoped="" ref="0x2b3bc42a4ae0"/>
        <function-ref name="edge" scoped="" ref="0x2b3bc42a4c68"/>
        <function-ref name="enable" scoped="" ref="0x2b3bc42a4df0"/>
        <function-ref name="getValue" scoped="" ref="0x2b3bc42b6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x2b3bc42a59a0" loc="8:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x2b3bc42a59a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b3bc42a5cf0"/>
        <function-ref name="disable" scoped="" ref="0x2b3bc42a5e78"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b3bc42a4030"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b3bc42a41b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x2b3bc42b4bb0" loc="9:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x2b3bc42b4bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bc42b3020"/>
        <function-ref name="fired" scoped="" ref="0x2b3bc42b31a8"/>
        <function-ref name="disable" scoped="" ref="0x2b3bc42b3330"/>
        <function-ref name="edge" scoped="" ref="0x2b3bc42b34b8"/>
        <function-ref name="enable" scoped="" ref="0x2b3bc42b3640"/>
        <function-ref name="getValue" scoped="" ref="0x2b3bc42b37c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x2b3bc42b4100" loc="8:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x2b3bc42b4100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b3bc42b4450"/>
        <function-ref name="disable" scoped="" ref="0x2b3bc42b45d8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b3bc42b4760"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b3bc42b48e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x2b3bc42b0480" loc="9:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x2b3bc42b0480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bc42b07d0"/>
        <function-ref name="fired" scoped="" ref="0x2b3bc42b0958"/>
        <function-ref name="disable" scoped="" ref="0x2b3bc42b0ae0"/>
        <function-ref name="edge" scoped="" ref="0x2b3bc42b0c68"/>
        <function-ref name="enable" scoped="" ref="0x2b3bc42b0df0"/>
        <function-ref name="getValue" scoped="" ref="0x2b3bc42af020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x2b3bc42b19a0" loc="8:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x2b3bc42b19a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b3bc42b1cf0"/>
        <function-ref name="disable" scoped="" ref="0x2b3bc42b1e78"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b3bc42b0030"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b3bc42b01b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x2b3bc42adbb0" loc="9:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x2b3bc42adbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3bc42ac020"/>
        <function-ref name="fired" scoped="" ref="0x2b3bc42ac1a8"/>
        <function-ref name="disable" scoped="" ref="0x2b3bc42ac330"/>
        <function-ref name="edge" scoped="" ref="0x2b3bc42ac4b8"/>
        <function-ref name="enable" scoped="" ref="0x2b3bc42ac640"/>
        <function-ref name="getValue" scoped="" ref="0x2b3bc42ac7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x2b3bc42ad100" loc="8:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x2b3bc42ad100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b3bc42ad450"/>
        <function-ref name="disable" scoped="" ref="0x2b3bc42ad5d8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b3bc42ad760"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b3bc42ad8e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PhotoTempAdc" ref="0x2b3bc42ba140" loc="17:/opt/tinyos-2.1.2/tos/sensorboards/mts300/PhotoTempP.nc">
      <component-ref qname="PhotoTempP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PhotoTempAdc" scoped="" ref="0x2b3bc42ba140"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2b3bc42ba490"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcConfig" ref="0x2b3bc42d86b8" loc="16:/opt/tinyos-2.1.2/tos/sensorboards/mts300/PhotoTempP.nc">
      <component-ref qname="PhotoTempP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b3bc42d86b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2b3bc42d8a08"/>
        <function-ref name="getChannel" scoped="" ref="0x2b3bc42d8b90"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2b3bc42d8d18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b3bc4345d18" loc="92:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b3bc4345d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b3bc43440d8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b3bc4344260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b3bc4343960" loc="96:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b3bc4343960"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b3bc4343cd0"/>
        <function-ref name="configure" scoped="" ref="0x2b3bc4343e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b3bc43444a8" loc="93:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b3bc43444a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b3bc43447f8"/>
        <function-ref name="requested" scoped="" ref="0x2b3bc4344980"/>
        <function-ref name="granted" scoped="" ref="0x2b3bc4344b08"/>
        <function-ref name="isOwner" scoped="" ref="0x2b3bc4344c90"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b3bc4344e18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b3bc4345020" loc="91:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b3bc4345020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b3bc4345390"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b3bc4345518"/>
        <function-ref name="request" scoped="" ref="0x2b3bc43456a0"/>
        <function-ref name="granted" scoped="" ref="0x2b3bc4345828"/>
        <function-ref name="isOwner" scoped="" ref="0x2b3bc43459b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b3bc43430e0" loc="94:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b3bc43430e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b3bc4343430"/>
        <function-ref name="userId" scoped="" ref="0x2b3bc43435b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b3bc4917d10" loc="44:/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b3bc4917d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b3bc49160a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x2b3bc4916328" loc="45:/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x2b3bc4916328"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b3bc4916678"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b3bc4916800"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b3bc4916988"/>
        <function-ref name="dequeue" scoped="" ref="0x2b3bc4916b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b3bc4913200" loc="55:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b3bc4913200"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b3bc4913570"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b3bc49136f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b3bc4912e18" loc="60:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b3bc4912e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b3bc49111c0"/>
        <function-ref name="configure" scoped="" ref="0x2b3bc4911348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b3bc49115d0" loc="61:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2b3bc49115d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b3bc4911920"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b3bc4911aa8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b3bc4911c30"/>
        <function-ref name="dequeue" scoped="" ref="0x2b3bc4911db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b3bc4913940" loc="56:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b3bc4913940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b3bc4913c90"/>
        <function-ref name="requested" scoped="" ref="0x2b3bc4913e18"/>
        <function-ref name="granted" scoped="" ref="0x2b3bc4912020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b3bc49121a8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b3bc4912330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b3bc490f060" loc="62:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b3bc490f060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b3bc490f3b0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b3bc490f538"/>
        <function-ref name="led1On" scoped="" ref="0x2b3bc490f6c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b3bc490f848"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b3bc490f9d0"/>
        <function-ref name="get" scoped="" ref="0x2b3bc490fb58"/>
        <function-ref name="led1Off" scoped="" ref="0x2b3bc490fce0"/>
        <function-ref name="led0On" scoped="" ref="0x2b3bc490e330"/>
        <function-ref name="set" scoped="" ref="0x2b3bc490e020"/>
        <function-ref name="led2On" scoped="" ref="0x2b3bc490fe68"/>
        <function-ref name="led2Off" scoped="" ref="0x2b3bc490e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b3bc49144b0" loc="54:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b3bc49144b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b3bc4914820"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b3bc49149a8"/>
        <function-ref name="request" scoped="" ref="0x2b3bc4914b30"/>
        <function-ref name="granted" scoped="" ref="0x2b3bc4914cb8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b3bc4914e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b3bc4912578" loc="57:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b3bc4912578"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b3bc49128c8"/>
        <function-ref name="userId" scoped="" ref="0x2b3bc4912a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2b3bc490e5f8" loc="75:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x2b3bc490e5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b3bc490e948"/>
        <function-ref name="runTask" scoped="" ref="0x2b3bc490ead0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b3bc4340e38" loc="92:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b3bc4340e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b3bc433e1e8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b3bc433e370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b3bc435fae8" loc="96:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b3bc435fae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b3bc435fe58"/>
        <function-ref name="configure" scoped="" ref="0x2b3bc435e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b3bc433e5b8" loc="93:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b3bc433e5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b3bc433e908"/>
        <function-ref name="requested" scoped="" ref="0x2b3bc433ea90"/>
        <function-ref name="granted" scoped="" ref="0x2b3bc433ec18"/>
        <function-ref name="isOwner" scoped="" ref="0x2b3bc433eda0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b3bc435f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b3bc4340140" loc="91:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b3bc4340140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b3bc43404b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b3bc4340638"/>
        <function-ref name="request" scoped="" ref="0x2b3bc43407c0"/>
        <function-ref name="granted" scoped="" ref="0x2b3bc4340948"/>
        <function-ref name="isOwner" scoped="" ref="0x2b3bc4340ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b3bc435f268" loc="94:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b3bc435f268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b3bc435f5b8"/>
        <function-ref name="userId" scoped="" ref="0x2b3bc435f740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b3bc494f020" loc="44:/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b3bc494f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b3bc494f370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x2b3bc494f5f8" loc="45:/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x2b3bc494f5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b3bc494f948"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b3bc494fad0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b3bc494fc58"/>
        <function-ref name="dequeue" scoped="" ref="0x2b3bc494fde0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b3bc494b388" loc="55:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b3bc494b388"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b3bc494b6f8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b3bc494b880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b3bc4949020" loc="60:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b3bc4949020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b3bc4949390"/>
        <function-ref name="configure" scoped="" ref="0x2b3bc4949518"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b3bc49497a0" loc="61:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2b3bc49497a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b3bc4949af0"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b3bc4949c78"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b3bc4949e00"/>
        <function-ref name="dequeue" scoped="" ref="0x2b3bc4948020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b3bc494bac8" loc="56:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b3bc494bac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b3bc494be18"/>
        <function-ref name="requested" scoped="" ref="0x2b3bc494a020"/>
        <function-ref name="granted" scoped="" ref="0x2b3bc494a1a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b3bc494a330"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b3bc494a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b3bc4948268" loc="62:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b3bc4948268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b3bc49485b8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b3bc4948740"/>
        <function-ref name="led1On" scoped="" ref="0x2b3bc49488c8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b3bc4948a50"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b3bc4948bd8"/>
        <function-ref name="get" scoped="" ref="0x2b3bc4948d60"/>
        <function-ref name="led1Off" scoped="" ref="0x2b3bc4947020"/>
        <function-ref name="led0On" scoped="" ref="0x2b3bc4947640"/>
        <function-ref name="set" scoped="" ref="0x2b3bc4947330"/>
        <function-ref name="led2On" scoped="" ref="0x2b3bc49471a8"/>
        <function-ref name="led2Off" scoped="" ref="0x2b3bc49474b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b3bc494d630" loc="54:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b3bc494d630"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b3bc494d9a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b3bc494db28"/>
        <function-ref name="request" scoped="" ref="0x2b3bc494dcb0"/>
        <function-ref name="granted" scoped="" ref="0x2b3bc494de38"/>
        <function-ref name="isOwner" scoped="" ref="0x2b3bc494b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b3bc494a700" loc="57:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b3bc494a700"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b3bc494aa50"/>
        <function-ref name="userId" scoped="" ref="0x2b3bc494abd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2b3bc4947908" loc="75:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x2b3bc4947908"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b3bc4947c58"/>
        <function-ref name="runTask" scoped="" ref="0x2b3bc4947de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b3bc435b020" loc="92:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b3bc435b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b3bc435b390"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b3bc435b518"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b3bc435ac70" loc="96:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b3bc435ac70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b3bc4358020"/>
        <function-ref name="configure" scoped="" ref="0x2b3bc43581a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b3bc435b760" loc="93:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b3bc435b760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b3bc435bab0"/>
        <function-ref name="requested" scoped="" ref="0x2b3bc435bc38"/>
        <function-ref name="granted" scoped="" ref="0x2b3bc435bdc0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b3bc435a020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b3bc435a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b3bc435c2c8" loc="91:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b3bc435c2c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b3bc435c638"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b3bc435c7c0"/>
        <function-ref name="request" scoped="" ref="0x2b3bc435c948"/>
        <function-ref name="granted" scoped="" ref="0x2b3bc435cad0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b3bc435cc58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b3bc435a3f0" loc="94:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b3bc435a3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b3bc435a740"/>
        <function-ref name="userId" scoped="" ref="0x2b3bc435a8c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b3bc498dd10" loc="44:/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b3bc498dd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b3bc498c0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x2b3bc498c328" loc="45:/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x2b3bc498c328"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b3bc498c678"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b3bc498c800"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b3bc498c988"/>
        <function-ref name="dequeue" scoped="" ref="0x2b3bc498cb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b3bc4988200" loc="55:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b3bc4988200"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b3bc4988570"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b3bc49886f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b3bc4987e18" loc="60:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b3bc4987e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b3bc49861c0"/>
        <function-ref name="configure" scoped="" ref="0x2b3bc4986348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b3bc49865d0" loc="61:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2b3bc49865d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b3bc4986920"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b3bc4986aa8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b3bc4986c30"/>
        <function-ref name="dequeue" scoped="" ref="0x2b3bc4986db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b3bc4988940" loc="56:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b3bc4988940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b3bc4988c90"/>
        <function-ref name="requested" scoped="" ref="0x2b3bc4988e18"/>
        <function-ref name="granted" scoped="" ref="0x2b3bc4987020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b3bc49871a8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b3bc4987330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b3bc4985060" loc="62:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b3bc4985060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b3bc49853b0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b3bc4985538"/>
        <function-ref name="led1On" scoped="" ref="0x2b3bc49856c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b3bc4985848"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b3bc49859d0"/>
        <function-ref name="get" scoped="" ref="0x2b3bc4985b58"/>
        <function-ref name="led1Off" scoped="" ref="0x2b3bc4985ce0"/>
        <function-ref name="led0On" scoped="" ref="0x2b3bc4984330"/>
        <function-ref name="set" scoped="" ref="0x2b3bc4984020"/>
        <function-ref name="led2On" scoped="" ref="0x2b3bc4985e68"/>
        <function-ref name="led2Off" scoped="" ref="0x2b3bc49841a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b3bc49894b0" loc="54:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b3bc49894b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b3bc4989820"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b3bc49899a8"/>
        <function-ref name="request" scoped="" ref="0x2b3bc4989b30"/>
        <function-ref name="granted" scoped="" ref="0x2b3bc4989cb8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b3bc4989e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b3bc4987578" loc="57:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b3bc4987578"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b3bc49878c8"/>
        <function-ref name="userId" scoped="" ref="0x2b3bc4987a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2b3bc49845f8" loc="75:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x2b3bc49845f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b3bc4984948"/>
        <function-ref name="runTask" scoped="" ref="0x2b3bc4984ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x2b3bc4355d50" loc="69:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b3bc4355d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b3bc438f0d8"/>
        <function-ref name="stopDone" scoped="" ref="0x2b3bc438f260"/>
        <function-ref name="start" scoped="" ref="0x2b3bc438f3e8"/>
        <function-ref name="stop" scoped="" ref="0x2b3bc438f570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2b3bc438f7b8" loc="71:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b3bc438f7b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2b3bc438fb08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2b3bc438fd50" loc="72:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b3bc438fd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b3bc438e0d8"/>
        <function-ref name="requested" scoped="" ref="0x2b3bc438e260"/>
        <function-ref name="granted" scoped="" ref="0x2b3bc438e3e8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b3bc438e570"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b3bc438e6f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b3bc438e940" loc="73:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b3bc438e940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b3bc438ec90"/>
        <function-ref name="userId" scoped="" ref="0x2b3bc438ee18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x2b3bc49cad58" loc="61:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b3bc49cad58"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b3bc49c90d8"/>
        <function-ref name="stopDone" scoped="" ref="0x2b3bc49c9260"/>
        <function-ref name="start" scoped="" ref="0x2b3bc49c93e8"/>
        <function-ref name="stop" scoped="" ref="0x2b3bc49c9570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2b3bc49c97b8" loc="63:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b3bc49c97b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2b3bc49c9b08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x2b3bc49c7120" loc="78:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x2b3bc49c7120"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b3bc49c7470"/>
        <function-ref name="runTask" scoped="" ref="0x2b3bc49c75f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2b3bc49c9d50" loc="64:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b3bc49c9d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b3bc49c80d8"/>
        <function-ref name="requested" scoped="" ref="0x2b3bc49c8260"/>
        <function-ref name="granted" scoped="" ref="0x2b3bc49c83e8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b3bc49c8570"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b3bc49c86f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTask" ref="0x2b3bc49c78c0" loc="73:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startTask" scoped="" ref="0x2b3bc49c78c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b3bc49c7c10"/>
        <function-ref name="runTask" scoped="" ref="0x2b3bc49c7d98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x2b3bc49ca638" loc="60:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b3bc49ca638"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b3bc49ca988"/>
        <function-ref name="stop" scoped="" ref="0x2b3bc49cab10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b3bc49c8940" loc="65:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b3bc49c8940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b3bc49c8c90"/>
        <function-ref name="userId" scoped="" ref="0x2b3bc49c8e18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x2b3bc438c6d8" loc="69:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b3bc438c6d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b3bc438ca28"/>
        <function-ref name="stopDone" scoped="" ref="0x2b3bc438cbb0"/>
        <function-ref name="start" scoped="" ref="0x2b3bc438cd38"/>
        <function-ref name="stop" scoped="" ref="0x2b3bc438a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2b3bc438a268" loc="71:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b3bc438a268"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2b3bc438a5b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2b3bc438a800" loc="72:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b3bc438a800"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b3bc438ab50"/>
        <function-ref name="requested" scoped="" ref="0x2b3bc438acd8"/>
        <function-ref name="granted" scoped="" ref="0x2b3bc438ae60"/>
        <function-ref name="isOwner" scoped="" ref="0x2b3bc4389020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b3bc43891a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b3bc43893f0" loc="73:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b3bc43893f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b3bc4389740"/>
        <function-ref name="userId" scoped="" ref="0x2b3bc43898c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x2b3bc49b3020" loc="61:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b3bc49b3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b3bc49b3370"/>
        <function-ref name="stopDone" scoped="" ref="0x2b3bc49b34f8"/>
        <function-ref name="start" scoped="" ref="0x2b3bc49b3680"/>
        <function-ref name="stop" scoped="" ref="0x2b3bc49b3808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2b3bc49b3a50" loc="63:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b3bc49b3a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2b3bc49b3da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x2b3bc49b1470" loc="78:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x2b3bc49b1470"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b3bc49b17c0"/>
        <function-ref name="runTask" scoped="" ref="0x2b3bc49b1948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2b3bc49b2020" loc="64:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b3bc49b2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b3bc49b2370"/>
        <function-ref name="requested" scoped="" ref="0x2b3bc49b24f8"/>
        <function-ref name="granted" scoped="" ref="0x2b3bc49b2680"/>
        <function-ref name="isOwner" scoped="" ref="0x2b3bc49b2808"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b3bc49b2990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTask" ref="0x2b3bc49b1c10" loc="73:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startTask" scoped="" ref="0x2b3bc49b1c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b3bc49eb020"/>
        <function-ref name="runTask" scoped="" ref="0x2b3bc49eb1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x2b3bc49b48d8" loc="60:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b3bc49b48d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b3bc49b4c28"/>
        <function-ref name="stop" scoped="" ref="0x2b3bc49b4db0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b3bc49b2bd8" loc="65:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b3bc49b2bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b3bc49b1020"/>
        <function-ref name="userId" scoped="" ref="0x2b3bc49b11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b3bc43b0bc0" loc="4:/opt/tinyos-2.1.2/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b3bc43b0bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b3bc43af020"/>
        <function-ref name="stopDone" scoped="" ref="0x2b3bc43af1a8"/>
        <function-ref name="start" scoped="" ref="0x2b3bc43af330"/>
        <function-ref name="stop" scoped="" ref="0x2b3bc43af4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PhotoTempResource" ref="0x2b3bc43ad020" loc="8:/opt/tinyos-2.1.2/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PhotoTempResource" scoped="" ref="0x2b3bc43ad020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b3bc43ad370"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b3bc43ad4f8"/>
        <function-ref name="request" scoped="" ref="0x2b3bc43ad680"/>
        <function-ref name="granted" scoped="" ref="0x2b3bc43ad808"/>
        <function-ref name="isOwner" scoped="" ref="0x2b3bc43ad990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2b3bc43af928" loc="5:/opt/tinyos-2.1.2/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2b3bc43af928"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b3bc3433b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bc43ae528"/>
        <function-ref name="readDone" scoped="" ref="0x2b3bc43ae998"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone" ref="0x2b3bc43c85f8" loc="32:/opt/tinyos-2.1.2/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDone" scoped="" ref="0x2b3bc43c85f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b3bc43c8948"/>
        <function-ref name="runTask" scoped="" ref="0x2b3bc43c8ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Power" ref="0x2b3bc43a8d40" loc="10:/opt/tinyos-2.1.2/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Power" scoped="" ref="0x2b3bc43a8d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc43ca0d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc43ca260"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc43ca3e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc43ca570"/>
        <function-ref name="get" scoped="" ref="0x2b3bc43ca6f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc43ca880"/>
        <function-ref name="set" scoped="" ref="0x2b3bc43caa08"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc43cab90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActualRead" ref="0x2b3bc43c9020" loc="11:/opt/tinyos-2.1.2/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActualRead" scoped="" ref="0x2b3bc43c9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b3bc3433b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bc43c9b68"/>
        <function-ref name="readDone" scoped="" ref="0x2b3bc43c8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b3bc43adce0" loc="9:/opt/tinyos-2.1.2/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b3bc43adce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b3bc3da0608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b3bc3da0960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b3bc43a8088"/>
        <function-ref name="fired" scoped="" ref="0x2b3bc43aa688"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b3bc43a9470"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b3bc43a9020"/>
        <function-ref name="getdt" scoped="" ref="0x2b3bc43a8928"/>
        <function-ref name="gett0" scoped="" ref="0x2b3bc43a84d8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b3bc43aaad8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b3bc43ab8b8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b3bc43a9a40"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b3bc43abd58"/>
        <function-ref name="stop" scoped="" ref="0x2b3bc43aa238"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b3bc43c6e70" loc="4:/opt/tinyos-2.1.2/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.TempControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b3bc43c6e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b3bc43c51e8"/>
        <function-ref name="stopDone" scoped="" ref="0x2b3bc43c5370"/>
        <function-ref name="start" scoped="" ref="0x2b3bc43c54f8"/>
        <function-ref name="stop" scoped="" ref="0x2b3bc43c5680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PhotoTempResource" ref="0x2b3bc43c21c0" loc="8:/opt/tinyos-2.1.2/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.TempControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PhotoTempResource" scoped="" ref="0x2b3bc43c21c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b3bc43c2510"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b3bc43c2698"/>
        <function-ref name="request" scoped="" ref="0x2b3bc43c2820"/>
        <function-ref name="granted" scoped="" ref="0x2b3bc43c29a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b3bc43c2b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2b3bc43c5af0" loc="5:/opt/tinyos-2.1.2/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.TempControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2b3bc43c5af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b3bc3433b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bc43c46f0"/>
        <function-ref name="readDone" scoped="" ref="0x2b3bc43c4b60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone" ref="0x2b3bc43ba7d0" loc="32:/opt/tinyos-2.1.2/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.TempControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDone" scoped="" ref="0x2b3bc43ba7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b3bc43bab20"/>
        <function-ref name="runTask" scoped="" ref="0x2b3bc43baca8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Power" ref="0x2b3bc43bc020" loc="10:/opt/tinyos-2.1.2/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.TempControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Power" scoped="" ref="0x2b3bc43bc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc43bc370"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc43bc4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc43bc680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc43bc808"/>
        <function-ref name="get" scoped="" ref="0x2b3bc43bc990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc43bcb18"/>
        <function-ref name="set" scoped="" ref="0x2b3bc43bcca0"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc43bce28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActualRead" ref="0x2b3bc43bb228" loc="11:/opt/tinyos-2.1.2/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.TempControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActualRead" scoped="" ref="0x2b3bc43bb228"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b3bc3433b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bc43bbd70"/>
        <function-ref name="readDone" scoped="" ref="0x2b3bc43ba1f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b3bc43c2e80" loc="9:/opt/tinyos-2.1.2/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.TempControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b3bc43c2e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b3bc3da0608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b3bc3da0960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b3bc43be238"/>
        <function-ref name="fired" scoped="" ref="0x2b3bc43c0910"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b3bc43bf648"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b3bc43bf1f8"/>
        <function-ref name="getdt" scoped="" ref="0x2b3bc43bead8"/>
        <function-ref name="gett0" scoped="" ref="0x2b3bc43be688"/>
        <function-ref name="isRunning" scoped="" ref="0x2b3bc43c0d60"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b3bc43c19f0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b3bc43bfc18"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b3bc43c0020"/>
        <function-ref name="stop" scoped="" ref="0x2b3bc43c04c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b3bc43db0a0" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="PhotoTempDeviceC.WarmupTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b3bc43db0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b3bc3da0608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b3bc3da0960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b3bc43d72b8"/>
        <function-ref name="fired" scoped="" ref="0x2b3bc43da9b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b3bc43d86c8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b3bc43d8278"/>
        <function-ref name="getdt" scoped="" ref="0x2b3bc43d7b58"/>
        <function-ref name="gett0" scoped="" ref="0x2b3bc43d7708"/>
        <function-ref name="isRunning" scoped="" ref="0x2b3bc43dae00"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b3bc43dbbe8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b3bc43d8c98"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b3bc43da0c0"/>
        <function-ref name="stop" scoped="" ref="0x2b3bc43da560"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b3bc44df3f0" loc="25:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="PhotoTempDeviceC.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b3bc44df3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b3bc44df740"/>
        <function-ref name="configure" scoped="" ref="0x2b3bc44df8c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2b3bc44e1358" loc="22:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="PhotoTempDeviceC.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2b3bc44e1358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b3bc3433b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bc44e0020"/>
        <function-ref name="readDone" scoped="" ref="0x2b3bc44e0470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x2b3bc44e0a28" loc="24:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="PhotoTempDeviceC.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b3bc44e0a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2b3bc44e0d78"/>
        <function-ref name="getChannel" scoped="" ref="0x2b3bc44df020"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2b3bc44df1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2b3bc43cec90" loc="18:/opt/tinyos-2.1.2/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2b3bc43cec90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b3bc3433b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bc43cb820"/>
        <function-ref name="readDone" scoped="" ref="0x2b3bc43cbc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x2b3bc43e9a00" loc="19:/opt/tinyos-2.1.2/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x2b3bc43e9a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b3bc3433b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bc43ed5b0"/>
        <function-ref name="readDone" scoped="" ref="0x2b3bc43eda38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x2b3bc43ec670" loc="22:/opt/tinyos-2.1.2/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b3bc43ec670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2b3bc43ec9c0"/>
        <function-ref name="getChannel" scoped="" ref="0x2b3bc43ecb48"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2b3bc43eccd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2b3bc43e84c0" loc="23:/opt/tinyos-2.1.2/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b3bc43e84c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b3bc43e8810"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b3bc43e8998"/>
        <function-ref name="request" scoped="" ref="0x2b3bc43e8b20"/>
        <function-ref name="granted" scoped="" ref="0x2b3bc43e8ca8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b3bc43e8e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b3bc43e2890" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b3bc43e2890"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b3bc43e2be0"/>
        <function-ref name="configure" scoped="" ref="0x2b3bc43e2d68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x2b3bc43fd9b0" loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x2b3bc43fd9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x2b3bc43fdd00"/>
        <function-ref name="dataReady" scoped="" ref="0x2b3bc43e2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x2b3bc44010d0" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2b3bc44010d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x2b3bc4401420"/>
        <function-ref name="cancel" scoped="" ref="0x2b3bc44015a8"/>
        <function-ref name="dataReady" scoped="" ref="0x2b3bc4401730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b3bc43e3020" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b3bc43e3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b3bc43e3370"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b3bc43e34f8"/>
        <function-ref name="request" scoped="" ref="0x2b3bc43e3680"/>
        <function-ref name="granted" scoped="" ref="0x2b3bc43e3808"/>
        <function-ref name="isOwner" scoped="" ref="0x2b3bc43e3990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b3bc43fcd40" loc="85:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b3bc43fcd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b3bc43f90d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x2b3bc43f8de0" loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x2b3bc43f8de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x2b3bc43f7170"/>
        <function-ref name="dataReady" scoped="" ref="0x2b3bc43f72f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x2b3bc43f8488" loc="87:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2b3bc43f8488"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x2b3bc43f87d8"/>
        <function-ref name="cancel" scoped="" ref="0x2b3bc43f8960"/>
        <function-ref name="dataReady" scoped="" ref="0x2b3bc43f8ae8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Adc" ref="0x2b3bc440d940" loc="91:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x2b3bc440d940"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x2b3bc440dc90"/>
        <function-ref name="getAdmux" scoped="" ref="0x2b3bc440de18"/>
        <function-ref name="setPrescaler" scoped="" ref="0x2b3bc43f5020"/>
        <function-ref name="isEnabled" scoped="" ref="0x2b3bc43f51a8"/>
        <function-ref name="enableAdc" scoped="" ref="0x2b3bc43f5330"/>
        <function-ref name="setAdmux" scoped="" ref="0x2b3bc43f54b8"/>
        <function-ref name="enableInterruption" scoped="" ref="0x2b3bc43f5640"/>
        <function-ref name="isComplete" scoped="" ref="0x2b3bc43f57c8"/>
        <function-ref name="cancel" scoped="" ref="0x2b3bc43f5950"/>
        <function-ref name="disableAdc" scoped="" ref="0x2b3bc43f5ad8"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x2b3bc43f5c60"/>
        <function-ref name="disableInterruption" scoped="" ref="0x2b3bc43f5de8"/>
        <function-ref name="startConversion" scoped="" ref="0x2b3bc43f4020"/>
        <function-ref name="isStarted" scoped="" ref="0x2b3bc43f42a8"/>
        <function-ref name="setAdcsra" scoped="" ref="0x2b3bc43f4430"/>
        <function-ref name="setContinuous" scoped="" ref="0x2b3bc43f45b8"/>
        <function-ref name="getAdcsra" scoped="" ref="0x2b3bc43f4740"/>
        <function-ref name="getValue" scoped="" ref="0x2b3bc43f48c8"/>
        <function-ref name="dataReady" scoped="" ref="0x2b3bc43f4a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x2b3bc43f6c10" loc="86:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x2b3bc43f6c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b3bc43f8020"/>
        <function-ref name="stop" scoped="" ref="0x2b3bc43f81a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x2b3bc43f4d30" loc="92:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b3bc43f4d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b3bc440c0d8"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b3bc440c260"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b3bc440c3e8"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b3bc440c570"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b3bc440c6f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x2b3bc4428020" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <component-ref qname="HplAtm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x2b3bc4428020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x2b3bc4428370"/>
        <function-ref name="getAdmux" scoped="" ref="0x2b3bc44284f8"/>
        <function-ref name="setPrescaler" scoped="" ref="0x2b3bc4428680"/>
        <function-ref name="isEnabled" scoped="" ref="0x2b3bc4428808"/>
        <function-ref name="enableAdc" scoped="" ref="0x2b3bc4428990"/>
        <function-ref name="setAdmux" scoped="" ref="0x2b3bc4428b18"/>
        <function-ref name="enableInterruption" scoped="" ref="0x2b3bc4428ca0"/>
        <function-ref name="isComplete" scoped="" ref="0x2b3bc4428e28"/>
        <function-ref name="cancel" scoped="" ref="0x2b3bc444d020"/>
        <function-ref name="disableAdc" scoped="" ref="0x2b3bc444d1a8"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x2b3bc444d330"/>
        <function-ref name="disableInterruption" scoped="" ref="0x2b3bc444d4b8"/>
        <function-ref name="startConversion" scoped="" ref="0x2b3bc444d640"/>
        <function-ref name="isStarted" scoped="" ref="0x2b3bc444d8c8"/>
        <function-ref name="setAdcsra" scoped="" ref="0x2b3bc444da50"/>
        <function-ref name="setContinuous" scoped="" ref="0x2b3bc444dbd8"/>
        <function-ref name="getAdcsra" scoped="" ref="0x2b3bc444dd60"/>
        <function-ref name="getValue" scoped="" ref="0x2b3bc444c020"/>
        <function-ref name="dataReady" scoped="" ref="0x2b3bc444c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x2b3bc44481e8" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x2b3bc44481e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x2b3bc4448538"/>
        <function-ref name="getAdmux" scoped="" ref="0x2b3bc44486c0"/>
        <function-ref name="setPrescaler" scoped="" ref="0x2b3bc4448848"/>
        <function-ref name="isEnabled" scoped="" ref="0x2b3bc44489d0"/>
        <function-ref name="enableAdc" scoped="" ref="0x2b3bc4448b58"/>
        <function-ref name="setAdmux" scoped="" ref="0x2b3bc4448ce0"/>
        <function-ref name="enableInterruption" scoped="" ref="0x2b3bc4448e68"/>
        <function-ref name="isComplete" scoped="" ref="0x2b3bc4447020"/>
        <function-ref name="cancel" scoped="" ref="0x2b3bc44471a8"/>
        <function-ref name="disableAdc" scoped="" ref="0x2b3bc4447330"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x2b3bc44474b8"/>
        <function-ref name="disableInterruption" scoped="" ref="0x2b3bc4447640"/>
        <function-ref name="startConversion" scoped="" ref="0x2b3bc44477c8"/>
        <function-ref name="isStarted" scoped="" ref="0x2b3bc4447a50"/>
        <function-ref name="setAdcsra" scoped="" ref="0x2b3bc4447bd8"/>
        <function-ref name="setContinuous" scoped="" ref="0x2b3bc4447d60"/>
        <function-ref name="getAdcsra" scoped="" ref="0x2b3bc4446020"/>
        <function-ref name="getValue" scoped="" ref="0x2b3bc44461a8"/>
        <function-ref name="dataReady" scoped="" ref="0x2b3bc4446330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x2b3bc4446640" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2b3bc4446640"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b3bc4446990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b3bc4485af8" loc="92:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b3bc4485af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b3bc4485e68"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b3bc4484020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b3bc44836d8" loc="96:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b3bc44836d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b3bc4483a48"/>
        <function-ref name="configure" scoped="" ref="0x2b3bc4483bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b3bc4484268" loc="93:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b3bc4484268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b3bc44845b8"/>
        <function-ref name="requested" scoped="" ref="0x2b3bc4484740"/>
        <function-ref name="granted" scoped="" ref="0x2b3bc44848c8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b3bc4484a50"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b3bc4484bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b3bc4487d88" loc="91:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b3bc4487d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b3bc4485170"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b3bc44852f8"/>
        <function-ref name="request" scoped="" ref="0x2b3bc4485480"/>
        <function-ref name="granted" scoped="" ref="0x2b3bc4485608"/>
        <function-ref name="isOwner" scoped="" ref="0x2b3bc4485790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b3bc4484e20" loc="94:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b3bc4484e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b3bc44831a8"/>
        <function-ref name="userId" scoped="" ref="0x2b3bc4483330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b3bc49ee3a0" loc="44:/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b3bc49ee3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b3bc49ee6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x2b3bc49ee978" loc="45:/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x2b3bc49ee978"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b3bc49eecc8"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b3bc49eee50"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b3bc49ed020"/>
        <function-ref name="dequeue" scoped="" ref="0x2b3bc49ed1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b3bc4a28820" loc="55:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b3bc4a28820"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b3bc4a28b90"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b3bc4a28d18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b3bc4a26570" loc="60:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b3bc4a26570"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b3bc4a268e0"/>
        <function-ref name="configure" scoped="" ref="0x2b3bc4a26a68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b3bc4a26cf0" loc="61:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2b3bc4a26cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b3bc4a250a0"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b3bc4a25228"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b3bc4a253b0"/>
        <function-ref name="dequeue" scoped="" ref="0x2b3bc4a25538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b3bc4a27020" loc="56:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b3bc4a27020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b3bc4a27370"/>
        <function-ref name="requested" scoped="" ref="0x2b3bc4a274f8"/>
        <function-ref name="granted" scoped="" ref="0x2b3bc4a27680"/>
        <function-ref name="isOwner" scoped="" ref="0x2b3bc4a27808"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b3bc4a27990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b3bc4a25780" loc="62:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b3bc4a25780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b3bc4a25ad0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b3bc4a25c58"/>
        <function-ref name="led1On" scoped="" ref="0x2b3bc4a25de0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b3bc4a24020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b3bc4a241a8"/>
        <function-ref name="get" scoped="" ref="0x2b3bc4a24330"/>
        <function-ref name="led1Off" scoped="" ref="0x2b3bc4a244b8"/>
        <function-ref name="led0On" scoped="" ref="0x2b3bc4a24ad8"/>
        <function-ref name="set" scoped="" ref="0x2b3bc4a247c8"/>
        <function-ref name="led2On" scoped="" ref="0x2b3bc4a24640"/>
        <function-ref name="led2Off" scoped="" ref="0x2b3bc4a24950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b3bc4a299c0" loc="54:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b3bc4a299c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b3bc4a29d30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b3bc4a28020"/>
        <function-ref name="request" scoped="" ref="0x2b3bc4a281a8"/>
        <function-ref name="granted" scoped="" ref="0x2b3bc4a28330"/>
        <function-ref name="isOwner" scoped="" ref="0x2b3bc4a284b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b3bc4a27bd8" loc="57:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b3bc4a27bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b3bc4a26020"/>
        <function-ref name="userId" scoped="" ref="0x2b3bc4a261a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2b3bc4a24da0" loc="75:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x2b3bc4a24da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b3bc4a23170"/>
        <function-ref name="runTask" scoped="" ref="0x2b3bc4a232f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2b3bc4480b98" loc="72:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b3bc4480b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2b3bc4494020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2b3bc4494268" loc="73:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b3bc4494268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b3bc44945b8"/>
        <function-ref name="requested" scoped="" ref="0x2b3bc4494740"/>
        <function-ref name="granted" scoped="" ref="0x2b3bc44948c8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b3bc4494a50"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b3bc4494bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x2b3bc4480478" loc="70:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x2b3bc4480478"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b3bc44807c8"/>
        <function-ref name="stop" scoped="" ref="0x2b3bc4480950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b3bc4494e20" loc="74:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b3bc4494e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b3bc44931a8"/>
        <function-ref name="userId" scoped="" ref="0x2b3bc4493330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2b3bc4a30590" loc="62:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b3bc4a30590"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2b3bc4a308e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2b3bc4a30b28" loc="63:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b3bc4a30b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b3bc4a30e78"/>
        <function-ref name="requested" scoped="" ref="0x2b3bc4a2e030"/>
        <function-ref name="granted" scoped="" ref="0x2b3bc4a2e1b8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b3bc4a2e340"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b3bc4a2e4c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x2b3bc4a32e38" loc="60:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x2b3bc4a32e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b3bc4a301c0"/>
        <function-ref name="stop" scoped="" ref="0x2b3bc4a30348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b3bc4a2e710" loc="64:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b3bc4a2e710"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b3bc4a2ea60"/>
        <function-ref name="userId" scoped="" ref="0x2b3bc4a2ebe8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2b3bc448bc68" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2b3bc448bc68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b3bc3433b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bc448a7e8"/>
        <function-ref name="readDone" scoped="" ref="0x2b3bc448ac38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x2b3bc4489880" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x2b3bc4489880"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b3bc3433b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bc44af490"/>
        <function-ref name="readDone" scoped="" ref="0x2b3bc44af918"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x2b3bc44aee78" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b3bc44aee78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2b3bc44ad1f8"/>
        <function-ref name="getChannel" scoped="" ref="0x2b3bc44ad380"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2b3bc44ad508"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcSingle" ref="0x2b3bc44ae020" loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2b3bc44ae020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x2b3bc44ae370"/>
        <function-ref name="cancel" scoped="" ref="0x2b3bc44ae4f8"/>
        <function-ref name="dataReady" scoped="" ref="0x2b3bc44ae680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="acquiredData" ref="0x2b3bc449dbf8" loc="103:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="acquiredData" scoped="" ref="0x2b3bc449dbf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b3bc449c020"/>
        <function-ref name="runTask" scoped="" ref="0x2b3bc449c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2b3bc44b2a28" loc="24:/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2b3bc44b2a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b3bc3433b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bc44eb620"/>
        <function-ref name="readDone" scoped="" ref="0x2b3bc44eba90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x2b3bc44ea348" loc="26:/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x2b3bc44ea348"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b3bc3433b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bc44e9020"/>
        <function-ref name="readDone" scoped="" ref="0x2b3bc44e9490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2b3bc44e9b28" loc="27:/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b3bc44e9b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b3bc44e7020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b3bc44e71a8"/>
        <function-ref name="request" scoped="" ref="0x2b3bc44e7330"/>
        <function-ref name="granted" scoped="" ref="0x2b3bc44e74b8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b3bc44e7640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2b3bc44f9d58" loc="24:/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
      <component-ref qname="ArbitratedPhotoDeviceP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2b3bc44f9d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b3bc3433b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bc44f88f0"/>
        <function-ref name="readDone" scoped="" ref="0x2b3bc44f8d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x2b3bc44f65e8" loc="26:/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
      <component-ref qname="ArbitratedPhotoDeviceP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x2b3bc44f65e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b3bc3433b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b3bc44f5198"/>
        <function-ref name="readDone" scoped="" ref="0x2b3bc44f5608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2b3bc44f5ca0" loc="27:/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
      <component-ref qname="ArbitratedPhotoDeviceP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b3bc44f5ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b3bc44f40a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b3bc44f4228"/>
        <function-ref name="request" scoped="" ref="0x2b3bc44f43b0"/>
        <function-ref name="granted" scoped="" ref="0x2b3bc44f4538"/>
        <function-ref name="isOwner" scoped="" ref="0x2b3bc44f46c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Mts300Sounder" ref="0x2b3bc44ee148" loc="3:/opt/tinyos-2.1.2/tos/sensorboards/mts300/SounderC.nc">
      <component-ref qname="SounderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mts300Sounder" scoped="" ref="0x2b3bc44ee148"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mts300Sounder"/>
      </instance>
      <interface-functions>
        <function-ref name="beep" scoped="" ref="0x2b3bc44ee498"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Mts300Sounder" ref="0x2b3bc44eda78" loc="3:/opt/tinyos-2.1.2/tos/sensorboards/mts300/SounderP.nc">
      <component-ref qname="SounderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mts300Sounder" scoped="" ref="0x2b3bc44eda78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mts300Sounder"/>
      </instance>
      <interface-functions>
        <function-ref name="beep" scoped="" ref="0x2b3bc44eddc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SounderPin" ref="0x2b3bc450f500" loc="6:/opt/tinyos-2.1.2/tos/sensorboards/mts300/SounderP.nc">
      <component-ref qname="SounderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SounderPin" scoped="" ref="0x2b3bc450f500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3bc450f850"/>
        <function-ref name="isInput" scoped="" ref="0x2b3bc450f9d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3bc450fb60"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3bc450fce8"/>
        <function-ref name="get" scoped="" ref="0x2b3bc450fe70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3bc450e020"/>
        <function-ref name="set" scoped="" ref="0x2b3bc450e1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b3bc450e330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b3bc4514240" loc="5:/opt/tinyos-2.1.2/tos/sensorboards/mts300/SounderP.nc">
      <component-ref qname="SounderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b3bc4514240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b3bc3da0608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b3bc3da0960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b3bc45105f0"/>
        <function-ref name="fired" scoped="" ref="0x2b3bc4513b68"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b3bc45118c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b3bc4511470"/>
        <function-ref name="getdt" scoped="" ref="0x2b3bc450f020"/>
        <function-ref name="gett0" scoped="" ref="0x2b3bc4510a40"/>
        <function-ref name="isRunning" scoped="" ref="0x2b3bc4511020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b3bc4514d88"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b3bc4510020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b3bc4513278"/>
        <function-ref name="stop" scoped="" ref="0x2b3bc4513718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b3bc44ecb88" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="SounderC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b3bc44ecb88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b3bc3da0608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b3bc3da0960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b3bc4505dd8"/>
        <function-ref name="fired" scoped="" ref="0x2b3bc4506510"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b3bc4505238"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b3bc4506db0"/>
        <function-ref name="getdt" scoped="" ref="0x2b3bc45046c8"/>
        <function-ref name="gett0" scoped="" ref="0x2b3bc4504278"/>
        <function-ref name="isRunning" scoped="" ref="0x2b3bc4506960"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b3bc4515728"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b3bc4505808"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b3bc4515bc8"/>
        <function-ref name="stop" scoped="" ref="0x2b3bc45060c0"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Boot" loc="50:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x2b3bc3e1a1d8" loc="60:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Mts300Sounder" loc="1:/opt/tinyos-2.1.2/tos/sensorboards/mts300/Mts300Sounder.nc">
      <function command="" provided="0" name="beep" ref="0x2b3bc3e294c8" loc="3:/opt/tinyos-2.1.2/tos/sensorboards/mts300/Mts300Sounder.nc">
        <interfacedef-ref qname="Mts300Sounder"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b3bc3433b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="length" ref="0x2b3bc3e29258" loc="3:/opt/tinyos-2.1.2/tos/sensorboards/mts300/Mts300Sounder.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b3bc3433b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x2b3bc3e38aa0" loc="49:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b3bc3e38aa0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x2b3bc3e35328" loc="55:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b3bc3d261a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x2b3bc3e34020" loc="63:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b3bc3d261a8"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b3bc3e38aa0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x2b3bc3e35a38" loc="63:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b3bc3d261a8"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x2b3bc3e35d38" loc="63:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b3bc3e38aa0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x2b3bc3e23738" loc="61:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x2b3bc3e23e70" loc="67:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x2b3bc3e22608" loc="72:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x2b3bc3e21480" loc="83:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="79:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x2b3bc3e20a98" loc="100:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="96:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b3bc3e1e258" loc="117:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="103:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x2b3bc3e22d20" loc="77:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b3bc3e1ed58" loc="134:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="120:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x2b3bc3e1eae8" loc="134:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x2b3bc3e23020" loc="56:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x2b3bc3e21bf0" loc="89:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="86:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x2b3bc3e20360" loc="94:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="91:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b3bc3e28488" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b3bc3e28488"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b3bc3e2e020" loc="136:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="132:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b3bc3434608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b3bc3e258f8" loc="83:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x2b3bc3e315b8" loc="114:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="100:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b3bc3434608"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b3bc3434608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b3bc3e31020" loc="114:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b3bc3434608"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b3bc3e31338" loc="114:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b3bc3434608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x2b3bc3e32870" loc="98:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="94:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b3bc3d139b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x2b3bc3e2d020" loc="151:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="146:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b3bc3434608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x2b3bc3e2e740" loc="144:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="138:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b3bc3434608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b3bc3e320d8" loc="92:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="86:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b3bc3d139b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x2b3bc3e27020" loc="64:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b3bc3434608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b3bc3e28ce8" loc="64:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b3bc3434608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x2b3bc3e305b8" loc="129:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="116:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b3bc3434608"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b3bc3434608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b3bc3e30020" loc="129:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b3bc3434608"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b3bc3e30338" loc="129:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b3bc3434608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x2b3bc3e27a60" loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b3bc3434608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b3bc3e277f0" loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b3bc3434608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b3bc3e25258" loc="78:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Init.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b3bc3e49870" loc="62:/opt/tinyos-2.1.2/tos/interfaces/Init.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b3bc3d261a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x2b3bc3e4d810" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b3bc3433b98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b3bc3434608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x2b3bc3e4d5a0" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b3bc3434608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x2b3bc3e50020" loc="31:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b3bc3433b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x2b3bc3e50a18" loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b3bc3434608"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b3bc3434608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2b3bc3e507a8" loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b3bc3434608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x2b3bc3e4e4d0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b3bc3434608"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b3bc3434608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2b3bc3e4e260" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b3bc3434608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x2b3bc3e4ed18" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x2b3bc3e59dc0" loc="44:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x2b3bc3e654c8" loc="45:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b3bc3d139b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x2b3bc3e59070" loc="42:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x2b3bc3e64290" loc="47:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b3bc3d139b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b3bc3e59710" loc="43:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b3bc3d139b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x2b3bc3e65b80" loc="46:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b3bc3e5a328" loc="40:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x2b3bc3e5a998" loc="41:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b3bc3d15968" loc="57:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x2b3bc3d21878" loc="72:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x2b3bc3d210d8" loc="65:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b3bc3d139b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x2b3bc3d23608" loc="67:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b3bc3d261a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x2b3bc3d23df8" loc="75:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x2b3bc3ddbca0" loc="76:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/opt/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x2b3bc3dfe328" loc="62:/opt/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x2b3bc3d80940"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x2b3bc3df4e60" loc="52:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b3bc4033518" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b3bc4033518"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b3bc4033da8" loc="61:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b3bc3434608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b3bc404fa50" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b3bc404fa50"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b3bc404fc80" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b3bc404fc80"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b3bc404c548" loc="64:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b3bc404fc80"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2b3bc404b590" loc="76:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2b3bc404cd60" loc="71:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b3bc3d139b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b3bc404bc80" loc="82:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b3bc4043738" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b3bc4043738"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b3bc4043968" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b3bc4043968"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b3bc4052290" loc="109:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b3bc4043968"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b3bc403f418" loc="78:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x2b3bc4053920" loc="103:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b3bc4043968"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b3bc4043968"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b3bc4053380" loc="103:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b3bc4043968"/></type-var>
          </variable>
          <variable name="dt" ref="0x2b3bc40536a0" loc="103:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b3bc4043968"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b3bc403fb88" loc="88:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b3bc3d139b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x2b3bc4052a10" loc="116:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b3bc4043968"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b3bc40404a8" loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b3bc4043968"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b3bc4040238" loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b3bc4043968"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b3bc4040c78" loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControl" ref="0x2b3bc407d110" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b3bc3dada08"/>
            <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2b3bc3dade10"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x2b3bc407b4c0" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b3bc3dba100"/>
            <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2b3bc3dba508"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x2b3bc407c328" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b3bc3db2980"/>
            <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2b3bc3db2d88"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x2b3bc407cce0" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b3bc3db2980"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2b3bc3db2d88"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x2b3bc407ca70" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b3bc3db2980"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2b3bc3db2d88"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x2b3bc407be78" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b3bc3dba100"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2b3bc3dba508"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x2b3bc407bc08" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b3bc3dba100"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2b3bc3dba508"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x2b3bc407dae0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b3bc3dada08"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2b3bc3dade10"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b3bc407d870" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b3bc3dada08"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2b3bc3dade10"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="15:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="controlBusy" ref="0x2b3bc4085c30" loc="38:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; @return TRUE if TCCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareBusy" ref="0x2b3bc4084450" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; @return TRUE if OCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer0Asynchronous" ref="0x2b3bc4085528" loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="29:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 0 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x2b3bc4084c00" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; @return TRUE if TCNT0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x2b3bc4086378" loc="21:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="17:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer0 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b3bc3db4118"/>
            <typename><typedef-ref name="Atm128Assr_t" ref="0x2b3bc3db4520"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x2b3bc4086d28" loc="27:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="23:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer0 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b3bc3db4118"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x2b3bc3db4520"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b3bc4086ab8" loc="27:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b3bc3db4118"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x2b3bc3db4520"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x2b3bc407f5b8" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b3bc407f5b8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x2b3bc408cc50" loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b3bc3d139b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b3bc4076020" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b3bc407fe70" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b3bc407f5b8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b3bc4076728" loc="62:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b3bc408b3e0" loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b3bc3d139b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b3bc40777e0" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b3bc407f5b8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b3bc4077570" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b3bc407f5b8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b3bc4076e20" loc="65:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b3bc408c538" loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x2b3bc4075870" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b3bc4075870"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x2b3bc406d020" loc="98:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2b3bc406e020" loc="87:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b3bc3d139b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b3bc4072178" loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b3bc4075870"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x2b3bc406d970" loc="104:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x2b3bc406d700" loc="104:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x2b3bc406b178" loc="110:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b3bc4071978" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b3bc4071258" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b3bc406e778" loc="93:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b3bc3d139b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b3bc4072ab0" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b3bc4075870"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b3bc4072840" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b3bc4075870"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b3bc406f0d8" loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b3bc406f7c0" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
      <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x2b3bc41fb838" loc="120:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="104:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b3bc3d261a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x2b3bc41fc910" loc="97:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b3bc3d261a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x2b3bc41fc020" loc="88:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b3bc3d261a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x2b3bc41fb0d8" loc="102:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="99:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x2b3bc41fa258" loc="128:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="122:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b3bc3d139b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x2b3bc421b5b0" loc="68:/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x2b3bc41fede0" loc="61:/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b3bc3d261a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x2b3bc41fe6e0" loc="54:/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b3bc3d261a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x2b3bc4202e70" loc="53:/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b3bc3d261a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="MicaBusAdc" loc="16:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusAdc.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusAdc.nc">
        <short>&#10; A simplistic beginning to providing a standard interface to the mica-family&#10; 51-pin bus.</short>
        <long>&#10; A simplistic beginning to providing a standard interface to the mica-family&#10; 51-pin bus. Just provides the PW0-PW7 digital I/O pins.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getChannel" ref="0x2b3bc4216af0" loc="20:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusAdc.nc">
        <documentation loc="17:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusAdc.nc">
          <short>&#10; Return the A/D channel number to use for one of the ADCn pins.</short>
          <long>&#10; Return the A/D channel number to use for one of the ADCn pins.&#10;</long>
        </documentation>
        <interfacedef-ref qname="MicaBusAdc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Interrupt" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; </short>
        <long>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; @author Joe Polastre&#10; @author Martin Turon&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2b3bc4236708" loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Clears the ATmega128 Interrupt Pending Flag for a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b3bc4233070" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x2b3bc4236020" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Disables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x2b3bc4234868" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b3bc3d139b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x2b3bc42345f8" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b3bc3d139b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x2b3bc42398e0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Enables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x2b3bc4236e48" loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port&#10;&#10; </short>
          <long> &#10; Gets the current value of the input voltage of a port&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b3bc3d139b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128InterruptSig" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).</short>
        <long>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @see HplAtm128Interrupt&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x2b3bc4248d28" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
          <short>&#10; Signalled when an interrupt occurs on a pin&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcConfig" loc="19:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
      <documentation loc="13:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <short>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.</short>
        <long>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRefVoltage" ref="0x2b3bc42b8b60" loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="27:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain reference voltage&#10; </short>
          <long>&#10; Obtain reference voltage&#10; @return The reference voltage to use. Must be one of the &#10;   ATM128_ADC_VREF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x2b3bc42b8378" loc="25:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="20:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain channel.</short>
          <long>&#10; Obtain channel.&#10; @return The A/D channel to use. Must be one of the ATM128_ADC_SNGL_xxx&#10;   or ATM128_ADC_DIFF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPrescaler" ref="0x2b3bc42d8378" loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain prescaler value.</short>
          <long>&#10; Obtain prescaler value.&#10; @return The prescaler value to use. Must be one of the &#10;   ATM128_ADC_PRESCALE_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x2b3bc42d0ba0" loc="53:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x2b3bc42cd498" loc="61:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x2b3bc42e47d0" loc="65:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x2b3bc42e4020" loc="59:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x2b3bc42cb850" loc="56:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b3bc3d261a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x2b3bc42ca8a0" loc="73:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x2b3bc42cb030" loc="46:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x2b3bc42ca0d8" loc="65:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b3bc3d139b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x2b3bc42e81d8" loc="81:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x2b3bc42cee40" loc="90:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b3bc3d139b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x2b3bc42e6650" loc="98:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x2b3bc42db620" loc="79:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b3bc3d261a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b3bc42e38a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b3bc42db3b0" loc="79:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b3bc42e38a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x2b3bc42dd720" loc="53:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b3bc3d139b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x2b3bc42dc290" loc="62:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b3bc3d139b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b3bc42e38a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b3bc42dc020" loc="62:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b3bc42e38a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x2b3bc42dcb30" loc="70:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x2b3bc42e38a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x2b3bc4351a48" loc="113:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b3bc3d261a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b3bc43517d8" loc="113:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b3bc3d261a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x2b3bc4350e38" loc="138:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b3bc3d261a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b3bc4350bc8" loc="138:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b3bc3d261a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b3bc4354c10" loc="104:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b3bc3d261a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b3bc4350258" loc="130:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b3bc3d261a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:/opt/tinyos-2.1.2/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x2b3bc43708d8" loc="62:/opt/tinyos-2.1.2/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
      <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2b3bc43692a8" loc="95:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b3bc3d261a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b3bc4369a48" loc="105:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
        <documentation loc="97:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b3bc3d261a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadNow" loc="52:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
        <short>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values.</short>
        <long>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values. The type of the value is given as a&#10; template argument. Because this interface is split-phase, these&#10; values may be backed by hardware. Providers of this interface&#10; should also provide a Resource interface, and this interface should&#10; only be used after the resource has been acquired. Otherwise, the&#10; low-latency requirement may be impossible to meet.&#10;&#10; &#60;p>&#10; This interface has the same calling semantics as the Read interface&#10; described in TEP 114, except that it is async.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-16 18:58:51 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x2b3bc43ee940" loc="52:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
          <interfacedef-ref qname="ReadNow"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b3bc43ee940"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x2b3bc43eb1d8" loc="58:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b3bc3d261a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x2b3bc43e9020" loc="66:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
        <documentation loc="60:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b3bc3d261a8"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b3bc43ee940"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x2b3bc43eb920" loc="66:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b3bc3d261a8"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x2b3bc43ebc20" loc="66:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b3bc43ee940"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcMultiple" loc="77:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.&#10; &#60;p>&#10; Because of the possibility that samples may be imprecise after &#10; switching channels and/or reference voltages, and because there&#10; is a one sample delay on swithcing channels and reference voltages,&#10; Atm128ADCMultiple is complex. Two straightforward uses are:&#10; &#60;ol type=&#34;A&#34;>&#10; &#60;li>Acquire N samples from channel C:&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C at the desired rate&#10;       (note that the choice of prescalers is very limited, so you&#10;       don't have many choices for sampling rate)&#10;    &#60;li>ignore the first dataReady event&#10;    &#60;li>use the results of the next N dataReady() events, return FALSE&#10;       on the last one&#10;    &#60;/ol>&#10; &#60;li>Acquire one sample each from channels C1, ..., Cn (this pseudocode&#10;    assumes that none of these channels are differential)&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C1&#10;    &#60;li>on the ith dataReady event switch to channel Ci+1 by changing&#10;       *newChannel&#10;    &#60;li>the data passed to the ith dataReady event is for channel Ci-1&#10;       (the data from the first dataReady event is ignored)&#10;    &#60;/ol>&#10; &#60;/ol>&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x2b3bc43ff768" loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="79:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.</short>
          <long>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.&#10;&#10; @param channel Initial A/D conversion channel. The channel can &#10;   be changed in the dataReady event, though these changes happen&#10;   with a one-sample delay (this is a hardware restriction).&#10; @param refVoltage Initial A/D reference voltage. See the&#10;   ATM128_ADC_VREF_xxx constants in Atm128ADC.h. Like the channel,&#10;   the reference voltage can be changed in the dataReady event with&#10;   a one-sample delay.&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in reference voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b3bc3d139b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b3bc3d139b8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x2b3bc4400a60" loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x2b3bc4400db8" loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x2b3bc43ff178" loc="101:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b3bc3d139b8"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x2b3bc43ff4c8" loc="101:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x2b3bc43fd3f0" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="103:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Returns the next sample in a free-running conversion.</short>
          <long>&#10; Returns the next sample in a free-running conversion. Allow the user&#10; to switch channels and/or reference voltages with a one sample delay.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if this conversion was precise, FALSE if it wasn't &#10;   (we assume that the second conversion after a change of reference&#10;   voltage or after switching to a differential channel is precise)&#10; @param channel Channel this sample was from.&#10; @param newChannel Change this parameter to switch to a new channel&#10;   for the second next sample.&#10; @param newRefVoltage Change this parameter to change the reference &#10;   voltage for the second next sample.&#10;&#10; @return TRUE to continue sampling, FALSE to stop.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b3bc3d139b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b3bc3433b98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b3bc3d139b8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b3bc43fe368" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b3bc3433b98"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x2b3bc43fe688" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b3bc3d139b8"/></typename>
            </type-int>
          </variable>
          <variable name="channel" ref="0x2b3bc43fe9c0" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </variable>
          <variable name="newChannel" ref="0x2b3bc43fed70" loc="120:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="newRefVoltage" ref="0x2b3bc43fd140" loc="120:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcSingle" loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x2b3bc43df440" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Initiates an ADC conversion on a given channel.</short>
          <long>&#10; Initiates an ADC conversion on a given channel.&#10;&#10; @param channel A/D conversion channel.&#10; @param refVoltage Select reference voltage for A/D conversion. See&#10;   the ATM128_ADC_VREF_xxx constants in Atm128ADC.h&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in refernce voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b3bc3d139b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b3bc3d139b8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x2b3bc43e0738" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x2b3bc43e0a90" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x2b3bc43e0df8" loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b3bc3d139b8"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x2b3bc43df1a0" loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b3bc43dec80" loc="91:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Cancel an outstanding getData operation.</short>
          <long>&#10; Cancel an outstanding getData operation. Use with care, to&#10; avoid problems with races between the dataReady event and cancel.&#10; @return TRUE if a conversion was in-progress or an interrupt&#10;   was pending. dataReady will not be signaled. FALSE if the&#10;   conversion was already complete. dataReady will be (or has&#10;   already been) signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b3bc3d139b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x2b3bc43de408" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.</short>
          <long>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if the conversion precise, FALSE if it wasn't. This&#10;   values matches the result from the &#60;code>getData&#60;/code> call.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b3bc3433b98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b3bc3d139b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b3bc43dfe48" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b3bc3433b98"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x2b3bc43de188" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b3bc3d139b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Adc" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <short>&#10; HPL interface to the Atmega128 A/D conversion subsystem.</short>
        <long>&#10; HPL interface to the Atmega128 A/D conversion subsystem. Please see the&#10; Atmega128 manual for full details on the functioning of this subsystem.&#10; &#60;p>&#10; A word of warning: the Atmega128 SLEEP instruction initiates an A/D&#10; conversion when the ADC and ADC interrupt are enabled.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSingle" ref="0x2b3bc44110d8" loc="114:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="111:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdmux" ref="0x2b3bc43f31d8" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Read the ADMUX (ADC selection) register&#10; @return Current ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b3bc3d9d020"/>
            <typename><typedef-ref name="Atm128Admux_t" ref="0x2b3bc3d9d4d8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPrescaler" ref="0x2b3bc440f338" loc="140:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="135:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set ADC prescaler selection bits&#10; </short>
          <long>&#10; Set ADC prescaler selection bits&#10; @param scale New ADC prescaler. Must be one of the ATM128_ADC_PRESCALE_xxx&#10;   values from Atm128Adc.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x2b3bc440f0c8" loc="140:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b3bc3433160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x2b3bc4411918" loc="122:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="118:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is ADC enabled?&#10; </short>
          <long>&#10; Is ADC enabled?&#10; @return TRUE if the ADC is enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b3bc3d139b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAdc" ref="0x2b3bc43f0d18" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="79:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdmux" ref="0x2b3bc43f3bb0" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Set the ADMUX (ADC selection) register&#10; @param admux New ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b3bc3d9d020"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x2b3bc3d9d4d8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="admux" ref="0x2b3bc43f3940" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b3bc3d9d020"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x2b3bc3d9d4d8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterruption" ref="0x2b3bc43efb88" loc="91:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isComplete" ref="0x2b3bc4410870" loc="133:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="128:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.</short>
          <long>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.&#10; @return TRUE if the A/D conversion is complete, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b3bc3d139b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b3bc440fad0" loc="150:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="142:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Cancel A/D conversion and any pending A/D interrupt.</short>
          <long>&#10; Cancel A/D conversion and any pending A/D interrupt. Also disables the&#10; ADC interruption (otherwise a sample might start at the next sleep&#10; instruction). This command can assume that the A/D converter is enabled. &#10; @return TRUE if an A/D conversion was in progress or an A/D interrupt&#10;   was pending, FALSE otherwise. In single conversion mode, a return&#10;   of TRUE implies that the dataReady event will not be signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b3bc3d139b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAdc" ref="0x2b3bc43ef448" loc="86:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetInterrupt" ref="0x2b3bc4414a48" loc="99:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="96:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Clear the ADC interrupt flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableInterruption" ref="0x2b3bc4414328" loc="95:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="92:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startConversion" ref="0x2b3bc44131d8" loc="106:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="101:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Start ADC conversion.</short>
          <long>&#10; Start ADC conversion. If ADC interrupts are enabled, the dataReady event&#10; will be signaled once (in non-continuous mode) or repeatedly (in&#10; continuous mode).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isStarted" ref="0x2b3bc44100d8" loc="127:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="123:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion in progress?&#10; </short>
          <long>&#10; Is A/D conversion in progress?&#10; @return TRUE if the A/D conversion is in progress, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b3bc3d139b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdcsra" ref="0x2b3bc43f2dd0" loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Set the ADCSRA (ADC control) register&#10; @param adcsra New ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b3bc3da3a10"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x2b3bc3da1178"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="adcsra" ref="0x2b3bc43f2b60" loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b3bc3da3a10"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x2b3bc3da1178"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setContinuous" ref="0x2b3bc4413990" loc="110:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="107:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdcsra" ref="0x2b3bc43f23e0" loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Read the ADCSRA (ADC control) register&#10; @return Current ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b3bc3da3a10"/>
            <typename><typedef-ref name="Atm128Adcsra_t" ref="0x2b3bc3da1178"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x2b3bc43f05b8" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the latest A/D conversion result&#10; </short>
          <long>&#10; Read the latest A/D conversion result&#10; @return A/D value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b3bc3433b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x2b3bc440d640" loc="156:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="152:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; A/D interrupt occured&#10; </short>
          <long>&#10; A/D interrupt occured&#10; @param data Latest A/D conversion result&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b3bc3433b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b3bc440d3d0" loc="156:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b3bc3433b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2b3bc43f6020" loc="95:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b3bc3d261a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b3bc43f67f8" loc="105:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b3bc3d261a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
